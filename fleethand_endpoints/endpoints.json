[
  {
    "id": "POST__api_activities_assign",
    "method": "POST",
    "path": "/api/activities/assign",
    "category": "activities",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "https",
        "description": "//api-preprod.fleethand.com Please contact your sales manager to",
        "type": "string",
        "required": false
      },
      {
        "name": "key",
        "description": "Please contact your sales manager to",
        "type": "string",
        "required": false
      },
      {
        "name": "id",
        "description": "Please contact your sales manager to",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n                     \"code\": \"ANSWER_LT\", \n                     \"idx\": 1, \n\n=== Страница 10 ===\n \n10 \n                     \"titleEn\": \"LT\", \n                     \"answerValue\": \"buy_vignette_lt\", \n                     \"questions\": [] \n                   }",
    "response": "{ \n   \"status\":200, \n   \"payload\":OK \n}",
    "auth_required": true,
    "full_context": " presence in country \n286 \nTracking history \n288 \nGet track period info \n288 \nVehicles \n294 \nDeactivate vehicle \n294 \nGet vehicles \n294 \nUpdate vehicle info \n297 \nSimple vehicle info update \n298 \nVehicles groups \n299 \nGet vehicles groups \n299 \nUpsert vehicles group \n301 \nAdd vehicles to vehicle group \n303 \nRemove vehicles from vehicle group \n304 \nDelete vehicle group \n305 \nUsers \n306 \nGet users actions \n306 \n \n \n \n \n \n \n \n \n\n=== Страница 6 ===\n \n6 \nCredentials \n \nParameter \nValue             \nDescription \nBase URL \nhttps://api-preprod.fleethand.com Please contact your sales manager to \nreceive the production environment base \nURL. \nAPI key \n- \nPlease contact your sales manager to \nreceive the production environment API \nkey. \nExternal \nid \n- \nPlease contact your sales manager to \nreceive the production environment \nExternal id. \n \n \n \n\n=== Страница 7 ===\n \n7 \nFleethand API \n \nActivities \n \nAssign activities \nThis method assigns a list of activities to the provided vehicle. \n \nRequest \nMethod \nURL \nPOST \n/api/activities/assign \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \nFleethand vehicle id. \n \nRequest body \nRequest body \n[ \n    11,  \n    12,  \n    25 \n] \n \n\n=== Страница 8 ===\n \n8 \nRequest model \nAttribute \nData type \nDescription \nactivity \nList<Long> \nA collection of activity ids to be \nassigned. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":OK \n} \n \n \n\n=== Страница 9 ===\n \n9 \nCreate activities configuration \nThis method creates an activity configuration which can be later assigned and shown in the driver's application. \n \nRequest \nMethod \nURL \nPOST \n/api/activities \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n \"activit"
  },
  {
    "id": "POST__api_activities",
    "method": "POST",
    "path": "/api/activities",
    "category": "activities",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "code": "ANSWER_TODAY",
      "idx": 1,
      "titleEn": "Today",
      "answerValue": "buy_vignette_one_day_today",
      "questions": []
    },
    "response": "{ \n   \"status\":200, \n   \"payload\":OK \n}",
    "auth_required": true,
    "full_context": "manager to \nreceive the production environment \nExternal id. \n \n \n \n\n=== Страница 7 ===\n \n7 \nFleethand API \n \nActivities \n \nAssign activities \nThis method assigns a list of activities to the provided vehicle. \n \nRequest \nMethod \nURL \nPOST \n/api/activities/assign \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \nFleethand vehicle id. \n \nRequest body \nRequest body \n[ \n    11,  \n    12,  \n    25 \n] \n \n\n=== Страница 8 ===\n \n8 \nRequest model \nAttribute \nData type \nDescription \nactivity \nList<Long> \nA collection of activity ids to be \nassigned. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":OK \n} \n \n \n\n=== Страница 9 ===\n \n9 \nCreate activities configuration \nThis method creates an activity configuration which can be later assigned and shown in the driver's application. \n \nRequest \nMethod \nURL \nPOST \n/api/activities \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n \"activities\": [ \n   { \n     \"code\": \"ACTIVITY_BUY\", \n     \"titleEn\": \"Buy\", \n     \"idx\": 15, \n     \"questions\": [ \n       { \n         \"code\": \"QUESTION_BUY_WHAT\", \n         \"idx\": 1, \n         \"type\": \"SELECTION\", \n         \"titleEn\": \"What?\", \n         \"answers\": [ \n           { \n             \"code\": \"ANSWER_VIGNETE\", \n             \"idx\": 1, \n             \"titleEn\": \"Road Toll Vignette\", \n             \"questions\": [ \n               { \n                 \"code\": \"QUESTION_COUNTRY\", \n                 \"idx\": 1, \n                 \"type\": \"SELECTION\", \n                 \"titleEn\": \"For which country?\", \n                 \"answers\": [ \n                   { \n                     \"code\": \"ANSWER_LT\", \n                     \"idx\": 1, \n\n=== Страница 10 ===\n \n10 \n                     \"titleE"
  },
  {
    "id": "GET__api_activities",
    "method": "GET",
    "path": "/api/activities",
    "category": "activities",
    "description": "activities:",
    "parameters": [],
    "request_body": {
      "code": "DAY_PICKER",
      "value": "2022-09-12",
      "questions": []
    },
    "response": null,
    "auth_required": true,
    "full_context": "  infoRu \nvarchar(256) \nno \n \n         infoDe \nvarchar(256) \nno \n \n         infoPl \nvarchar(256) \nno \n \n         documentId \nbigint \nno \nFleethand document ID. \n         instructionId \nbigint \nno \nFleethand instruction \nID. \n         answerValue \ntext \nno \nValue to be returned \nfor selection type \nquestions. \n         questions: \nArray<Question> \nno \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n\n=== Страница 15 ===\n \n15 \n   \"payload\":[ \n      { \n         \"activityId\": 10, \n         \"code\": \"ACTIVITY_BUY\" \n      }, \n      { \n         \"activityId\":11, \n         \"code\": \"ACTIVITY_CHECK\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \nactivities: \n \n \n  activityId \nbigint \nFleethand activity id, which \nis later used for assigning. \n  code \nvarchar(256) \nActivity code for mapping \npurposes. \n \n \n \n\n=== Страница 16 ===\n \n16 \nGet filled activities \nThis method returns filled activities from the driver by providing the last activity id. \n \nRequest \nMethod \nURL \nGET \n/api/activities \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nlastActivityId \nLong \nyes \nLast biggest received activity id. If it \nis called the first time 0 should be \nused. \ncodes \nArray<String> \nfalse \nIf present, only activities with \nspecified codes will be returned. \n \nResponse example \nStatus \nResponse \n200 \n\"largestActivityId\": 1, \n\"activities\": [  \n  { \n   \"id\": 1, \n   \"vehicleId\": 1225, \n   \"vinCode\": \"ABC1234567891011\", \n   \"code\": \"ACTIVITY_BUY\", \n   \"filledAt\": \"2023-06-19T14:41:00\", \n   \"questions\": [ \n     { \n      \"code\": \"QUESTION_BUY_WHAT\", \n      \"type\": \"SELECTION\", \n      \"answer\": { \n         \"code\": \"ANSWER_VIGNETE\", \n         \"value\": \"buy_vignette\", \n\n=== Страница 17 ===\n \n17 \n         \"questions\": [ \n           { \n             \"code\": \"QUESTION_COUNTRY\", \n             \"type\": \"SEL"
  },
  {
    "id": "GET__api_activities_activity",
    "method": "GET",
    "path": "/api/activities/activity",
    "category": "activities",
    "description": "largestActivityId",
    "parameters": [],
    "request_body": "{ \n             \"code\": \"ANSWER_LUX\", \n\n=== Страница 20 ===\n \n20 \n             \"value\": \"buy_vignette_lux\", \n             \"questions\": [] \n            }",
    "response": null,
    "auth_required": true,
    "full_context": "          \"questions\": [] \n                   } \n                 } \n                ] \n               } \n             } \n           ] \n         } \n       } \n     ] \n   } \n ] \n} \n \nResponse model \nAttribute \nData type \nDescription \nlargestActivityId \nLong \nID to be used for further \nactivity fetching. \nactivities: \nArray<Activity> \n \n  id \nLong \n \n  vehicleId \nLong \n \n  vinCode \nvarchar(250) \n \n\n=== Страница 18 ===\n \n18 \n  code \nvarchar(256) \n \n  filledAt \nLocalDateTime \n \n  questions: \nArray<Question> \n \n    code \nvarchar(256) \n \n    type \nvarchar(255) \n \n    answer: \n \n \n      code \nvarchar(256) \n \n      value \nObject \nDepends on question type. If \nthe question type equals \n“DOCUMENT”, “PICTURE” or \n“SIGNATURE” - a token will \nbe returned. How to get file \n- check “Get filled \nactivities files” endpoint. \n      questions: \nArray<Question> \n \n \n\n=== Страница 19 ===\n \n19 \nGet filled activity \nThis method returns filled activity from the driver by providing the activity id. \n \nRequest \nMethod \nURL \nGET \n/api/activities/activity \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nactivityId \nLong \nyes \n \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n \"id\": 1, \n \"vehicleId\": 1225, \n \"vinCode\": \"ABC1234567891011\", \n \"code\": \"ACTIVITY_BUY\", \n \"filledAt\": \"2023-06-19T14:41:00\", \n \"questions\": [ \n   { \n    \"code\": \"QUESTION_BUY_WHAT\", \n    \"type\": \"SELECTION\", \n    \"answer\": { \n      \"code\": \"ANSWER_VIGNETE\", \n      \"value\": \"buy_vignette\", \n      \"questions\": [ \n         { \n          \"code\": \"QUESTION_COUNTRY\", \n          \"type\": \"SELECTION\", \n          \"answer\": { \n             \"code\": \"ANSWER_LUX\", \n\n=== Страница 20 ===\n \n20 \n             \"value\": \"buy_vignette_lux\", \n             \"questions\": [] \n            } \n           }, \n           { \n            \"code\": \"QUESTION_PERIOD\", \n            \"type\": \"SELECTION\","
  },
  {
    "id": "GET__api_activities_file-pdf",
    "method": "GET",
    "path": "/api/activities/file-pdf",
    "category": "activities",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "country": "de",
      "distance": 205.0,
      "beginPosition": "48.98015, 8.158865",
      "endPosition": "50.76395, 3.16532",
      "beginMileage": 212793.525,
      "endMileage": 212998.525,
      "beginFuelLevel": 100,
      "beginFuelLevelLiters": 1200.0,
      "endFuelLevel": 66,
      "endFuelLevelLiters": 805.2,
      "startDate": "2021-01-31T11:56:10.464",
      "endDate": "2021-02-02T14:56:10.464",
      "vehiclePlateNumber": "ABC123"
    },
    "response": {
      "status": 200,
      "payload": "9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v"
    },
    "auth_required": true,
    "full_context": "code\": \"DAY_PICKER\", \n                    \"value\": \"2022-09-12\", \n                    \"questions\": [] \n                   } \n                 } \n               ] \n             } \n           } \n         ] \n       } \n     } \n    ] \n  } \n ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \nActivity \n \n  id \nLong \n \n  vehicleId \nLong \n \n  vinCode \nvarchar(250) \n \n  code \nvarchar(256) \n \n  filledAt \nLocalDateTime \n \n  questions: \nArray<Question> \n \n    code \nvarchar(256) \n \n    type \nvarchar(255) \n \n\n=== Страница 21 ===\n \n21 \n    answer: \n \n \n      code \nvarchar(256) \n \n      value \nObject \nDepends on question type. If \nthe question type equals \n“DOCUMENT”, “PICTURE” or \n“SIGNATURE” - a token will \nbe returned. How to get file \n- check “Get filled \nactivities files” endpoint. \n      questions: \nArray<Question> \n \n \n \n \n \n\n=== Страница 22 ===\n \n22 \n \nGet filled activities file pdf \nThis method returns drivers filled activity file in pdf format by provided token. \n \nRequest \nMethod \nURL             \nGET \n/api/activities/file-pdf \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ntoken \nString \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v\" \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload \nbyte array \n \n \n \n\n=== Страница 23 ===\n \n23 \nGet filled activities files \nThis method returns drivers filled activity files which are assigned to API key account. \n \nRequest \nMethod \nURL             \nPOST \n/api/activities/files \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n[ \n   \"812aa122-fe82-43eb-af40-d7350336477c\", \n   \"a60e261d-9711-4ddd-9c71-4d13d6cf6e07\" \n] \n \nRequest model \nAttribute \n"
  },
  {
    "id": "POST__api_activities_files",
    "method": "POST",
    "path": "/api/activities/files",
    "category": "activities",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "country": "de",
      "distance": 205.0,
      "beginPosition": "48.98015, 8.158865",
      "endPosition": "50.76395, 3.16532",
      "beginMileage": 212793.525,
      "endMileage": 212998.525,
      "beginFuelLevel": 100,
      "beginFuelLevelLiters": 1200.0,
      "endFuelLevel": 66,
      "endFuelLevelLiters": 805.2,
      "startDate": "2021-01-31T11:56:10.464",
      "endDate": "2021-02-02T14:56:10.464",
      "vehiclePlateNumber": "ABC123"
    },
    "response": {
      "status": 200,
      "payload": "9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v"
    },
    "auth_required": true,
    "full_context": " type equals \n“DOCUMENT”, “PICTURE” or \n“SIGNATURE” - a token will \nbe returned. How to get file \n- check “Get filled \nactivities files” endpoint. \n      questions: \nArray<Question> \n \n \n \n \n \n\n=== Страница 22 ===\n \n22 \n \nGet filled activities file pdf \nThis method returns drivers filled activity file in pdf format by provided token. \n \nRequest \nMethod \nURL             \nGET \n/api/activities/file-pdf \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ntoken \nString \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v\" \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload \nbyte array \n \n \n \n\n=== Страница 23 ===\n \n23 \nGet filled activities files \nThis method returns drivers filled activity files which are assigned to API key account. \n \nRequest \nMethod \nURL             \nPOST \n/api/activities/files \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n[ \n   \"812aa122-fe82-43eb-af40-d7350336477c\", \n   \"a60e261d-9711-4ddd-9c71-4d13d6cf6e07\" \n] \n \nRequest model \nAttribute \nData type \nDescription \ntoken \nList<String> \nA collection of strings \n(tokens). \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v\" \n} \n \nResponse model \nAttribute \nData type \nDescription \n\n=== Страница 24 ===\n \n24 \npayload \nbyte array \n \n \n \n\n=== Страница 25 ===\n \n25 \n \nCountries \n \nGet country crossing intervals \nThis method returns country crossings of a tracking object for a period of time. \n \nRequest \n Method \nURL \nGET \n/api/country-change/crossings \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \n"
  },
  {
    "id": "GET__api_country-change_crossings",
    "method": "GET",
    "path": "/api/country-change/crossings",
    "category": "general",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "country": "de",
      "distance": 205.0,
      "beginPosition": "48.98015, 8.158865",
      "endPosition": "50.76395, 3.16532",
      "beginMileage": 212793.525,
      "endMileage": 212998.525,
      "beginFuelLevel": 100,
      "beginFuelLevelLiters": 1200.0,
      "endFuelLevel": 66,
      "endFuelLevelLiters": 805.2,
      "startDate": "2021-01-31T11:56:10.464",
      "endDate": "2021-02-02T14:56:10.464",
      "vehiclePlateNumber": "ABC123"
    },
    "response": {
      "status": 200,
      "payload": "9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v"
    },
    "auth_required": true,
    "full_context": "rray \n \n \n \n\n=== Страница 23 ===\n \n23 \nGet filled activities files \nThis method returns drivers filled activity files which are assigned to API key account. \n \nRequest \nMethod \nURL             \nPOST \n/api/activities/files \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n[ \n   \"812aa122-fe82-43eb-af40-d7350336477c\", \n   \"a60e261d-9711-4ddd-9c71-4d13d6cf6e07\" \n] \n \nRequest model \nAttribute \nData type \nDescription \ntoken \nList<String> \nA collection of strings \n(tokens). \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v\" \n} \n \nResponse model \nAttribute \nData type \nDescription \n\n=== Страница 24 ===\n \n24 \npayload \nbyte array \n \n \n \n\n=== Страница 25 ===\n \n25 \n \nCountries \n \nGet country crossing intervals \nThis method returns country crossings of a tracking object for a period of time. \n \nRequest \n Method \nURL \nGET \n/api/country-change/crossings \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime \nyes \nTime from which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nyes \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \ndeviceKey \nString \nno (if \ndeviceKey \nis \npresent) \nParameter by which information is taken. \nvinCode \nString \nno (if \ndeviceKey \nis \npresent) \nParameter by which information is taken. \n \n \n\n=== Страница 26 ===\n \n26 \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"country\":\"de\", \n         \"distance\":205.00, \n         \"beginPosition\":\"48.98015, 8.158865\", \n         \"endPosition\":\"50.76395, 3.16532\", \n         \"beginMi"
  },
  {
    "id": "GET__api_country-change",
    "method": "GET",
    "path": "/api/country-change",
    "category": "general",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n\n=== Страница 29 ===\n \n29 \n         \"issuedOn\":\"2021-01-31T11:56:10.464\", \n         \"latitude\":48.98015, \n         \"longitude\":8.158865, \n         \"address\":\"Gatvių g., Vilnius, Lithuania, 01234\", \n         \"driver\":\"UAD000000AABB000\", \n         \"country\":\"de\", \n         \"oldCountry\":\"fr\", \n         \"fuelLevel\":100, \n         \"fuelLevelLiters\":1220, \n         \"odometer\":212793.525, \n         \"vehiclePlateNumber\":\"ABC123\" \n      }",
    "response": null,
    "auth_required": true,
    "full_context": "e\":212998.525, \n         \"endMileage\":213198.525, \n         \"beginFuelLevel\":66, \n         \"beginFuelLevelLiters\":805.2, \n         \"endFuelLevel\":25, \n         \"endFuelLevelLiters\":305.0, \n         \"startDate\":\"2021-02-02T14:56:10.464\", \n         \"endDate\":\"2021-02-03T14:56:10.464\", \n         \"vehiclePlateNumber\":\"ABC123\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  country \ntext \n \n  distance \ndouble \n \n\n=== Страница 27 ===\n \n27 \n  beginPosition \nString \n \n  endPosition \nString \n \n  beginMileage \ndouble \n \n  endMileage \ndouble \n \n  beginFuelLevel \ndouble \n \n  beginFuelLevelLiters \ndouble \n \n  endFuelLevel \ndouble \n \n  endFuelLevelLiters \ndouble \n \n  startDate \ntimestamp \n \n  endDate \ntimestamp \n \n  vehiclePlateNumber \nString \n \n \n \n\n=== Страница 28 ===\n \n28 \nGet country crossings \nThis method returns country crossings of a tracking object for a period of time. \nNOTE: From API v2, the maximum days period for this call is 90 days. \n \nRequest \n Method \nURL \nGET \n/api/country-change \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime \nyes \nTime from which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nyes \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \ndeviceKey \nString \nno (if \nvinCode \nis \npresent) \nParameter by which information is taken. \nvinCode \nString \nno (if \ndeviceKey \nis \npresent) \nParameter by which information is taken. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n\n=== Страница 29 ===\n \n29 \n         \"issuedOn\":\"2021-01-31T11:56:10.464\", \n         \"latitude\":48.98015, \n         \"longitude\":8.158865, \n         \"address\":\"Gatvių g., Vilnius, Lithuania, 01234\", \n        "
  },
  {
    "id": "PUT__api_ddd_cancel-driver",
    "method": "PUT",
    "path": "/api/ddd/cancel-driver",
    "category": "drivers",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n   \"status\":200, \n   \"payload\":\" VwHREFcQ0READQADmXyPgAQQAAAQAAADgBOZfOPgBBBArNAAHDS0NTI28EMyRfB \nGckcwR7RYMFtyXPRfsmIwYnJyIIe8h8CH0IgWixDAHMBwwPLH8OU85UDlkOXW51ENFQ1RDoATgAOZfThABB\nCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcWGzYfFiM2bAD\ngATmX3hAAQRAIyyADQCcgbwCXIJ8ApyCzALshG8KcAqECpUKpYq0DsWO5A8VkUQRVZGE \nhABBCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcW\" \n}",
    "response": {
      "status": 200,
      "payload": "Successfully canceled 2 driver .ddd initiations"
    },
    "auth_required": true,
    "full_context": ", \n         \"fuelLevel\":100, \n         \"fuelLevelLiters\":1220, \n         \"odometer\":212793.525, \n         \"vehiclePlateNumber\":\"ABC123\" \n      }, \n      { \n         \"issuedOn\":\"2021-01-251T11:56:10.464\", \n         \"latitude\":50.76395, \n         \"longitude\":3.16532, \n         \"address\":\"Gatvių g., Vilnius, Lithuania, 01234\", \n         \"driver\":\"UAD000000AABB000\", \n         \"country\":\"fr\", \n         \"oldCountry\":\"be\", \n         \"fuelLevel\":66, \n         \"fuelLevelLiters\":805.2, \n         \"odometer\":212152.120, \n         \"vehiclePlateNumber\":\"ABC123\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  issuedOn \ntimestamp \n \n  latitude \ndouble \n \n  longitude \ndouble \n \n  address \ntext \n \n  driver \ntext \n \n  country \ntext \n \n  oldCountry \ntext \n \n  fuelLevel \ndouble \n \n  odometer \ndouble \n \n \n\n=== Страница 30 ===\n \n30 \n \nDDD files \n \nCancel initiated driver DDD files download \nThis method allows to cancel initiated driver .ddd file downloads. \n \nRequest \nMethod \nURL             \nPUT \n/api/ddd/cancel-driver \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndriverCard String \nyes \nParameter by which information is taken. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"Successfully canceled 2 driver .ddd initiations\" \n} \n \n \n\n=== Страница 31 ===\n \n31 \nCancel initiated vehicle DDD files download \nThis method allows to cancel initiated vehicle .ddd file downloads. \n \nRequest \nMethod \nURL             \nPUT \n/api/ddd/cancel-vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndeviceKey \nString \nyes \nParameter by which information is taken. \nvinCode \nString \nno (if \ndeviceKey \nis \npresent) \nPa"
  },
  {
    "id": "PUT__api_ddd_cancel-vehicle",
    "method": "PUT",
    "path": "/api/ddd/cancel-vehicle",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n   \"status\":200, \n   \"payload\":\" VwHREFcQ0READQADmXyPgAQQAAAQAAADgBOZfOPgBBBArNAAHDS0NTI28EMyRfB \nGckcwR7RYMFtyXPRfsmIwYnJyIIe8h8CH0IgWixDAHMBwwPLH8OU85UDlkOXW51ENFQ1RDoATgAOZfThABB\nCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcWGzYfFiM2bAD\ngATmX3hAAQRAIyyADQCcgbwCXIJ8ApyCzALshG8KcAqECpUKpYq0DsWO5A8VkUQRVZGE \nhABBCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcW\" \n}",
    "response": {
      "status": 200,
      "payload": "Successfully canceled 2 driver .ddd initiations"
    },
    "auth_required": true,
    "full_context": "ription \npayload: \n \n \n  issuedOn \ntimestamp \n \n  latitude \ndouble \n \n  longitude \ndouble \n \n  address \ntext \n \n  driver \ntext \n \n  country \ntext \n \n  oldCountry \ntext \n \n  fuelLevel \ndouble \n \n  odometer \ndouble \n \n \n\n=== Страница 30 ===\n \n30 \n \nDDD files \n \nCancel initiated driver DDD files download \nThis method allows to cancel initiated driver .ddd file downloads. \n \nRequest \nMethod \nURL             \nPUT \n/api/ddd/cancel-driver \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndriverCard String \nyes \nParameter by which information is taken. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"Successfully canceled 2 driver .ddd initiations\" \n} \n \n \n\n=== Страница 31 ===\n \n31 \nCancel initiated vehicle DDD files download \nThis method allows to cancel initiated vehicle .ddd file downloads. \n \nRequest \nMethod \nURL             \nPUT \n/api/ddd/cancel-vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndeviceKey \nString \nyes \nParameter by which information is taken. \nvinCode \nString \nno (if \ndeviceKey \nis \npresent) \nParameter by which information is taken. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"Successfully canceled 2 vehicle .ddd initiations\" \n} \n \n \n \n\n=== Страница 32 ===\n \n32 \nDownload single DDD driver file \nThis method allows to download single driver .ddd file by file ID. \nRequest \nMethod \nURL             \nGET \n/api/ddd/driver-file/download \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfileId \nString \nyes \n \n \nRespon"
  },
  {
    "id": "GET__api_ddd_driver-file_download",
    "method": "GET",
    "path": "/api/ddd/driver-file/download",
    "category": "drivers",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n   \"status\":200, \n   \"payload\":\" VwHREFcQ0READQADmXyPgAQQAAAQAAADgBOZfOPgBBBArNAAHDS0NTI28EMyRfB \nGckcwR7RYMFtyXPRfsmIwYnJyIIe8h8CH0IgWixDAHMBwwPLH8OU85UDlkOXW51ENFQ1RDoATgAOZfThABB\nCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcWGzYfFiM2bAD\ngATmX3hAAQRAIyyADQCcgbwCXIJ8ApyCzALshG8KcAqECpUKpYq0DsWO5A8VkUQRVZGE \nhABBCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcW\" \n}",
    "response": {
      "status": 200,
      "payload": "Successfully canceled 2 driver .ddd initiations"
    },
    "auth_required": true,
    "full_context": "ion is taken. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"Successfully canceled 2 driver .ddd initiations\" \n} \n \n \n\n=== Страница 31 ===\n \n31 \nCancel initiated vehicle DDD files download \nThis method allows to cancel initiated vehicle .ddd file downloads. \n \nRequest \nMethod \nURL             \nPUT \n/api/ddd/cancel-vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndeviceKey \nString \nyes \nParameter by which information is taken. \nvinCode \nString \nno (if \ndeviceKey \nis \npresent) \nParameter by which information is taken. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"Successfully canceled 2 vehicle .ddd initiations\" \n} \n \n \n \n\n=== Страница 32 ===\n \n32 \nDownload single DDD driver file \nThis method allows to download single driver .ddd file by file ID. \nRequest \nMethod \nURL             \nGET \n/api/ddd/driver-file/download \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfileId \nString \nyes \n \n \nResponse example \nSta\nus \nResponse \n200 { \n   \"status\":200, \n   \"payload\":\" VwHREFcQ0READQADmXyPgAQQAAAQAAADgBOZfOPgBBBArNAAHDS0NTI28EMyRfB \nGckcwR7RYMFtyXPRfsmIwYnJyIIe8h8CH0IgWixDAHMBwwPLH8OU85UDlkOXW51ENFQ1RDoATgAOZfThABB\nCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcWGzYfFiM2bAD\ngATmX3hAAQRAIyyADQCcgbwCXIJ8ApyCzALshG8KcAqECpUKpYq0DsWO5A8VkUQRVZGE \nhABBCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcW\" \n} \nResponse model \nAttribute \nData type \nDescription \npayload \nbyte array \n \n\n=== Страница 33 ===\n \n33 \nDownload single DDD Vehicle file \nThis method allows to download single vehicle .ddd file by file ID. \nRequest \nMethod \nURL             \nGET \n"
  },
  {
    "id": "GET__api_ddd_vehicle-file_download",
    "method": "GET",
    "path": "/api/ddd/vehicle-file/download",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n   \"status\":200, \n   \"payload\":\" VwHREFcQ0READQADmXyPgAQQAAAQAAADgBOZfOPgBBBArNAAHDS0NTI28EMyRfB \nGckcwR7RYMFtyXPRfsmIwYnJyIIe8h8CH0IgWixDAHMBwwPLH8OU85UDlkOXW51ENFQ1RDoATgAOZfThABB\nCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcWGzYfFiM2bAD\ngATmX3hAAQRAIyyADQCcgbwCXIJ8ApyCzALshG8KcAqECpUKpYq0DsWO5A8VkUQRVZGE \nhABBCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcW\" \n}",
    "response": "{ \n   \"status\":200, \n   \"payload\":\" VwHREFcQ0READQADmXyPgAQQAAAQAAADgBOZfOPgBBBArNAAHDS0NTI28EMyRfB \nGckcwR7RYMFtyXPRfsmIwYnJyIIe8h8CH0IgWixDAHMBwwPLH8OU85UDlkOXW51ENFQ1RDoATgAOZfThABB\nCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcWGzYfFiM2bAD\ngATmX3hAAQRAIyyADQCcgbwCXIJ8ApyCzALshG8KcAqECpUKpYq0DsWO5A8VkUQRVZGE \nhABBCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcW\" \n}",
    "auth_required": true,
    "full_context": "dd file by file ID. \nRequest \nMethod \nURL             \nGET \n/api/ddd/driver-file/download \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfileId \nString \nyes \n \n \nResponse example \nSta\nus \nResponse \n200 { \n   \"status\":200, \n   \"payload\":\" VwHREFcQ0READQADmXyPgAQQAAAQAAADgBOZfOPgBBBArNAAHDS0NTI28EMyRfB \nGckcwR7RYMFtyXPRfsmIwYnJyIIe8h8CH0IgWixDAHMBwwPLH8OU85UDlkOXW51ENFQ1RDoATgAOZfThABB\nCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcWGzYfFiM2bAD\ngATmX3hAAQRAIyyADQCcgbwCXIJ8ApyCzALshG8KcAqECpUKpYq0DsWO5A8VkUQRVZGE \nhABBCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcW\" \n} \nResponse model \nAttribute \nData type \nDescription \npayload \nbyte array \n \n\n=== Страница 33 ===\n \n33 \nDownload single DDD Vehicle file \nThis method allows to download single vehicle .ddd file by file ID. \nRequest \nMethod \nURL             \nGET \n/api/ddd/vehicle-file/download \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfileId \nString \nyes \n \n \nResponse example \nSta\nus \nResponse \n200 { \n   \"status\":200, \n   \"payload\":\" VwHREFcQ0READQADmXyPgAQQAAAQAAADgBOZfOPgBBBArNAAHDS0NTI28EMyRfB \nGckcwR7RYMFtyXPRfsmIwYnJyIIe8h8CH0IgWixDAHMBwwPLH8OU85UDlkOXW51ENFQ1RDoATgAOZfThABB\nCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcWGzYfFiM2bAD\ngATmX3hAAQRAIyyADQCcgbwCXIJ8ApyCzALshG8KcAqECpUKpYq0DsWO5A8VkUQRVZGE \nhABBCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcW\" \n} \nResponse model \nAttribute \nData type \nDescription \npayload \nbyte array \n \n \n \n \n \n\n=== Страница 34 ===\n \n34 \nGet company cards status \nThis method returns all company card statuses which are assigned to the API key. \n \nRequest \nMethod \nURL   "
  },
  {
    "id": "GET__api_ddd_cards",
    "method": "GET",
    "path": "/api/ddd/cards",
    "category": "general",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n   \"status\":200, \n   \"payload\":\" VwHREFcQ0READQADmXyPgAQQAAAQAAADgBOZfOPgBBBArNAAHDS0NTI28EMyRfB \nGckcwR7RYMFtyXPRfsmIwYnJyIIe8h8CH0IgWixDAHMBwwPLH8OU85UDlkOXW51ENFQ1RDoATgAOZfThABB\nCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcWGzYfFiM2bAD\ngATmX3hAAQRAIyyADQCcgbwCXIJ8ApyCzALshG8KcAqECpUKpYq0DsWO5A8VkUQRVZGE \nhABBCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcW\" \n}",
    "response": "{ \n   \"status\":200, \n   \"payload\":\" VwHREFcQ0READQADmXyPgAQQAAAQAAADgBOZfOPgBBBArNAAHDS0NTI28EMyRfB \nGckcwR7RYMFtyXPRfsmIwYnJyIIe8h8CH0IgWixDAHMBwwPLH8OU85UDlkOXW51ENFQ1RDoATgAOZfThABB\nCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcWGzYfFiM2bAD\ngATmX3hAAQRAIyyADQCcgbwCXIJ8ApyCzALshG8KcAqECpUKpYq0DsWO5A8VkUQRVZGE \nhABBCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcW\" \n}",
    "auth_required": true,
    "full_context": "ID. \nRequest \nMethod \nURL             \nGET \n/api/ddd/vehicle-file/download \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfileId \nString \nyes \n \n \nResponse example \nSta\nus \nResponse \n200 { \n   \"status\":200, \n   \"payload\":\" VwHREFcQ0READQADmXyPgAQQAAAQAAADgBOZfOPgBBBArNAAHDS0NTI28EMyRfB \nGckcwR7RYMFtyXPRfsmIwYnJyIIe8h8CH0IgWixDAHMBwwPLH8OU85UDlkOXW51ENFQ1RDoATgAOZfThABB\nCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcWGzYfFiM2bAD\ngATmX3hAAQRAIyyADQCcgbwCXIJ8ApyCzALshG8KcAqECpUKpYq0DsWO5A8VkUQRVZGE \nhABBCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcW\" \n} \nResponse model \nAttribute \nData type \nDescription \npayload \nbyte array \n \n \n \n \n \n\n=== Страница 34 ===\n \n34 \nGet company cards status \nThis method returns all company card statuses which are assigned to the API key. \n \nRequest \nMethod \nURL             \nGET \n/api/ddd/cards \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"cardNumber\":\"1234567891234000\", \n         \"connected\":null, \n         \"status\":\"NO_CONNECTION_DATA\", \n         \"client\":{ \n            \"id\":1, \n            \"value\":\"UAB \\\"Company 1\\\"\" \n         }, \n         \"physicalNumber\":\"0000000001\" \n      }, \n      { \n         \"cardNumber\":\"1234567891235000\", \n         \"connected\":true, \n         \"status\":\"CONNECTED\", \n         \"client\":{ \n            \"id\":2, \n            \"value\":\"UAB \\\"Company 2\\\"\" \n         }, \n         \"physicalNumber\":null \n      } \n   ] \n} \n \n\n=== Страница 35 ===\n \n35 \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  cardNumber \nvarchar(50) \n \n  connected \nBoolean \nMay be null \n  status \nString \nPossible statuses:  \nCONNECTED"
  },
  {
    "id": "GET__api_ddd_companies",
    "method": "GET",
    "path": "/api/ddd/companies",
    "category": "general",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "month",
        "description": "JANUARY, FEBRUARY, MARCH, APRIL,",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n                \"id\": 2, \n                \"imei\": \"00000000000001\", \n                \"driverCardNumber\": null, \n                \"downloadDate\": \"2023-07-03T11:41:15.825\", \n                \"dateFrom\": \"2023-03-30T23:59:59\", \n\n=== Страница 38 ===\n \n38 \n                \"dateTill\": \"2023-06-30T23:59:59\" \n            }",
    "response": "{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"title\":\"UAB FLEETHAND\", \n         \"clientId\":-1, \n         \"country\":\"LTU\", \n      } \n   ] \n}",
    "auth_required": true,
    "full_context": "\n      { \n         \"cardNumber\":\"1234567891234000\", \n         \"connected\":null, \n         \"status\":\"NO_CONNECTION_DATA\", \n         \"client\":{ \n            \"id\":1, \n            \"value\":\"UAB \\\"Company 1\\\"\" \n         }, \n         \"physicalNumber\":\"0000000001\" \n      }, \n      { \n         \"cardNumber\":\"1234567891235000\", \n         \"connected\":true, \n         \"status\":\"CONNECTED\", \n         \"client\":{ \n            \"id\":2, \n            \"value\":\"UAB \\\"Company 2\\\"\" \n         }, \n         \"physicalNumber\":null \n      } \n   ] \n} \n \n\n=== Страница 35 ===\n \n35 \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  cardNumber \nvarchar(50) \n \n  connected \nBoolean \nMay be null \n  status \nString \nPossible statuses:  \nCONNECTED; NOT_CONNECTED; \nNO_CONNECTION_DATA; EXPIRED \n  client: \n \n \n    id \nbigint \n \n    value \nvarchar(255) \n \n  physicalNumber \nvarchar(50) \n \n \n \n\n=== Страница 36 ===\n \n36 \nGet DDD clients \nThis method returns all companies that are assigned to the API key. \n \nRequest \nMethod \nURL             \nGET \n/api/ddd/companies \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"title\":\"UAB FLEETHAND\", \n         \"clientId\":-1, \n         \"country\":\"LTU\", \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \ntitle \nvarchar(256) \n \nclientId \nbigint \n \ncountry \nvarchar(50) \n \n \n \nGet DDD status \nThis method returns .ddd files information which are assigned to the API key. \n\n=== Страница 37 ===\n \n37 \n \nRequest \nMethod \nURL             \nGET \n/api/ddd/info \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nyear \nint \nyes \nRequested year. \nmonth \nString \nyes \nRequested month: JANUARY, FEBRUARY, MARCH, APRIL"
  },
  {
    "id": "GET__api_ddd_info",
    "method": "GET",
    "path": "/api/ddd/info",
    "category": "general",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "month",
        "description": "JANUARY, FEBRUARY, MARCH, APRIL,",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n                \"id\": 2, \n                \"imei\": \"00000000000001\", \n                \"driverCardNumber\": null, \n                \"downloadDate\": \"2023-07-03T11:41:15.825\", \n                \"dateFrom\": \"2023-03-30T23:59:59\", \n\n=== Страница 38 ===\n \n38 \n                \"dateTill\": \"2023-06-30T23:59:59\" \n            }",
    "response": "{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"title\":\"UAB FLEETHAND\", \n         \"clientId\":-1, \n         \"country\":\"LTU\", \n      } \n   ] \n}",
    "auth_required": true,
    "full_context": ") \n \n  connected \nBoolean \nMay be null \n  status \nString \nPossible statuses:  \nCONNECTED; NOT_CONNECTED; \nNO_CONNECTION_DATA; EXPIRED \n  client: \n \n \n    id \nbigint \n \n    value \nvarchar(255) \n \n  physicalNumber \nvarchar(50) \n \n \n \n\n=== Страница 36 ===\n \n36 \nGet DDD clients \nThis method returns all companies that are assigned to the API key. \n \nRequest \nMethod \nURL             \nGET \n/api/ddd/companies \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"title\":\"UAB FLEETHAND\", \n         \"clientId\":-1, \n         \"country\":\"LTU\", \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \ntitle \nvarchar(256) \n \nclientId \nbigint \n \ncountry \nvarchar(50) \n \n \n \nGet DDD status \nThis method returns .ddd files information which are assigned to the API key. \n\n=== Страница 37 ===\n \n37 \n \nRequest \nMethod \nURL             \nGET \n/api/ddd/info \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nyear \nint \nyes \nRequested year. \nmonth \nString \nyes \nRequested month: JANUARY, FEBRUARY, MARCH, APRIL, \nMAY, JUNE, JULY, AUGUST, SEPTEMBER, OCTOBER, \nNOVEMBER, DECEMBER. \n \nResponse example \nStatus \nResponse \n200 \n{ \n    \"status\": 200, \n    \"payload\": { \n        \"driverFiles\": [ \n            { \n                \"id\": 1, \n                \"imei\": null, \n                \"driverCardNumber\": \"1234567891234000\", \n                \"downloadDate\": \"2023-07-04T08:24:51.472\", \n                \"dateFrom\": \"2022-08-14T00:00:00\", \n                \"dateTill\": \"2023-05-31T20:30:00\" \n            } \n        ], \n        \"vehicleFiles\": [ \n            { \n                \"id\": 2, \n                \"imei\": \"00000000000001\", \n                \"driverCardNumber\""
  },
  {
    "id": "GET__api_ddd_drivers-status",
    "method": "GET",
    "path": "/api/ddd/drivers-status",
    "category": "drivers",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "month",
        "description": "JANUARY, FEBRUARY, MARCH, APRIL,",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n                \"id\": 2, \n                \"imei\": \"00000000000001\", \n                \"driverCardNumber\": null, \n                \"downloadDate\": \"2023-07-03T11:41:15.825\", \n                \"dateFrom\": \"2023-03-30T23:59:59\", \n\n=== Страница 38 ===\n \n38 \n                \"dateTill\": \"2023-06-30T23:59:59\" \n            }",
    "response": {
      "status": 200,
      "payload": [
        {
          "downloadTime": "2022-05-18T12:47:00",
          "activitiesFrom": "2021-05-07T00:00:00",
          "activitiesTill": "2022-05-18T01:38:00",
          "driverCard": "0000000116754000"
        },
        {
          "downloadTime": null,
          "activitiesFrom": null,
          "activitiesTill": null,
          "driverCard": "UAD0000004RWO000"
        }
      ]
    },
    "auth_required": true,
    "full_context": " \"vehicleFiles\": [ \n            { \n                \"id\": 2, \n                \"imei\": \"00000000000001\", \n                \"driverCardNumber\": null, \n                \"downloadDate\": \"2023-07-03T11:41:15.825\", \n                \"dateFrom\": \"2023-03-30T23:59:59\", \n\n=== Страница 38 ===\n \n38 \n                \"dateTill\": \"2023-06-30T23:59:59\" \n            } \n        ] \n    } \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  driverFiles: \n \n \n    id \nbigint \n \n    imei \nvarchar(50) \n \n    driverCardNumber \nvarchar(50) \n \n    downloadDate \ntimestamp \n \n    dateFrom \ntimestamp \n \n    dateTill \ntimestamp \n \n  vehicleFiles: \n \n \n    id \nbigint \n \n    imei \nvarchar(50) \n \n    driverCardNumber \nvarchar(50) \n \n    downloadDate \ntimestamp \n \n    dateFrom \ntimestamp \n \n    dateTill \ntimestamp \n \n \n \n \n\n=== Страница 39 ===\n \n39 \nGet last downloaded drivers files info \nThis method returns .ddd files latest information for all the drivers that are assigned to the API key. \n \nRequest \nMethod \nURL             \nGET \n/api/ddd/drivers-status \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n    \"status\": 200, \n    \"payload\": [ \n        { \n            \"downloadTime\": \"2022-05-18T12:47:00\", \n            \"activitiesFrom\": \"2021-05-07T00:00:00\", \n            \"activitiesTill\": \"2022-05-18T01:38:00\", \n            \"driverCard\": \"0000000116754000\" \n        }, \n        { \n            \"downloadTime\": null, \n            \"activitiesFrom\": null, \n            \"activitiesTill\": null, \n            \"driverCard\": \"UAD0000004RWO000\" \n        } \n    ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n    downloadTime \ntimestamp \nDownload time of the last downloaded \ndriver’s .ddd file \n\n=== Страница 40 ===\n \n40 \n    activitiesFrom \ntimestamp \nThe time of the first activity recorded in the \ndriver's .ddd file \n    activitiesTill \nti"
  },
  {
    "id": "GET__api_ddd_vehicles-status",
    "method": "GET",
    "path": "/api/ddd/vehicles-status",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "month",
        "description": "JANUARY, FEBRUARY, MARCH, APRIL,",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "vin": "YV2RT40C0MB325540",
      "downloadTime": "2021-08-26T14:35:05",
      "activitiesFrom": "2021-05-25T23:59:59",
      "activitiesTill": "2021-08-25T13:02:15"
    },
    "response": {
      "status": 200,
      "payload": [
        {
          "vin": "YV2RT40C0MB325540",
          "downloadTime": "2021-08-26T14:35:05",
          "activitiesFrom": "2021-05-25T23:59:59",
          "activitiesTill": "2021-08-25T13:02:15"
        },
        {
          "vin": "YV2RTY0A7MB322799",
          "downloadTime": null,
          "activitiesFrom": null,
          "activitiesTill": null
        }
      ]
    },
    "auth_required": true,
    "full_context": "5-18T12:47:00\", \n            \"activitiesFrom\": \"2021-05-07T00:00:00\", \n            \"activitiesTill\": \"2022-05-18T01:38:00\", \n            \"driverCard\": \"0000000116754000\" \n        }, \n        { \n            \"downloadTime\": null, \n            \"activitiesFrom\": null, \n            \"activitiesTill\": null, \n            \"driverCard\": \"UAD0000004RWO000\" \n        } \n    ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n    downloadTime \ntimestamp \nDownload time of the last downloaded \ndriver’s .ddd file \n\n=== Страница 40 ===\n \n40 \n    activitiesFrom \ntimestamp \nThe time of the first activity recorded in the \ndriver's .ddd file \n    activitiesTill \ntimestamp \nThe time of the last activity recorded in the \ndriver's .ddd file \n    driverCard \nstring \nDriver’s card number with \"00\" ending \n \n \n\n=== Страница 41 ===\n \n41 \nGet last downloaded vehicles files info \nThis method returns .ddd files latest information for all the vehicles that are assigned to the API key. \n \nRequest \nMethod \nURL             \nGET \n/api/ddd/vehicles-status \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n    \"status\": 200, \n    \"payload\": [ \n        { \n            \"vin\": \"YV2RT40C0MB325540\", \n            \"downloadTime\": \"2021-08-26T14:35:05\", \n            \"activitiesFrom\": \"2021-05-25T23:59:59\", \n            \"activitiesTill\": \"2021-08-25T13:02:15\" \n        }, \n        { \n            \"vin\": \"YV2RTY0A7MB322799\", \n            \"downloadTime\": null, \n            \"activitiesFrom\": null, \n            \"activitiesTill\": null \n        } \n    ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n    vin \nstring \nVehicle’s VIN code \n    downloadTime \ntimestamp \nDownload time of the last downloaded \n\n=== Страница 42 ===\n \n42 \nvehicle’s .ddd file \n    activitiesFrom \ntimestamp \nThe time of the first activity recorded in the \nvehicle's .ddd "
  },
  {
    "id": "GET__api_ddd_all-drivers_download",
    "method": "GET",
    "path": "/api/ddd/all-drivers/download",
    "category": "drivers",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "month",
        "description": "JANUARY, FEBRUARY, MARCH, APRIL,",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "vin": "YV2RTY0A7MB322799",
      "downloadTime": null,
      "activitiesFrom": null,
      "activitiesTill": null
    },
    "response": {
      "status": 200,
      "payload": "xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ"
    },
    "auth_required": true,
    "full_context": "          \"vin\": \"YV2RT40C0MB325540\", \n            \"downloadTime\": \"2021-08-26T14:35:05\", \n            \"activitiesFrom\": \"2021-05-25T23:59:59\", \n            \"activitiesTill\": \"2021-08-25T13:02:15\" \n        }, \n        { \n            \"vin\": \"YV2RTY0A7MB322799\", \n            \"downloadTime\": null, \n            \"activitiesFrom\": null, \n            \"activitiesTill\": null \n        } \n    ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n    vin \nstring \nVehicle’s VIN code \n    downloadTime \ntimestamp \nDownload time of the last downloaded \n\n=== Страница 42 ===\n \n42 \nvehicle’s .ddd file \n    activitiesFrom \ntimestamp \nThe time of the first activity recorded in the \nvehicle's .ddd file \n    activitiesTill \ntimestamp \nThe time of the last activity recorded in the \nvehicle's .ddd file \n \n \n\n=== Страница 43 ===\n \n43 \n \n \nGet drivers DDD files by month \nThis method returns all drivers’ .ddd files (that are downloaded in a requested year and month) in a .zip file. \n \nRequest \nMethod \nURL             \nGET \n/api/ddd/all-drivers/download \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nyear \nint \nyes \nRequested year. \nmonth \nString \nyes \nRequested month: JANUARY, FEBRUARY, MARCH, APRIL, \nMAY, JUNE, JULY, AUGUST, SEPTEMBER, OCTOBER, \nNOVEMBER, DECEMBER. \ncompanyId \nLong \nno \nIf this parameter is provided, only specific \ncompany’s DDD files will be downloaded. \ncountry \nString \nno \nIf this parameter is provided, DDD files will be \ndownloaded only for companies that are based in a \nspecific country. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ\" \n} \n \n\n=== Страница 44 ===\n \n44 \nResponse model \nAttribute \nData type \nDescription \npayload \nbyte array \n \n \n \n\n=== Страница 45 ===\n \n45 \nGet drivers DDD files by period \nThis"
  },
  {
    "id": "GET__api_ddd_all-drivers_download-period",
    "method": "GET",
    "path": "/api/ddd/all-drivers/download-period",
    "category": "drivers",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "month",
        "description": "JANUARY, FEBRUARY, MARCH, APRIL,",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "status": 200,
      "payload": "xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ"
    },
    "response": {
      "status": 200,
      "payload": "xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ"
    },
    "auth_required": true,
    "full_context": " \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nyear \nint \nyes \nRequested year. \nmonth \nString \nyes \nRequested month: JANUARY, FEBRUARY, MARCH, APRIL, \nMAY, JUNE, JULY, AUGUST, SEPTEMBER, OCTOBER, \nNOVEMBER, DECEMBER. \ncompanyId \nLong \nno \nIf this parameter is provided, only specific \ncompany’s DDD files will be downloaded. \ncountry \nString \nno \nIf this parameter is provided, DDD files will be \ndownloaded only for companies that are based in a \nspecific country. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ\" \n} \n \n\n=== Страница 44 ===\n \n44 \nResponse model \nAttribute \nData type \nDescription \npayload \nbyte array \n \n \n \n\n=== Страница 45 ===\n \n45 \nGet drivers DDD files by period \nThis method returns all drivers’ .ddd files (that are downloaded in a requested time period) in a .zip file. \n \nRequest \nMethod \nURL             \nGET \n/api/ddd/all-drivers/download-period \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDate \nyes \nTime from which files must be downloaded.  Date \nmust be provided ISO 8601 (e.g., 2023-01-21). \ntill \nLocalDate \nyes \nTime till which files must be downloaded.  Date \nmust be provided ISO 8601 (e.g., 2023-05-21). \ncompanyId \nLong \nno \nIf this parameter is provided, only specific \ncompany’s DDD files will be downloaded. \ncountry \nString \nno \nIf this parameter is provided, DDD files will be \ndownloaded only for companies that are based in a \nspecific country. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ\" \n} \n \n \nResponse model \nAttribute \nData type \nDescription \n\n=== Страница 46 ===\n \n46 \npayload \nbyte arr"
  },
  {
    "id": "GET__api_ddd_all-vehicles_download",
    "method": "GET",
    "path": "/api/ddd/all-vehicles/download",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2023",
        "description": "01-21).",
        "type": "string",
        "required": false
      },
      {
        "name": "2023",
        "description": "05-21).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "status": 200,
      "payload": "xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ"
    },
    "response": {
      "status": 200,
      "payload": "xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ"
    },
    "auth_required": true,
    "full_context": "d external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDate \nyes \nTime from which files must be downloaded.  Date \nmust be provided ISO 8601 (e.g., 2023-01-21). \ntill \nLocalDate \nyes \nTime till which files must be downloaded.  Date \nmust be provided ISO 8601 (e.g., 2023-05-21). \ncompanyId \nLong \nno \nIf this parameter is provided, only specific \ncompany’s DDD files will be downloaded. \ncountry \nString \nno \nIf this parameter is provided, DDD files will be \ndownloaded only for companies that are based in a \nspecific country. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ\" \n} \n \n \nResponse model \nAttribute \nData type \nDescription \n\n=== Страница 46 ===\n \n46 \npayload \nbyte array \n \n \n \n \n \n\n=== Страница 47 ===\n \n47 \nGet trucks DDD files by month \nThis method returns all trucks’ .ddd files (that are downloaded in a requested year and month) in a .zip file. \n \nRequest \nMethod \nURL             \nGET \n/api/ddd/all-vehicles/download \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nyear \nint \nyes \nRequested year. \nmonth \nString \nyes \nRequested month: JANUARY, FEBRUARY, MARCH, APRIL, \nMAY, JUNE, JULY, AUGUST, SEPTEMBER, OCTOBER, \nNOVEMBER, DECEMBER. \ncompanyId \nLong \nno \nIf this parameter is provided, only specific \ncompany’s DDD files will be downloaded. \ncountry \nString \nno \nIf this parameter is provided, DDD files will be \ndownloaded only for companies that are based in a \nspecific country. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ\" \n} \n \nResponse model \nAttribute \nData type \nDescription \n\n=== Страница 48 ===\n \n48 \npayload \nbyte array \n \n \n \n\n=== Страница 49 ===\n \n49 \nGet trucks DDD files by period \nThis"
  },
  {
    "id": "GET__api_ddd_all-vehicles_download-period",
    "method": "GET",
    "path": "/api/ddd/all-vehicles/download-period",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "month",
        "description": "JANUARY, FEBRUARY, MARCH, APRIL,",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "status": 200,
      "payload": "xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ"
    },
    "response": {
      "status": 200,
      "payload": "xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ"
    },
    "auth_required": true,
    "full_context": "on \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nyear \nint \nyes \nRequested year. \nmonth \nString \nyes \nRequested month: JANUARY, FEBRUARY, MARCH, APRIL, \nMAY, JUNE, JULY, AUGUST, SEPTEMBER, OCTOBER, \nNOVEMBER, DECEMBER. \ncompanyId \nLong \nno \nIf this parameter is provided, only specific \ncompany’s DDD files will be downloaded. \ncountry \nString \nno \nIf this parameter is provided, DDD files will be \ndownloaded only for companies that are based in a \nspecific country. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ\" \n} \n \nResponse model \nAttribute \nData type \nDescription \n\n=== Страница 48 ===\n \n48 \npayload \nbyte array \n \n \n \n\n=== Страница 49 ===\n \n49 \nGet trucks DDD files by period \nThis method returns all trucks’ .ddd files (that are downloaded in a requested time period) in a .zip file. \n \nRequest \nMethod \nURL             \nGET \n/api/ddd/all-vehicles/download-period \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired Description \nfrom \nLocalDateTime yes \nTime from which files must be downloaded.  Date \nmust be provided ISO 8601 (e.g., 2025-01-\n08T11:17:20Z). \ntill \nLocalDateTime yes \nTime till which files must be downloaded.  Date \nmust be provided ISO 8601 (e.g., 2025-01-\n08T11:17:20Z). \ncompanyId \nLong \nno \nIf this parameter is provided, only specific \ncompany’s DDD files will be downloaded. \ncountry \nString \nno \nIf this parameter is provided, DDD files will be \ndownloaded only for companies that are based in a \nspecific country. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ\" \n} \n \n\n=== Страница 50 ===\n \n50 \nResponse model \nAttribute \nData type \nDesc"
  },
  {
    "id": "PUT__api_ddd_init-driver",
    "method": "PUT",
    "path": "/api/ddd/init-driver",
    "category": "drivers",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2025",
        "description": "01-",
        "type": "string",
        "required": false
      },
      {
        "name": "08T11",
        "description": "17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2025",
        "description": "01-",
        "type": "string",
        "required": false
      },
      {
        "name": "08T11",
        "description": "17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "status": 200,
      "payload": "xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ"
    },
    "response": {
      "status": 200,
      "payload": "xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ"
    },
    "auth_required": true,
    "full_context": "ernalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired Description \nfrom \nLocalDateTime yes \nTime from which files must be downloaded.  Date \nmust be provided ISO 8601 (e.g., 2025-01-\n08T11:17:20Z). \ntill \nLocalDateTime yes \nTime till which files must be downloaded.  Date \nmust be provided ISO 8601 (e.g., 2025-01-\n08T11:17:20Z). \ncompanyId \nLong \nno \nIf this parameter is provided, only specific \ncompany’s DDD files will be downloaded. \ncountry \nString \nno \nIf this parameter is provided, DDD files will be \ndownloaded only for companies that are based in a \nspecific country. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ\" \n} \n \n\n=== Страница 50 ===\n \n50 \nResponse model \nAttribute \nData type \nDescription \npayload \nbyte array \n \n \n \n\n=== Страница 51 ===\n \n51 \nInitiate driver DDD files download \nThis method allows initiating driver .ddd file downloads. \n \nRequest \nMethod \nURL             \nPUT \n/api/ddd/init-driver \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndriverCard String \nyes \nParameter by which information is taken. \nfrom \nLocalDateTime \nno \nTime from which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nno \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 52 ===\n \n52 \nInitiate vehicle DDD files download \nThis method allows initiating vehicle .ddd file downloads. \n \nRequest \nMethod \nURL             \nPUT \n/api/ddd/init-vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProv"
  },
  {
    "id": "PUT__api_ddd_init-vehicle",
    "method": "PUT",
    "path": "/api/ddd/init-vehicle",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "status": 200,
      "payload": "OK"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "pe \nDescription \npayload \nbyte array \n \n \n \n\n=== Страница 51 ===\n \n51 \nInitiate driver DDD files download \nThis method allows initiating driver .ddd file downloads. \n \nRequest \nMethod \nURL             \nPUT \n/api/ddd/init-driver \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndriverCard String \nyes \nParameter by which information is taken. \nfrom \nLocalDateTime \nno \nTime from which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nno \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 52 ===\n \n52 \nInitiate vehicle DDD files download \nThis method allows initiating vehicle .ddd file downloads. \n \nRequest \nMethod \nURL             \nPUT \n/api/ddd/init-vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndeviceKey \nString \nno (if \nvinCode is \npresent) \nParameter by which information is taken. \nvinCode \nString \nno (if \ndeviceKey \nis \npresent) \nParameter by which information is taken. \nfrom \nLocalDateTime \nno \nTime from which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nno \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \n \n \n \n \nResponse example \nStatus \nResponse \n\n=== Страница 53 ===\n \n53 \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 54 ===\n \n54 \nUpload driver DDD files \nThis method allows uploading a single driver’s .ddd file or multiple vehicles’ .ddd files in .zip file form"
  },
  {
    "id": "POST__api_ddd_upload-drivers",
    "method": "POST",
    "path": "/api/ddd/upload-drivers",
    "category": "drivers",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n               \"id\":212, \n               \"title\":\"title\", \n               \"fuelBefore\":99999, \n               \"fuelFilled\":0.889, \n               \"odometer\":0, \n               \"generalFuelUsage\":8755, \n               \"country\":\"LT\", \n               \"date\":\"2020-09-30T09:36:15\", \n               \"price\":855888, \n\n=== Страница 57 ===\n \n57 \n               \"currencySymbol\":\"EUR\", \n               \"paymentMethod\":\"Card\", \n               \"createdAt\":\"2020-09-30T09:36:15\", \n               \"status\":\"UNREVIEWED\" \n            }",
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "        \nPUT \n/api/ddd/init-vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndeviceKey \nString \nno (if \nvinCode is \npresent) \nParameter by which information is taken. \nvinCode \nString \nno (if \ndeviceKey \nis \npresent) \nParameter by which information is taken. \nfrom \nLocalDateTime \nno \nTime from which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nno \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \n \n \n \n \nResponse example \nStatus \nResponse \n\n=== Страница 53 ===\n \n53 \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 54 ===\n \n54 \nUpload driver DDD files \nThis method allows uploading a single driver’s .ddd file or multiple vehicles’ .ddd files in .zip file format. \n \nRequest \nMethod \nURL             \nPOST \n/api/ddd/upload-drivers \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nContent-Type \nmultipart/form-data \nyes \nIndicates the format \nof the file. \n \nRequest body \nKey \nValue \nFile \nfiledata \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 55 ===\n \n55 \nUpload vehicle DDD files \nThis method allows uploading a single vehicle’s .ddd file or multiple vehicles’ .ddd files in .zip file format. \n \nRequest \nMethod \nURL             \nPOST \n/api/ddd/upload-vehicles \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nContent-Type \nmultipart/form-data \nyes \nIndicates the format \nof the file. \n \nRequest body \nKey \nValue \nFile \nfiledata \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n"
  },
  {
    "id": "POST__api_ddd_upload-vehicles",
    "method": "POST",
    "path": "/api/ddd/upload-vehicles",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n               \"id\":212, \n               \"title\":\"title\", \n               \"fuelBefore\":99999, \n               \"fuelFilled\":0.889, \n               \"odometer\":0, \n               \"generalFuelUsage\":8755, \n               \"country\":\"LT\", \n               \"date\":\"2020-09-30T09:36:15\", \n               \"price\":855888, \n\n=== Страница 57 ===\n \n57 \n               \"currencySymbol\":\"EUR\", \n               \"paymentMethod\":\"Card\", \n               \"createdAt\":\"2020-09-30T09:36:15\", \n               \"status\":\"UNREVIEWED\" \n            }",
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": " \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \n \n \n \n \nResponse example \nStatus \nResponse \n\n=== Страница 53 ===\n \n53 \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 54 ===\n \n54 \nUpload driver DDD files \nThis method allows uploading a single driver’s .ddd file or multiple vehicles’ .ddd files in .zip file format. \n \nRequest \nMethod \nURL             \nPOST \n/api/ddd/upload-drivers \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nContent-Type \nmultipart/form-data \nyes \nIndicates the format \nof the file. \n \nRequest body \nKey \nValue \nFile \nfiledata \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 55 ===\n \n55 \nUpload vehicle DDD files \nThis method allows uploading a single vehicle’s .ddd file or multiple vehicles’ .ddd files in .zip file format. \n \nRequest \nMethod \nURL             \nPOST \n/api/ddd/upload-vehicles \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nContent-Type \nmultipart/form-data \nyes \nIndicates the format \nof the file. \n \nRequest body \nKey \nValue \nFile \nfiledata \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 56 ===\n \n56 \nDocuments \n \nGet expenses sheets \nThis method returns drivers filled expense sheets which are assigned to API key account. \n \nRequest \nMethod \nURL             \nGET \n/api/documents/expenses \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"externalId\":6, \n         \"vehicleId\":2701, \n         \"driverId\":355, \n         \"clientId\":950, \n         \"startedFilling\":\"2020-0"
  },
  {
    "id": "GET__api_documents_expenses",
    "method": "GET",
    "path": "/api/documents/expenses",
    "category": "documents",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n               \"id\":212, \n               \"title\":\"title\", \n               \"fuelBefore\":99999, \n               \"fuelFilled\":0.889, \n               \"odometer\":0, \n               \"generalFuelUsage\":8755, \n               \"country\":\"LT\", \n               \"date\":\"2020-09-30T09:36:15\", \n               \"price\":855888, \n\n=== Страница 57 ===\n \n57 \n               \"currencySymbol\":\"EUR\", \n               \"paymentMethod\":\"Card\", \n               \"createdAt\":\"2020-09-30T09:36:15\", \n               \"status\":\"UNREVIEWED\" \n            }",
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "d \nLong \nyes \nProvided external id. \nContent-Type \nmultipart/form-data \nyes \nIndicates the format \nof the file. \n \nRequest body \nKey \nValue \nFile \nfiledata \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 55 ===\n \n55 \nUpload vehicle DDD files \nThis method allows uploading a single vehicle’s .ddd file or multiple vehicles’ .ddd files in .zip file format. \n \nRequest \nMethod \nURL             \nPOST \n/api/ddd/upload-vehicles \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nContent-Type \nmultipart/form-data \nyes \nIndicates the format \nof the file. \n \nRequest body \nKey \nValue \nFile \nfiledata \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 56 ===\n \n56 \nDocuments \n \nGet expenses sheets \nThis method returns drivers filled expense sheets which are assigned to API key account. \n \nRequest \nMethod \nURL             \nGET \n/api/documents/expenses \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"externalId\":6, \n         \"vehicleId\":2701, \n         \"driverId\":355, \n         \"clientId\":950, \n         \"startedFilling\":\"2020-09-30T06:35:29.133\", \n         \"finishedFilling\":\"2020-09-30T06:35:29.133\", \n         \"signature\":\"iVBORw0AYAAACXJ2VEAAAABHNCSVQICAgIf\", \n         \"items\":[ \n            { \n               \"id\":212, \n               \"title\":\"title\", \n               \"fuelBefore\":99999, \n               \"fuelFilled\":0.889, \n               \"odometer\":0, \n               \"generalFuelUsage\":8755, \n               \"country\":\"LT\", \n               \"date\":\"2020-09-30T09:36:15\", \n               \"price\":855888, \n\n=== Страница 57 ===\n \n57 \n               \"currencySymbol\":\"EUR\", \n               \"payment"
  },
  {
    "id": "GET__api_documents_trip",
    "method": "GET",
    "path": "/api/documents/trip",
    "category": "documents",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n               \"id\":55, \n               \"dateFrom\":\"2020-11-20\", \n               \"countryFrom\":\"Germany\", \n               \"cityFrom\":\"Leipzig, 04158\", \n               \"odometerFrom\":205257, \n               \"dateTo\":\"2020-11-20\", \n               \"countryTo\":\"Germany\", \n               \"cityTo\":\"Leipzig, 04158\", \n               \"odometerTo\":205257, \n               \"cmrNumber\":\"cmr#456\", \n               \"cmrWeight\":205257, \n               \"distance\":0, \n               \"comments\":\"Comments\", \n               \"createdAt\":\"2020-11-20T13:19:10.834\" \n\n=== Страница 60 ===\n \n60 \n            }",
    "response": null,
    "auth_required": true,
    "full_context": "d\":\"Card\", \n               \"createdAt\":\"2020-09-30T09:36:15\", \n               \"status\":\"UNREVIEWED\" \n            } \n         ] \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  externalId \nbigint \n \n  vehicleId \nbigint \n \n  driverId \nbigint \n \n  clientId \nbigint \n \n  startedFilling \ntimestamp \n \n  finishedFilling \ntimestamp \n \n  signature \nvarchar(256) \nBase 64 string (Encoded \nimage). \n  items: \n \n \n    id \nbigint \n \n    title \nvarchar(256) \n \n    fuelBefore \ndouble precision \n \n    fuelFilled \ndouble precision \n \n    odometer \nbigint \n \n    generalFuelUsage \nbigint \n \n    country \nvarchar(256) \n \n    date \ntimestamp \n \n    price \ndouble precision \n \n    currencySymbol \nvarchar(256) \n \n    paymentMethod \nvarchar(256) \n \n\n=== Страница 58 ===\n \n58 \n    createdAt \ntimestamp \n \n    status \nvarchar(256) \n \n \n \n \n\n=== Страница 59 ===\n \n59 \nGet trip sheets \nThis method returns drivers filled trip sheets which are assigned to API key account. \n \nRequest \nMethod \nURL             \nGET \n/api/documents/trip \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"externalId\":14, \n         \"vehicleId\":10605, \n         \"driverId\":544, \n         \"clientId\":950, \n         \"startedFilling\":\"2020-11-20T13:19:10.834\", \n         \"finishedFilling\":\"2020-11-20T13:19:36.232\", \n         \"signature\":\"iVBORw0KGgoAAAANSUhEUgAHNCSVQICAgIf\", \n         \"items\":[ \n            { \n               \"id\":55, \n               \"dateFrom\":\"2020-11-20\", \n               \"countryFrom\":\"Germany\", \n               \"cityFrom\":\"Leipzig, 04158\", \n               \"odometerFrom\":205257, \n               \"dateTo\":\"2020-11-20\", \n               \"countryTo\":\"Germany\", \n               \"cityTo\":\"Leipzig, 04158\", \n               \"odometerTo\":205257, \n               \"cmrNumber\":\"cmr#456\", \n               \""
  },
  {
    "id": "POST__api_document_driver",
    "method": "POST",
    "path": "/api/document/driver",
    "category": "drivers",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "values",
        "description": "DECLARATION,",
        "type": "string",
        "required": false
      },
      {
        "name": "Alpha",
        "description": "2 code)",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "status": 200,
      "payload": 858558
    },
    "response": {
      "status": 200,
      "payload": 9999
    },
    "auth_required": true,
    "full_context": ":205257, \n               \"distance\":0, \n               \"comments\":\"Comments\", \n               \"createdAt\":\"2020-11-20T13:19:10.834\" \n            } \n         ] \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  externalId \nbigint \n \n  vehicleId \nbigint \n \n  driverId \nbigint \n \n  clientId \nbigint \n \n  startedFilling \ntimestamp \n \n  finishedFilling \ntimestamp \n \n  signature \nvarchar(256) \nBase 64 string (Encoded \nimage). \n  items: \n \n \n    id \nbigint \n \n    dateFrom \ntimestamp \n \n    countryFrom \nvarchar(256) \n \n    cityFrom \nvarchar(256) \n \n\n=== Страница 61 ===\n \n61 \n    odometerFrom \nbigint \n \n    dateTo \ntimestamp \n \n    countryTo \nvarchar(256) \n \n    cityTo \nvarchar(256) \n \n    odometerTo \nbigint \n \n    cmrNumber \nvarchar(256) \n \n    cmrWeight \nbigint \n \n    distance \nbigint \n \n    comments \nvarchar(256) \n \n    createdAt \ntimestamp \n \n \n \n\n=== Страница 62 ===\n \n62 \nUpsert driver document \nThis method inserts or updates driver document. \n \nRequest \nMethod \nURL             \nPOST \n/api/document/driver \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nContent-Type \nmultipart/form-data \nyes \nIndicates the format \nof the file. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndriverCard \nString \nyes \nParameter by which information is taken. \ndriverClientId \nLong \nno \nDriver client ID, to find specific driver \nfrom clients group. If not provided, first \nfound driver by driverCard from group \nselected. \ndocumentId \nLong \nno (if \ninserting new \ndocument) \nExisting document id \nname \nString \nno \nDocument name (default provided file name) \nemail \nString \nno \nDocument created by. \nimportant \nboolean \nno \nIs documented should be marked as important \nshowToDriver \nboolean \nno \nShould the document be shown for the driver \ndocumentType \nString \nyes \nDocument type (available values: DECLARATION, \nOTHER). \ncountry \nString \nno \nISO count"
  },
  {
    "id": "POST__api_document_vehicle",
    "method": "POST",
    "path": "/api/document/vehicle",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n        \"id\":1, \n        \"name\":\"Scanned passport”, \n        \"important\":false, \n        \"showToDriver\":false, \n        \"type\":\"OTHER\", \n        \"country\":\"en\" \n    }",
    "response": {
      "status": 200,
      "payload": 9999
    },
    "auth_required": true,
    "full_context": " taken. \ndriverClientId \nLong \nno \nDriver client ID, to find specific driver \nfrom clients group. If not provided, first \nfound driver by driverCard from group \nselected. \ndocumentId \nLong \nno (if \ninserting new \ndocument) \nExisting document id \nname \nString \nno \nDocument name (default provided file name) \nemail \nString \nno \nDocument created by. \nimportant \nboolean \nno \nIs documented should be marked as important \nshowToDriver \nboolean \nno \nShould the document be shown for the driver \ndocumentType \nString \nyes \nDocument type (available values: DECLARATION, \nOTHER). \ncountry \nString \nno \nISO country code (According to Alpha-2 code) \n \nRequest body \n\n=== Страница 63 ===\n \n63 \nKey \nValue \nfile \nfiledata \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\": 9999 \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload \nLong \nDocument ID \n \n \n \n\n=== Страница 64 ===\n \n64 \n \nUpsert vehicle document \nThis method inserts or updates vehicle document. \n \nRequest \nMethod \nURL             \nPOST \n/api/document/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nContent-Type \nmultipart/form-data \nyes \nIndicates the format \nof the file. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nno (if \nvinCode is \npresent) \nParameter by which information is taken. \nvinCode \nString \nno (if \nvehicleId is \npresent) \nParameter by which information is taken. \nemail \nString \nno \nDocument created by. \ndocumentId \nLong \nNo (if \ninserting new \ndocument) \nDocument id \nimportant \nboolean \nno \nIs document should be marked as important \nshowToDriver boolean \nno \nShould the document be shown for the driver \n \n \n \n \n \n\n=== Страница 65 ===\n \n65 \nRequest body \nKey \nValue \nfile \nfiledata \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\": 858558 \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload \nLong \n"
  },
  {
    "id": "GET__api_document_driver",
    "method": "GET",
    "path": "/api/document/driver",
    "category": "drivers",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n        \"id\":1, \n        \"name\":\"Scanned passport”, \n        \"important\":false, \n        \"showToDriver\":false, \n        \"type\":\"OTHER\", \n        \"country\":\"en\" \n    }",
    "response": {
      "status": 200,
      "payload": 858558
    },
    "auth_required": true,
    "full_context": "ng \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nContent-Type \nmultipart/form-data \nyes \nIndicates the format \nof the file. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nno (if \nvinCode is \npresent) \nParameter by which information is taken. \nvinCode \nString \nno (if \nvehicleId is \npresent) \nParameter by which information is taken. \nemail \nString \nno \nDocument created by. \ndocumentId \nLong \nNo (if \ninserting new \ndocument) \nDocument id \nimportant \nboolean \nno \nIs document should be marked as important \nshowToDriver boolean \nno \nShould the document be shown for the driver \n \n \n \n \n \n\n=== Страница 65 ===\n \n65 \nRequest body \nKey \nValue \nfile \nfiledata \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\": 858558 \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload \nLong \nDocument ID \n \n \n \n \n \n \n\n=== Страница 66 ===\n \n66 \nGet driver documents \nThis method returns driver documents. \n \nRequest \nMethod \nURL             \nGET \n/api/document/driver \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndriverCard \nString \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n    { \n        \"id\":1, \n        \"name\":\"Scanned passport”, \n        \"important\":false, \n        \"showToDriver\":false, \n        \"type\":\"OTHER\", \n        \"country\":\"en\" \n    }, \n    { \n        \"id\":2, \n        \"name\":\"Driver license”, \n        \"important\":true, \n        \"showToDriver\":true, \n        \"type\":\"OTHER\", \n        \"country\":\"en\" \n    }, \n\n=== Страница 67 ===\n \n67 \n     ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nLong \n \n  name \nString \n \n  important \nboolean \n \n  showToDriver \nboolean \n \n  type \nString \nAvailable types: \nDECLARATION, OTHER \n  country \nString \n \n \n \n \n\n=== Страница "
  },
  {
    "id": "DELETE__api_document_driver",
    "method": "DELETE",
    "path": "/api/document/driver",
    "category": "drivers",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "driverId": "1",
      "driverCard": "1234567891234000",
      "fullName": "name surname",
      "address": "EXAMPLE ADDRESS",
      "email": "EXAMPLE@EXAMPLE.COM",
      "language": "LT",
      "phoneNumber": "+37060012345",
      "department": "DEPARTMENT EXAMPLE",
      "tableNumber": "123"
    },
    "response": "{ \n   \"status\":200, \n   \"payload\":[ \n    { \n        \"id\":1, \n        \"name\":\"Scanned passport”, \n        \"important\":false, \n        \"showToDriver\":false, \n        \"type\":\"OTHER\", \n        \"country\":\"en\" \n    }, \n    { \n        \"id\":2, \n        \"name\":\"Driver license”, \n        \"important\":true, \n        \"showToDriver\":true, \n        \"type\":\"OTHER\", \n        \"country\":\"en\" \n    }",
    "auth_required": true,
    "full_context": "equired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndriverCard \nString \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n    { \n        \"id\":1, \n        \"name\":\"Scanned passport”, \n        \"important\":false, \n        \"showToDriver\":false, \n        \"type\":\"OTHER\", \n        \"country\":\"en\" \n    }, \n    { \n        \"id\":2, \n        \"name\":\"Driver license”, \n        \"important\":true, \n        \"showToDriver\":true, \n        \"type\":\"OTHER\", \n        \"country\":\"en\" \n    }, \n\n=== Страница 67 ===\n \n67 \n     ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nLong \n \n  name \nString \n \n  important \nboolean \n \n  showToDriver \nboolean \n \n  type \nString \nAvailable types: \nDECLARATION, OTHER \n  country \nString \n \n \n \n \n\n=== Страница 68 ===\n \n68 \nDelete driver documents \nThis method deletes driver documents. \n \nRequest \nMethod \nURL             \nDELETE \n/api/document/driver \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndriverCard \nString \nyes \n \ndocumentsIds List<Long> \nyes \nList of documents ids to delete. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n\n=== Страница 69 ===\n \n69 \nGet vehicle documents \nThis method returns vehicle documents. \n \nRequest \nMethod \nURL             \nGET \n/api/document/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n    { \n        \"id\":1, \n        \"name\":\"Insurance”, \n        \"important\":false, \n       "
  },
  {
    "id": "GET__api_document_vehicle",
    "method": "GET",
    "path": "/api/document/vehicle",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "driverId": "1",
      "driverCard": "1234567891234000",
      "fullName": "name surname",
      "address": "EXAMPLE ADDRESS",
      "email": "EXAMPLE@EXAMPLE.COM",
      "language": "LT",
      "phoneNumber": "+37060012345",
      "department": "DEPARTMENT EXAMPLE",
      "tableNumber": "123"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "     \"showToDriver\":true, \n        \"type\":\"OTHER\", \n        \"country\":\"en\" \n    }, \n\n=== Страница 67 ===\n \n67 \n     ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nLong \n \n  name \nString \n \n  important \nboolean \n \n  showToDriver \nboolean \n \n  type \nString \nAvailable types: \nDECLARATION, OTHER \n  country \nString \n \n \n \n \n\n=== Страница 68 ===\n \n68 \nDelete driver documents \nThis method deletes driver documents. \n \nRequest \nMethod \nURL             \nDELETE \n/api/document/driver \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndriverCard \nString \nyes \n \ndocumentsIds List<Long> \nyes \nList of documents ids to delete. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n\n=== Страница 69 ===\n \n69 \nGet vehicle documents \nThis method returns vehicle documents. \n \nRequest \nMethod \nURL             \nGET \n/api/document/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n    { \n        \"id\":1, \n        \"name\":\"Insurance”, \n        \"important\":false, \n        \"showToDriver\":false, \n    }, \n    { \n        \"id\":2, \n        \"name\":\"Taxed roads ticket”, \n        \"important\":true, \n        \"showToDriver\":true, \n    }, \n     ] \n} \n\n=== Страница 70 ===\n \n70 \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nLong \n \n  name \nString \n \n  important \nboolean \n \n  showToDriver \nboolean \n \n \n \n\n=== Страница 71 ===\n \n71 \nDelete vehicle documents \nThis method deletes vehicle documents. \n \nRequest \nMethod \nURL             \nDELETE \n/api/document/vehicle \n \nRequest headers \nKey \nData type "
  },
  {
    "id": "DELETE__api_document_vehicle",
    "method": "DELETE",
    "path": "/api/document/vehicle",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "driverId": "1",
      "driverCard": "1234567891234000",
      "fullName": "name surname",
      "address": "EXAMPLE ADDRESS",
      "email": "EXAMPLE@EXAMPLE.COM",
      "language": "LT",
      "phoneNumber": "+37060012345",
      "department": "DEPARTMENT EXAMPLE",
      "tableNumber": "123"
    },
    "response": "{ \n   \"status\":200, \n   \"payload\":[ \n    { \n        \"id\":1, \n        \"name\":\"Insurance”, \n        \"important\":false, \n        \"showToDriver\":false, \n    }, \n    { \n        \"id\":2, \n        \"name\":\"Taxed roads ticket”, \n        \"important\":true, \n        \"showToDriver\":true, \n    }, \n     ] \n}",
    "auth_required": true,
    "full_context": "ца 69 ===\n \n69 \nGet vehicle documents \nThis method returns vehicle documents. \n \nRequest \nMethod \nURL             \nGET \n/api/document/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n    { \n        \"id\":1, \n        \"name\":\"Insurance”, \n        \"important\":false, \n        \"showToDriver\":false, \n    }, \n    { \n        \"id\":2, \n        \"name\":\"Taxed roads ticket”, \n        \"important\":true, \n        \"showToDriver\":true, \n    }, \n     ] \n} \n\n=== Страница 70 ===\n \n70 \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nLong \n \n  name \nString \n \n  important \nboolean \n \n  showToDriver \nboolean \n \n \n \n\n=== Страница 71 ===\n \n71 \nDelete vehicle documents \nThis method deletes vehicle documents. \n \nRequest \nMethod \nURL             \nDELETE \n/api/document/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \n \ndocumentsIds List<Long> \nyes \nList of documents ids to delete. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 72 ===\n \n72 \n \nDrivers \n \nGet drivers \nThis method returns information about client drivers. \n \nRequest \nMethod \nURL             \nGET \n/api/driver \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"driverId\":\"1\", \n         \"driverCard\":\"1234567891234000\", \n         \"fullName\":\"name surname\", \n         \"address\":\"EXAMPLE ADDRESS\", \n         \"email\":"
  },
  {
    "id": "GET__api_driver",
    "method": "GET",
    "path": "/api/driver",
    "category": "drivers",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "driverId": "1",
      "driverCard": "1234567891234000",
      "fullName": "name surname",
      "address": "EXAMPLE ADDRESS",
      "email": "EXAMPLE@EXAMPLE.COM",
      "language": "LT",
      "phoneNumber": "+37060012345",
      "department": "DEPARTMENT EXAMPLE",
      "tableNumber": "123"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "lse, \n    }, \n    { \n        \"id\":2, \n        \"name\":\"Taxed roads ticket”, \n        \"important\":true, \n        \"showToDriver\":true, \n    }, \n     ] \n} \n\n=== Страница 70 ===\n \n70 \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nLong \n \n  name \nString \n \n  important \nboolean \n \n  showToDriver \nboolean \n \n \n \n\n=== Страница 71 ===\n \n71 \nDelete vehicle documents \nThis method deletes vehicle documents. \n \nRequest \nMethod \nURL             \nDELETE \n/api/document/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \n \ndocumentsIds List<Long> \nyes \nList of documents ids to delete. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 72 ===\n \n72 \n \nDrivers \n \nGet drivers \nThis method returns information about client drivers. \n \nRequest \nMethod \nURL             \nGET \n/api/driver \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"driverId\":\"1\", \n         \"driverCard\":\"1234567891234000\", \n         \"fullName\":\"name surname\", \n         \"address\":\"EXAMPLE ADDRESS\", \n         \"email\":\"EXAMPLE@EXAMPLE.COM\", \n         \"language\":\"LT\", \n         \"phoneNumber\":\"+37060012345\", \n         \"department\":\"DEPARTMENT EXAMPLE\", \n         \"tableNumber\":\"123\" \n      }, \n      { \n         \"driverId\":\"2\", \n         \"driverCard\":\"UAD0000011142000\", \n         \"fullName\":\"NAME SURNAME\", \n         \"address\":null, \n         \"email\":null, \n\n=== Страница 73 ===\n \n73 \n         \"language\":\"EN\", \n         \"phoneNumber\":\"5646832165\", \n         \"department\":\"DEPARTMENT EXAMPLE\", \n         \"tableNumber\":\"123\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData typ"
  },
  {
    "id": "POST__api_eco_append-to-group",
    "method": "POST",
    "path": "/api/eco/append-to-group",
    "category": "reports",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-21).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-21).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n         \"driverId\":\"2\", \n         \"driverCard\":\"UAD0000011142000\", \n         \"fullName\":\"NAME SURNAME\", \n         \"address\":null, \n         \"email\":null, \n\n=== Страница 73 ===\n \n73 \n         \"language\":\"EN\", \n         \"phoneNumber\":\"5646832165\", \n         \"department\":\"DEPARTMENT EXAMPLE\", \n         \"tableNumber\":\"123\" \n      }",
    "response": "{ \n   \"status\":200, \n   \"payload\":{ \n        \"vinCode\":\"BBBBBBBB11111111\" \n        \"message\":\"OK\" \n    } \n} \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n        \"vinCode\":\"BBBBBBBB11111111\" \n        \"message\":\"Group ID does not exist\" \n    } \n} \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n        \"vinCode\":\"BBBBBBBB11111111\" \n        \"message\":\"Vehicle already belongs to this group\" \n    } \n}",
    "auth_required": true,
    "full_context": "age\":\"LT\", \n         \"phoneNumber\":\"+37060012345\", \n         \"department\":\"DEPARTMENT EXAMPLE\", \n         \"tableNumber\":\"123\" \n      }, \n      { \n         \"driverId\":\"2\", \n         \"driverCard\":\"UAD0000011142000\", \n         \"fullName\":\"NAME SURNAME\", \n         \"address\":null, \n         \"email\":null, \n\n=== Страница 73 ===\n \n73 \n         \"language\":\"EN\", \n         \"phoneNumber\":\"5646832165\", \n         \"department\":\"DEPARTMENT EXAMPLE\", \n         \"tableNumber\":\"123\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  driverId \nbigint \n \n  driverCard \nvarchar(255) \n \n  fullName \nvarchar(255) \n \n  address \nvarchar(255) \n \n  email \nvarchar(255) \n \n  language \ntext \nDefault: 'EN'::text. \n  phoneNumber \nvarchar(255) \n \n  department \nvarchar(255) \n \n  tableNumber \nvarchar(255) \n \n \n \n \n\n=== Страница 74 ===\n \n74 \nEco driving \n \nAppend vehicle to eco group \nThis method appends vehicle to eco group. Also possible to set default vehicle eco settings. \n \nRequest \nMethod \nURL             \nPOST \n/api/eco/append-to-group \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n    \"groupId\": 1, \n    \"vinCode\": \"BBBBBBBB11111111\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \ngroupId \nLong \nyes \nOne ECO group ID from “Get eco \ngroups” endpoint. To set \ndefault vehicle eco settings \ngroupId should be -1 \nvinCode \nString \nyes \nVehicle VIN code. \n \n \n \n \n \n \n \n\n=== Страница 75 ===\n \n75 \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n        \"vinCode\":\"BBBBBBBB11111111\" \n        \"message\":\"OK\" \n    } \n} \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n        \"vinCode\":\"BBBBBBBB11111111\" \n        \"message\":\"Group ID does not exist\" \n    } \n} \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n        \"vinCode\":\"BBBBBBBB11111111\" \n        \"message\":\"Vehicle already belongs to this group\" \n    } \n}"
  },
  {
    "id": "GET__api_eco_vehicle",
    "method": "GET",
    "path": "/api/eco/vehicle",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-21).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-21).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "type": "SPEED_1_5",
      "distancePercentage": "0.22",
      "fuelUsage": "118.16"
    },
    "response": "{ \n   \"status\":200, \n   \"payload\":{ \n        \"vinCode\":\"BBBBBBBB11111111\" \n        \"message\":\"OK\" \n    } \n} \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n        \"vinCode\":\"BBBBBBBB11111111\" \n        \"message\":\"Group ID does not exist\" \n    } \n} \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n        \"vinCode\":\"BBBBBBBB11111111\" \n        \"message\":\"Vehicle already belongs to this group\" \n    } \n}",
    "auth_required": true,
    "full_context": "\n \nRequest model \nAttribute \nData type \nRequired \nDescription \ngroupId \nLong \nyes \nOne ECO group ID from “Get eco \ngroups” endpoint. To set \ndefault vehicle eco settings \ngroupId should be -1 \nvinCode \nString \nyes \nVehicle VIN code. \n \n \n \n \n \n \n \n\n=== Страница 75 ===\n \n75 \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n        \"vinCode\":\"BBBBBBBB11111111\" \n        \"message\":\"OK\" \n    } \n} \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n        \"vinCode\":\"BBBBBBBB11111111\" \n        \"message\":\"Group ID does not exist\" \n    } \n} \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n        \"vinCode\":\"BBBBBBBB11111111\" \n        \"message\":\"Vehicle already belongs to this group\" \n    } \n} \n \nResponse model \nAttribute \nData type \nDescription \nstatus \nLong \nStatus code. \npayload: \n \n \n  vinCode \nString \nVehicle VIN code. \n  message \nString \nExplanation \n \n \n\n=== Страница 76 ===\n \n76 \nEco report by vehicle \nThis method returns eco driving information by vehicle. \n \nRequest \nMethod \nURL             \nGET \n/api/eco/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndeviceKey \nString \nno (if \nvinCode is \npresent) \nParameter by which information is taken. \nvinCode \nString \nno (if \ndeviceKey is \npresent) \nParameter by which information is taken. \nfrom \nLocalDate \nyes \nTime from which report is taken.  Date must \nbe provided ISO 8601 (e.g., 2020-01-21). \ntill \nLocalDate \nyes \nTime till which report is taken. Date must \nbe provided ISO 8601 (e.g., 2020-01-21).  \necoGroupId \nLong \nno \nWhen provided eco report will be prepared by \nprovided group parameters otherwise by \nassigned group parameters.   \n \nResponse example \nStatus \nResponse \n200 \n{ \n    \"status\": 200, \n    \"payload\": { \n        \"deviceKey\": \"352094089272196\", \n\n=== Страница 77 ===\n \n77 \n        \"totalData\": { \n            \"distance\": \"893"
  },
  {
    "id": "GET__api_eco_driver",
    "method": "GET",
    "path": "/api/eco/driver",
    "category": "drivers",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-21).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-21).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "type": "SPEED_1_5",
      "distancePercentage": "0.16",
      "fuelUsage": "124.69"
    },
    "response": null,
    "auth_required": true,
    "full_context": "            best \ndouble \n \n            worst \ndouble \n \n            pct \ndouble \n \n        rpm: \n \n \n            best \ndouble \n \n            worst \ndouble \n \n            pct \ndouble \n \n        engineLoad: \n \n \n            best \ndouble \n \n            worst \ndouble \n \n            pct \ndouble \n \n        speeding: \n \n \n            best \ndouble \n \n            worst \ndouble \n \n            pct \ndouble \n \n        cruiseDistance: \n \n \n            best \ndouble \n \n            worst \ndouble \n \n            pct \ndouble \n \n        cruiseFuel: \n \n \n            best \ndouble \n \n            worst \ndouble \n \n            pct \ndouble \n \n\n=== Страница 86 ===\n \n86 \n        cruiseFuel: \n \n \n            best \ndouble \n \n            worst \ndouble \n \n            pct \ndouble \n \n        maxSpeed \ninteger \n \n        maxIdleRpm \ninteger \n \n        maxRpm \ninteger \n \n        speedLimit \ninteger \n \n \n \n \n\n=== Страница 87 ===\n \n87 \nEco report by driver \nThis method returns eco driving information by driver. \n \nRequest \nMethod \nURL             \nGET \n/api/eco/driver \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndriver \nString \nno (if fullDriver \nor tableNumber is \npresent) \nParameter by which information is \ntaken. (e.g., 0000000005266000) \nfullDriver \nString \nno (if driver or \ntableNumber is \npresent) \nParameter by which information is \ntaken. (e.g., 0000000005266002) \ntableNumber \nString \nno (if driver or \nfullDriver is \npresent) \nParameter by which information is \ntaken. \nfrom \nLocalDate \nyes \nTime from which report is taken.  Date \nmust be provided ISO 8601 \n(e.g., 2020-01-21). \ntill \nLocalDate \nyes \nTime till which report is taken. Date \nmust be provided ISO 8601 \n(e.g., 2020-01-21). \necoGroupId \nLong \nno \nWhen provided eco report will be \nprepared by provided group parameters \notherwise by assigned group parameters. \n \n \n \n\n=== Страни"
  },
  {
    "id": "GET__api_eco_groups",
    "method": "GET",
    "path": "/api/eco/groups",
    "category": "reports",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "type": "DOCUMENT",
      "code": "CMR",
      "optionNameEn": "Amazon request",
      "optionNameLt": "Skaičių parinktis",
      "optionNameRu": "CMR (VIlnius - Kaunas)",
      "optionNameDe": "Zahlenoption",
      "optionNamePl": "Opcja numeryczna",
      "mandatory": true
    },
    "response": {
      "status": 200,
      "payload": [
        {
          "id": 1,
          "title": "MAN",
          "vehicleCount": 32
        },
        {
          "id": 2,
          "title": "Volvo",
          "vehicleCount": 45
        }
      ]
    },
    "auth_required": true,
    "full_context": "        best \ndouble \n \n            worst \ndouble \n \n            pct \ndouble \n \n        rpm: \n \n \n            best \ndouble \n \n            worst \ndouble \n \n            pct \ndouble \n \n        engineLoad: \n \n \n            best \ndouble \n \n            worst \ndouble \n \n            pct \ndouble \n \n        speeding: \n \n \n            best \ndouble \n \n            worst \ndouble \n \n            pct \ndouble \n \n        cruiseDistance: \n \n \n            best \ndouble \n \n            worst \ndouble \n \n\n=== Страница 97 ===\n \n97 \n            pct \ndouble \n \n        cruiseFuel: \n \n \n            best \ndouble \n \n            worst \ndouble \n \n            pct \ndouble \n \n        cruiseFuel: \n \n \n            best \ndouble \n \n            worst \ndouble \n \n            pct \ndouble \n \n        maxSpeed \ninteger \n \n        maxIdleRpm \ninteger \n \n        maxRpm \ninteger \n \n        speedLimit \ninteger \n \n    fullDriverCard \nvarchar(50) \n \n \n \n\n=== Страница 98 ===\n \n98 \nGet eco groups \nThis method returns eco groups. \n \nRequest \nMethod \nURL             \nGET \n/api/eco/groups \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"id\":1, \n         \"title\":\"MAN\", \n         \"vehicleCount\":32 \n      }, \n      { \n         \"id\":2, \n         \"title\":\"Volvo\", \n         \"vehicleCount\":45 \n      } \n   ] \n} \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nLong \nGroup ID. \n  title \nString \nGroup title. \n  vehicleCount \nInteger \nVehicles number in group. \n\n=== Страница 99 ===\n \n99 \nForms \n \nAdd form to task \nThis method adds form to the task. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/task-form \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n \"taskId\": 0, \n \"defaultForms\": [ \n"
  },
  {
    "id": "POST__api_documents_task-form",
    "method": "POST",
    "path": "/api/documents/task-form",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "type": "DOCUMENT",
      "code": "CMR",
      "optionNameEn": "Amazon request",
      "optionNameLt": "Skaičių parinktis",
      "optionNameRu": "CMR (VIlnius - Kaunas)",
      "optionNameDe": "Zahlenoption",
      "optionNamePl": "Opcja numeryczna",
      "mandatory": true
    },
    "response": {
      "status": 200,
      "payload": [
        {
          "id": 1,
          "title": "MAN",
          "vehicleCount": 32
        },
        {
          "id": 2,
          "title": "Volvo",
          "vehicleCount": 45
        }
      ]
    },
    "auth_required": true,
    "full_context": "         pct \ndouble \n \n        maxSpeed \ninteger \n \n        maxIdleRpm \ninteger \n \n        maxRpm \ninteger \n \n        speedLimit \ninteger \n \n    fullDriverCard \nvarchar(50) \n \n \n \n\n=== Страница 98 ===\n \n98 \nGet eco groups \nThis method returns eco groups. \n \nRequest \nMethod \nURL             \nGET \n/api/eco/groups \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"id\":1, \n         \"title\":\"MAN\", \n         \"vehicleCount\":32 \n      }, \n      { \n         \"id\":2, \n         \"title\":\"Volvo\", \n         \"vehicleCount\":45 \n      } \n   ] \n} \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nLong \nGroup ID. \n  title \nString \nGroup title. \n  vehicleCount \nInteger \nVehicles number in group. \n\n=== Страница 99 ===\n \n99 \nForms \n \nAdd form to task \nThis method adds form to the task. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/task-form \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n \"taskId\": 0, \n \"defaultForms\": [ \n   { \n     \"status\": \"ARRIVED\", \n     \"id\": 25662, \n     \"code\": \"DOCUMENTS\" \n   } \n ], \n \"forms\": { \n   \"DONE\": { \n     \"formNameEn\": \"Form\", \n     \"formNameLt\": \"Forma\", \n     \"formNameRu\": \"Форма\", \n     \"formNameDe\": \"Formular\", \n     \"formNamePl\": \"Formularz\", \n     \"code\": \"DOCUMENTS\", \n     \"sections\": [ \n       { \n         \"sectionNameEn\": \"Section\", \n         \"sectionNameLt\": \"Sekcija\", \n         \"sectionNameRu\": \"Раздел\", \n\n=== Страница 100 ===\n \n100 \n         \"sectionNameDe\": \"Abschnitt\", \n         \"sectionNamePl\": \"Sekcja\", \n         \"options\": [ \n           { \n             \"type\": \"DOCUMENT\", \n             \"code\": \"CMR\", \n             \"optionNameEn\": \"Amazon request\", \n             \"optionNameLt\": \"Skaičių par"
  },
  {
    "id": "POST__api_documents_forms_confirm",
    "method": "POST",
    "path": "/api/documents/forms/confirm",
    "category": "documents",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "status": 200,
      "payload": "9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v"
    },
    "response": {
      "status": 200,
      "payload": [
        {
          "code": "DELIVERY_NOTE",
          "id": 11256
        }
      ]
    },
    "auth_required": true,
    "full_context": "tring \nno \nCode which will be \nreturned for mapping. \n\n=== Страница 104 ===\n \n104 \n           choiceNameEn \nString \nOne or more \nlanguages \nis \nrequired. \n \n           choiceNameLt \nString \nOne or more \nlanguages \nis \nrequired. \n \n           choiceNameRu \nString \nOne or more \nlanguages \nis \nrequired. \n \n           choiceNameDe \nString \nOne or more \nlanguages \nis \nrequired. \n \n           choiceNamePl \nString \nOne or more \nlanguages \nis \nrequired. \n \n           choiceInfoEn \nString \nno \n \n           choiceInfoLt \nString \nno \n \n           choiceInfoRu \nString \nno \n \n           choiceInfoDe \nString \nno \n \n           choiceInfoPl \nString \nno \n \n           options: \nArray<Option> \n \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n \"status\":200, \n \"payload\":[ \n   { \n     \"code\": \"DELIVERY_NOTE\", \n     \"id\": 11256 \n   } \n ] \n} \n \n\n=== Страница 105 ===\n \n105 \n \n \n\n=== Страница 106 ===\n \n106 \nConfirm form \nThis method allows you to change status to “Confirmed” for the provided form. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms/confirm \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n \"formId\": 0 \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nformId \nLong \nyes \nFleethand filled form id. \n \nResponse model \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n\n=== Страница 107 ===\n \n107 \nCreate fill form sub-task \nThis method allows you to create a fill form sub-task for the driver by provided form id. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms/fill-form \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n \"formId\": 123, \n \"vehicleId\": 456, \n \"comment\": \"Please fill this form.\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nformId \nLong \nyes"
  },
  {
    "id": "POST__api_documents_forms_fill-form",
    "method": "POST",
    "path": "/api/documents/forms/fill-form",
    "category": "documents",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "status": 200,
      "payload": "9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v"
    },
    "response": {
      "status": 200,
      "payload": [
        {
          "code": "DELIVERY_NOTE",
          "id": 11256
        }
      ]
    },
    "auth_required": true,
    "full_context": "o \n \n           choiceInfoPl \nString \nno \n \n           options: \nArray<Option> \n \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n \"status\":200, \n \"payload\":[ \n   { \n     \"code\": \"DELIVERY_NOTE\", \n     \"id\": 11256 \n   } \n ] \n} \n \n\n=== Страница 105 ===\n \n105 \n \n \n\n=== Страница 106 ===\n \n106 \nConfirm form \nThis method allows you to change status to “Confirmed” for the provided form. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms/confirm \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n \"formId\": 0 \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nformId \nLong \nyes \nFleethand filled form id. \n \nResponse model \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n\n=== Страница 107 ===\n \n107 \nCreate fill form sub-task \nThis method allows you to create a fill form sub-task for the driver by provided form id. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms/fill-form \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n \"formId\": 123, \n \"vehicleId\": 456, \n \"comment\": \"Please fill this form.\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nformId \nLong \nyes \nFleethand filled form id. \nvehicleId \nLong \nyes \nFleethand vehicle id. \ncomment \nString \nno \n \n \nResponse model \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n\n=== Страница 108 ===\n \n108 \nGet filled form file pdf \nThis method returns drivers filled forms file in pdf format by provided token. \n \nRequest \nMethod \nURL             \nGET \n/api/documents/forms/file-pdf \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ntoken "
  },
  {
    "id": "GET__api_documents_forms_file-pdf",
    "method": "GET",
    "path": "/api/documents/forms/file-pdf",
    "category": "documents",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "status": 200,
      "payload": "9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "g \nyes \nFleethand filled form id. \n \nResponse model \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n\n=== Страница 107 ===\n \n107 \nCreate fill form sub-task \nThis method allows you to create a fill form sub-task for the driver by provided form id. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms/fill-form \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n \"formId\": 123, \n \"vehicleId\": 456, \n \"comment\": \"Please fill this form.\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nformId \nLong \nyes \nFleethand filled form id. \nvehicleId \nLong \nyes \nFleethand vehicle id. \ncomment \nString \nno \n \n \nResponse model \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n\n=== Страница 108 ===\n \n108 \nGet filled form file pdf \nThis method returns drivers filled forms file in pdf format by provided token. \n \nRequest \nMethod \nURL             \nGET \n/api/documents/forms/file-pdf \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ntoken \nString \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v\" \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload \nbyte array \n \n \n \n\n=== Страница 109 ===\n \n109 \nGet filled form files \nThis method returns drivers filled forms which are assigned to API key account. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n[ \n   \"812aa122-fe82-43eb-af40-d7350336477c\", \n   \"a60e261d-9711-4ddd-9c71-4d13d6cf6e07\" \n] \n \nRequest model \nAttribute \nData type"
  },
  {
    "id": "POST__api_documents_forms",
    "method": "POST",
    "path": "/api/documents/forms",
    "category": "documents",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "text": "CHECKBOX",
      "value": "true"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "escription \nformId \nLong \nyes \nFleethand filled form id. \nvehicleId \nLong \nyes \nFleethand vehicle id. \ncomment \nString \nno \n \n \nResponse model \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n\n=== Страница 108 ===\n \n108 \nGet filled form file pdf \nThis method returns drivers filled forms file in pdf format by provided token. \n \nRequest \nMethod \nURL             \nGET \n/api/documents/forms/file-pdf \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ntoken \nString \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v\" \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload \nbyte array \n \n \n \n\n=== Страница 109 ===\n \n109 \nGet filled form files \nThis method returns drivers filled forms which are assigned to API key account. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n[ \n   \"812aa122-fe82-43eb-af40-d7350336477c\", \n   \"a60e261d-9711-4ddd-9c71-4d13d6cf6e07\" \n] \n \nRequest model \nAttribute \nData type \nDescription \ntoken \nList<String> \nA collection of strings \n(tokens). \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v\" \n} \n \nResponse model \nAttribute \nData type \nDescription \n\n=== Страница 110 ===\n \n110 \npayload \nbyte array \n \n\n=== Страница 111 ===\n \n111 \nGet filled form \nThis method returns driver filled form by provided filled form id. For filled forms ids view section “Get filled forms”. \nRequest \nMethod \nURL             \nGET \n/api/documents/forms/form \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalI"
  },
  {
    "id": "GET__api_documents_forms_form",
    "method": "GET",
    "path": "/api/documents/forms/form",
    "category": "documents",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "text": "CHECKBOX",
      "value": "true"
    },
    "response": {
      "status": 200,
      "payload": "9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v"
    },
    "auth_required": true,
    "full_context": "\nbyte array \n \n \n \n\n=== Страница 109 ===\n \n109 \nGet filled form files \nThis method returns drivers filled forms which are assigned to API key account. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n[ \n   \"812aa122-fe82-43eb-af40-d7350336477c\", \n   \"a60e261d-9711-4ddd-9c71-4d13d6cf6e07\" \n] \n \nRequest model \nAttribute \nData type \nDescription \ntoken \nList<String> \nA collection of strings \n(tokens). \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v\" \n} \n \nResponse model \nAttribute \nData type \nDescription \n\n=== Страница 110 ===\n \n110 \npayload \nbyte array \n \n\n=== Страница 111 ===\n \n111 \nGet filled form \nThis method returns driver filled form by provided filled form id. For filled forms ids view section “Get filled forms”. \nRequest \nMethod \nURL             \nGET \n/api/documents/forms/form \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nformId \nLong \nyes \nFilled form id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n  \"status\": 200, \n  \"payload\": { \n        \"externalId\": 358, \n        \"taskId\": 3555, \n        \"code\": \"DOCUMENTS\", \n        \"nameEn\": \"Keitimosi forma\", \n        \"nameLt\": \"Keitimosi forma\", \n        \"nameRu\": \"Акт передачи\", \n        \"nameDe\": \"Keitimosi forma\", \n        \"namePl\": \"Keitimosi forma\", \n        \"filledAt\": \"2020-08-03T17:14:13.195\", \n        \"vehicleType\": \"TRUCK_STANDARD\", \n        \"driverId\": 355, \n        \"vehicleId\": 2701, \n        \"plateNumber\": \"JSU270\", \n        \"sections\": [ \n            { \n                \"id\": 1437, \n                \"idx\": 0, \n\n=== Страница 112 ===\n \n112 \n                \"nameEn\": \"Kelių aparatai\", \n "
  },
  {
    "id": "GET__api_documents_forms",
    "method": "GET",
    "path": "/api/documents/forms",
    "category": "documents",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "text": "CHECKBOX",
      "value": "true"
    },
    "response": null,
    "auth_required": true,
    "full_context": "  type \nvarchar(255) \n \n    options: \nArray<Option> \n \n      id \nbigint \n \n      type \nvarchar(255) \n \n      code \nvarchar(255) \n \n\n=== Страница 115 ===\n \n115 \n      nameEn \nvarchar(255) \n \n      nameLt \nvarchar(255) \n \n      nameRu \nvarchar(255) \n \n      nameDe \nvarchar(255) \n \n      namePl \nvarchar(255) \n \n      values: \n \n \n        text \nvarchar(255) \n \n        value \ntext \nIf text equals “PHOTO” or \n“SIGNATURE” - token will be \nreturned. How to get file - \ncheck “Get filled form \nfiles” endpoint. \n      defectId \nbigint \n \n      choice: \n \nOnly when the option type is \n“SELECTION”, otherwise null. \n        id \nbigint \n \n        code \nvarchar(255) \n \n        nameEn \nvarchar(255) \n \n        nameLt \nvarchar(255) \n \n        nameRu \nvarchar(255) \n \n        nameDe \nvarchar(255) \n \n        namePl \nvarchar(255) \n \n        options: \nArray<Option> \n \n \n \n\n=== Страница 116 ===\n \n116 \nGet filled forms \nThis method returns drivers filled forms which are assigned to API key account. \n \nRequest \nMethod \nURL             \nGET \n/api/documents/forms \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nlastFormId \nLong \nyes \nLast biggest received form id. If it is called \nthe first time null value should be used. \ncodes \nList<String> \nno \nIf present, only forms with specified codes will \nbe returned. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\": { \n     \"largestFormId\": 358, \n     \"forms\": [ \n       { \n         \"externalId\":358, \n         \"taskId\":3555, \n         \"code\":\"DOCUMENTS\", \n         \"nameEn\":\"Keitimosi forma\", \n         \"nameLt\":\"Keitimosi forma\", \n         \"nameRu\":\"Акт передачи\", \n         \"nameDe\":\"Keitimosi forma\", \n         \"namePl\":\"Keitimosi forma\", \n         \"filledAt\":\"2020-08-03T17:14:13.195\", \n         \"vehicleType\":\"TRUCK_STANDARD\", \n\n=== Страница 117 ===\n \n117 \n         \""
  },
  {
    "id": "POST__api_documents_forms_reject",
    "method": "POST",
    "path": "/api/documents/forms/reject",
    "category": "documents",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "taskId": 10001,
      "formCode": "DOCUMENTS",
      "optionCodes": [
        "CMR"
      ],
      "comment": "Wrong document"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "tion> \n \n      id \nbigint \n \n      type \nvarchar(255) \n \n      code \nvarchar(255) \n \n      nameEn \nvarchar(255) \n \n      nameLt \nvarchar(255) \n \n      nameRu \nvarchar(255) \n \n      nameDe \nvarchar(255) \n \n      namePl \nvarchar(255) \n \n      values: \n \n \n        text \nvarchar(255) \n \n        value \ntext \nIf text equals “PHOTO” or \n“SIGNATURE” - token will be \nreturned. How to get file - \ncheck “Get filled form \nfiles” endpoint. \n      defectId \nbigint \n \n      choice: \n \nOnly when the option type is \n“SELECTION”, otherwise null. \n        id \nbigint \n \n        code \nvarchar(255) \n \n\n=== Страница 121 ===\n \n121 \n        nameEn \nvarchar(255) \n \n        nameLt \nvarchar(255) \n \n        nameRu \nvarchar(255) \n \n        nameDe \nvarchar(255) \n \n        namePl \nvarchar(255) \n \n        options: \nArray<Option> \n \n \n \n\n=== Страница 122 ===\n \n122 \nReject form \nThis method allows you to change status to “Rejected” for the provided form. Also creates a sub-task to retake it \nfor the driver. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms/reject \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n \"formId\": 0, \n \"message\": “Bad image quality” \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nformId \nLong \nyes \nFleethand filled form id. \nmessage \nString \nyes \n \n \nResponse model \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n\n=== Страница 123 ===\n \n123 \nReject form documents \nThis method allows you to reject separate form documents by provided option ids. This creates a new form with \nthese options for the driver to retake. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms/reject-documents \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n \"formId\": 123, \n \"options\": [ \n   1"
  },
  {
    "id": "POST__api_documents_forms_reject-documents",
    "method": "POST",
    "path": "/api/documents/forms/reject-documents",
    "category": "documents",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "taskId": 10001,
      "formCode": "DOCUMENTS",
      "optionCodes": [
        "CMR"
      ],
      "comment": "Wrong document"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "  nameDe \nvarchar(255) \n \n        namePl \nvarchar(255) \n \n        options: \nArray<Option> \n \n \n \n\n=== Страница 122 ===\n \n122 \nReject form \nThis method allows you to change status to “Rejected” for the provided form. Also creates a sub-task to retake it \nfor the driver. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms/reject \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n \"formId\": 0, \n \"message\": “Bad image quality” \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nformId \nLong \nyes \nFleethand filled form id. \nmessage \nString \nyes \n \n \nResponse model \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n\n=== Страница 123 ===\n \n123 \nReject form documents \nThis method allows you to reject separate form documents by provided option ids. This creates a new form with \nthese options for the driver to retake. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms/reject-documents \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n \"formId\": 123, \n \"options\": [ \n   10201 \n ], \n \"comment\": \"Blurry picture\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nformId \nLong \nyes \nFleethand filled form id. \noptions \nArray<Long> \nyes \nFleethand filled option ids. \ncomment \nString \n \n \n \n \n \nResponse model \nStatus \nResponse \n\n=== Страница 124 ===\n \n124 \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 125 ===\n \n125 \nReject form documents by codes \nThis method allows you to reject separate form documents by provided task and form/option codes. This creates \na new form with these options for the driver to retake. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms/reject-documents-by-codes \n \nRequest headers \nKey \nData type \nRequired "
  },
  {
    "id": "POST__api_documents_forms_reject-documents-by-codes",
    "method": "POST",
    "path": "/api/documents/forms/reject-documents-by-codes",
    "category": "documents",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n         \"id\":111, \n         \"plateNumber\":\"LTU000\", \n         \"zoneTitle\":\"Crossing zone\" \n\n=== Страница 129 ===\n \n129 \n         \"enterTime\":\"2024-01-01 08:00\" \n         \"enterDriver\":\"Mr. Vehicle Driver\" \n         \"enterAddress\":\"Autoroute du Nord, Remy, France, 60190\" \n         \"enterFuelLevel\":567.8 \n         \"exitTime\":\"2024-01-02 17:00\" \n         \"exitDriver\":\"Mr. Vehicle Driver\" \n         \"exitAddress\":\"Autoroute du Nord, Pontpoint, France, 60700\" \n         \"exitFuelLevel\":502.4 \n      }",
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "e form documents by provided option ids. This creates a new form with \nthese options for the driver to retake. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms/reject-documents \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n \"formId\": 123, \n \"options\": [ \n   10201 \n ], \n \"comment\": \"Blurry picture\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nformId \nLong \nyes \nFleethand filled form id. \noptions \nArray<Long> \nyes \nFleethand filled option ids. \ncomment \nString \n \n \n \n \n \nResponse model \nStatus \nResponse \n\n=== Страница 124 ===\n \n124 \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 125 ===\n \n125 \nReject form documents by codes \nThis method allows you to reject separate form documents by provided task and form/option codes. This creates \na new form with these options for the driver to retake. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms/reject-documents-by-codes \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"taskId\":10001, \n   \"formCode\":\"DOCUMENTS\", \n   \"optionCodes\":[ \n      \"CMR\" \n   ], \n   \"comment\":\"Wrong document\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \ntaskId \nLong \nyes \nFleethand task id. \nformCode \nString \nyes \n \noptionCodes \nArray<String> \nyes \n \ncomment \nString \n \n \n \n \n \n\n=== Страница 126 ===\n \n126 \nResponse model \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 127 ===\n \n127 \nRemove form from task \nThis method removes form from task. \n \nRequest \nMethod \nURL             \nDELETE \n/api/documents/task-form \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body"
  },
  {
    "id": "DELETE__api_documents_task-form",
    "method": "DELETE",
    "path": "/api/documents/task-form",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n         \"id\":111, \n         \"plateNumber\":\"LTU000\", \n         \"zoneTitle\":\"Crossing zone\" \n\n=== Страница 129 ===\n \n129 \n         \"enterTime\":\"2024-01-01 08:00\" \n         \"enterDriver\":\"Mr. Vehicle Driver\" \n         \"enterAddress\":\"Autoroute du Nord, Remy, France, 60190\" \n         \"enterFuelLevel\":567.8 \n         \"exitTime\":\"2024-01-02 17:00\" \n         \"exitDriver\":\"Mr. Vehicle Driver\" \n         \"exitAddress\":\"Autoroute du Nord, Pontpoint, France, 60700\" \n         \"exitFuelLevel\":502.4 \n      }",
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "125 \nReject form documents by codes \nThis method allows you to reject separate form documents by provided task and form/option codes. This creates \na new form with these options for the driver to retake. \n \nRequest \nMethod \nURL             \nPOST \n/api/documents/forms/reject-documents-by-codes \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"taskId\":10001, \n   \"formCode\":\"DOCUMENTS\", \n   \"optionCodes\":[ \n      \"CMR\" \n   ], \n   \"comment\":\"Wrong document\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \ntaskId \nLong \nyes \nFleethand task id. \nformCode \nString \nyes \n \noptionCodes \nArray<String> \nyes \n \ncomment \nString \n \n \n \n \n \n\n=== Страница 126 ===\n \n126 \nResponse model \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 127 ===\n \n127 \nRemove form from task \nThis method removes form from task. \n \nRequest \nMethod \nURL             \nDELETE \n/api/documents/task-form \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"taskId\":0, \n   \"formCodes\":[ \n      \"DOCUMENTS\" \n   ] \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \ntaskId \nLong \nyes \n \nforms: \nArray<String> \nyes \nIt can be empty. \n \n \n\n=== Страница 128 ===\n \n128 \nGeozones \nGet geozones crossings \nThis method returns geozones crossings list by time range for all vehicles. Available filter results by vehicleId and \nby driverCard. \nRequest \nMethod \nURL             \nPOST \n/api/geo-zones/crossing \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime yes \nTime from which period information is taken. \nDate must be provided ISO "
  },
  {
    "id": "POST__api_geo-zones_crossing",
    "method": "POST",
    "path": "/api/geo-zones/crossing",
    "category": "general",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n         \"id\":111, \n         \"plateNumber\":\"LTU000\", \n         \"zoneTitle\":\"Crossing zone\" \n\n=== Страница 129 ===\n \n129 \n         \"enterTime\":\"2024-01-01 08:00\" \n         \"enterDriver\":\"Mr. Vehicle Driver\" \n         \"enterAddress\":\"Autoroute du Nord, Remy, France, 60190\" \n         \"enterFuelLevel\":567.8 \n         \"exitTime\":\"2024-01-02 17:00\" \n         \"exitDriver\":\"Mr. Vehicle Driver\" \n         \"exitAddress\":\"Autoroute du Nord, Pontpoint, France, 60700\" \n         \"exitFuelLevel\":502.4 \n      }",
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "red \nDescription \ntaskId \nLong \nyes \nFleethand task id. \nformCode \nString \nyes \n \noptionCodes \nArray<String> \nyes \n \ncomment \nString \n \n \n \n \n \n\n=== Страница 126 ===\n \n126 \nResponse model \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 127 ===\n \n127 \nRemove form from task \nThis method removes form from task. \n \nRequest \nMethod \nURL             \nDELETE \n/api/documents/task-form \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"taskId\":0, \n   \"formCodes\":[ \n      \"DOCUMENTS\" \n   ] \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \ntaskId \nLong \nyes \n \nforms: \nArray<String> \nyes \nIt can be empty. \n \n \n\n=== Страница 128 ===\n \n128 \nGeozones \nGet geozones crossings \nThis method returns geozones crossings list by time range for all vehicles. Available filter results by vehicleId and \nby driverCard. \nRequest \nMethod \nURL             \nPOST \n/api/geo-zones/crossing \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime yes \nTime from which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime yes \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \nvehicleId \nLong \nno \nFilters results by vehicle id. \ndriverCard \nString \nno \nFilters results by driver card. \n \nResponse example \n \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\": [ \n      { \n         \"id\":111, \n         \"plateNumber\":\"LTU000\", \n         \"zoneTitle\":\"Crossing zone\" \n\n=== Страница 129 ===\n \n129 \n         \"enterTime\":\"2024-01-01 08:00\" \n         \"enterDriver\":\"Mr. Vehicle Driver\" \n         \"enterAddress\":\"Autoroute du Nord, Remy, Franc"
  },
  {
    "id": "POST__api_integrations_sent-state",
    "method": "POST",
    "path": "/api/integrations/sent-state",
    "category": "general",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "id": 105,
      "deviceKey": "000000000000000",
      "plateNumber": "FLH555",
      "latitude": 54.8945,
      "longitude": 23.90996,
      "issuedOn": "2022-04-01T12:05:01.636"
    },
    "response": null,
    "auth_required": true,
    "full_context": "\"Mr. Vehicle Driver\" \n         \"enterAddress\":\"Autoroute du Nord, Remy, France, 60190\" \n         \"enterFuelLevel\":1108.18 \n         \"exitTime\":\"2024-02-02 17:00\" \n         \"exitDriver\":\"Mr. second Vehicle Driver\" \n         \"exitAddress\":\"Autoroute du Nord, Pontpoint, France, 60700\" \n         \"exitFuelLevel\":844.2 \n      }, \n  ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nLong \n \n  plateNumber \nString \n \n  zoneTitle \nString \n \n  enterTime \nString \nBy client time zone. \n  enterDriver \nString \nDriver name or driver card \nnumber. \n  enterAddress \nString \n \n  enterFuelLevel \nDouble \nFuel level in liters. \n  exitTime \nString \nBy client time zone. \n\n=== Страница 130 ===\n \n130 \n  exitDriver \nString \nDriver name or driver card \nnumber. \n  exitAddress \nString \n \n  exitFuelLevel \nDouble \nFuel level in liters. \n \n \n\n=== Страница 131 ===\n \n131 \n \n \nIntegrations \n \nChange SENT state \nThis method toggle SENT integration data sending activity for vehicles. \n \nRequest \nMethod \nURL             \nPOST \n/api/integrations/sent-state \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nactive \nboolean \nyes \nActivate (true) or deactivate (false) a data \nsending to SENT. \nvehicleId \nLong \nno (if \nvinCode is \npresent) \nVehicle which needs to be impacted. \nvinCode \nString \nno (if \nvehicleId \nis present) \nVehicle which needs to be impacted. \n \nResponse example \n \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\": { \n\n=== Страница 132 ===\n \n132 \n         \"vehicleId\":12345, \n         \"vinCode\":\"W1T4565125554588\", \n         \"active\": true, \n         \"zslCode\":\"Z23-654652-P\" \n      } \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  vehicleId \nLong \n \n  vinCode \nString \n \n  active \nboolean \nIf a request was sent with \ntrue, but the vehicle was \nnot found, or vehicle has no \nzslCod"
  },
  {
    "id": "GET__api_latest-panic-button",
    "method": "GET",
    "path": "/api/latest-panic-button",
    "category": "general",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "Types",
        "description": "GAS_TANK_OPEN,",
        "type": "string",
        "required": false
      },
      {
        "name": "types",
        "description": "ENGINE_OIL, ENGINE_OIL_TEMPERATURE,",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "id": 105,
      "deviceKey": "000000000000000",
      "plateNumber": "FLH555",
      "latitude": 54.8945,
      "longitude": 23.90996,
      "issuedOn": "2022-04-01T12:05:01.636"
    },
    "response": null,
    "auth_required": true,
    "full_context": "eds to be impacted. \nvinCode \nString \nno (if \nvehicleId \nis present) \nVehicle which needs to be impacted. \n \nResponse example \n \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\": { \n\n=== Страница 132 ===\n \n132 \n         \"vehicleId\":12345, \n         \"vinCode\":\"W1T4565125554588\", \n         \"active\": true, \n         \"zslCode\":\"Z23-654652-P\" \n      } \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  vehicleId \nLong \n \n  vinCode \nString \n \n  active \nboolean \nIf a request was sent with \ntrue, but the vehicle was \nnot found, or vehicle has no \nzslCode then active will \nalways be returned as false. \n  zslCode \nString \nIf a request was sent with \nactive true, but the vehicle \nwas not found, or vehicle \nhas no zslCode then ZSL will \nalways be returned as an \nempty string. \n\n=== Страница 133 ===\n \n133 \nMonitoring \n \nGet panic buttons \nThis method returns all activated panic buttons in GPS devices, that are assigned to the API key, within the last \nhour. \n \nRequest \nMethod \nURL             \nGET \n/api/latest-panic-button \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"id\":105, \n         \"deviceKey\":\"000000000000000\", \n         \"plateNumber\":\"FLH555\", \n         \"latitude\":54.894500, \n         \"longitude\":23.909960, \n         \"issuedOn\":\"2022-04-01T12:05:01.636\" \n      }, \n      { \n         \"id\":106, \n         \"deviceKey\":\"000000000000001\", \n         \"plateNumber\":\"FLH556\", \n         \"latitude\":52.894500, \n         \"longitude\":24.909960, \n         \"issuedOn\":\"2022-04-01T12:10:02.523\" \n      } \n   ] \n} \n \n\n=== Страница 134 ===\n \n134 \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nbigint \n \n  deviceKey \nvarchar(30) \n \n  plateNumber \nvarchar(255) \n \n  latitude \nnumeric(9,6) \n \n  longitude \nnumeric(9,6) \n \n  issuedOn \ntimestamp \n \n \n \n \n\n="
  },
  {
    "id": "GET__api_alarms",
    "method": "GET",
    "path": "/api/alarms",
    "category": "general",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "Types",
        "description": "GAS_TANK_OPEN,",
        "type": "string",
        "required": false
      },
      {
        "name": "types",
        "description": "ENGINE_OIL, ENGINE_OIL_TEMPERATURE,",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n         \"id\":7976, \n         \"type\":\"OFF_ROUTE\", \n         \"time\":\"2020-11-17T12:04:46.414\", \n         \"plateNumber\":\"DDD111\", \n         \"openedBy\":\"Full Name\", \n         \"address\":\"27 Allée du Lac, 86580 Vouneuil-sous-Biard\", \n         \"latitude\":46.5682234, \n         \"longitude\":0.2653675, \n         \"vehicleId\":145392, \n         \"vinCode\":\"W1T4565125554588\" \n         \"driver\":\"driverCard\" \n      }",
    "response": {
      "status": 200,
      "payload": [
        {
          "id": 105,
          "deviceKey": "000000000000000",
          "plateNumber": "FLH555",
          "latitude": 54.8945,
          "longitude": 23.90996,
          "issuedOn": "2022-04-01T12:05:01.636"
        },
        {
          "id": 106,
          "deviceKey": "000000000000001",
          "plateNumber": "FLH556",
          "latitude": 52.8945,
          "longitude": 24.90996,
          "issuedOn": "2022-04-01T12:10:02.523"
        }
      ]
    },
    "auth_required": true,
    "full_context": "scription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"id\":105, \n         \"deviceKey\":\"000000000000000\", \n         \"plateNumber\":\"FLH555\", \n         \"latitude\":54.894500, \n         \"longitude\":23.909960, \n         \"issuedOn\":\"2022-04-01T12:05:01.636\" \n      }, \n      { \n         \"id\":106, \n         \"deviceKey\":\"000000000000001\", \n         \"plateNumber\":\"FLH556\", \n         \"latitude\":52.894500, \n         \"longitude\":24.909960, \n         \"issuedOn\":\"2022-04-01T12:10:02.523\" \n      } \n   ] \n} \n \n\n=== Страница 134 ===\n \n134 \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nbigint \n \n  deviceKey \nvarchar(30) \n \n  plateNumber \nvarchar(255) \n \n  latitude \nnumeric(9,6) \n \n  longitude \nnumeric(9,6) \n \n  issuedOn \ntimestamp \n \n \n \n \n\n=== Страница 135 ===\n \n135 \nGet the alarms \nThis method returns alarms for the chosen period. \nRequest \nMethod \nURL             \nGET \n/api/alarms \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime yes \nTime from which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime yes \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \nalarmType \nString \nno \nType of alarm. Types: GAS_TANK_OPEN, \nTRAILER_DOORS_OPEN, DISK_ERROR, ALARM_OFF, \nPANIC_BUTTON, FREEZER_TEMPERATURE_LOW, \nFREEZER_TEMPERATURE_HIGH, FREEZER_OFF, \nFUEL_LEVEL_LOW, TRAILER_DISCONNECTED, DVR_POWER, \nREFUELING, DEFUELING, OFF_ROUTE, VOLTAGE_LOW, \nOFFLINE, RIGHT_LM_SENSOR, LEFT_LM_SENSOR, \nBACK_LM_SENSOR, LOOP_DOOR, LOOP_RIGHT, \nLOOP_LEFT, LOOP_TOP_CEILING, DOORS_OPEN, \nRIGHT_LOCK, LEFT_LOCK. \nIf Tell tale module is active, possible extra "
  },
  {
    "id": "GET__api_latest-alarms",
    "method": "GET",
    "path": "/api/latest-alarms",
    "category": "general",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "id": 7976,
      "type": "OFF_ROUTE",
      "time": "2020-11-17T12:04:46.414",
      "plateNumber": "DDD111",
      "openedBy": "Full Name",
      "address": "27 Allée du Lac, 86580 Vouneuil-sous-Biard",
      "latitude": 46.5682234,
      "longitude": 0.2653675,
      "vehicleId": 145392,
      "driver": "driverCard"
    },
    "response": {
      "status": 200,
      "payload": [
        {
          "id": 7976,
          "type": "OFF_ROUTE",
          "time": "2020-11-17T12:04:46.414",
          "plateNumber": "DDD111",
          "openedBy": "Full Name",
          "address": "27 Allée du Lac, 86580 Vouneuil-sous-Biard",
          "latitude": 46.5682234,
          "longitude": 0.2653675,
          "vehicleId": 145392,
          "driver": "driverCard"
        }
      ]
    },
    "auth_required": true,
    "full_context": "       \"vehicleId\":145392, \n         \"vinCode\":\"W1T4565125554588\" \n         \"driver\":\"driverCard\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nbigint \n \n  type \nvarchar(50) \nTypes: GAS_TANK_OPEN, \nTRAILER_DOORS_OPEN, \nALARM_OFF, PANIC_BUTTON, \nFREEZER_TEMPERATURE_LOW, \nFREEZER_TEMPERATURE_HIGH, \nFREEZER_OFF, FUEL_LEVEL_LOW, \nTRAILER_DISCONNECTED, \nDVR_POWER, REFUELING, \nDEFUELING, OFF_ROUTE, \nVOLTAGE_LOW, OFFLINE, \nRIGHT_LM_SENSOR, \nLEFT_LM_SENSOR, \n\n=== Страница 137 ===\n \n137 \nBACK_LM_SENSOR, LOOP_CABLE. \n  time \ntimestamp \n \n  plateNumber \nvarchar(255) \n \n  openedBy \nvarchar(255) \n \n  address \ntext \n \n  latitude \nnumeric(9,6) \n \n  longitude \nnumeric(9,6) \n \n  vehicleId \nbigint \n \n  vinCode \nvarchar(255) \n \n  driver \nvarchar(255) \n \n \n \n\n=== Страница 138 ===\n \n138 \nGet the latest alarms \nThis method returns new alarms. That means if you received some alarms with the previous request these \nalarms won’t be in the next request. \n \nRequest \nMethod \nURL             \nGET \n/api/latest-alarms \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"id\":7976, \n         \"type\":\"OFF_ROUTE\", \n         \"time\":\"2020-11-17T12:04:46.414\", \n         \"plateNumber\":\"DDD111\", \n         \"openedBy\":\"Full Name\", \n         \"address\":\"27 Allée du Lac, 86580 Vouneuil-sous-Biard\", \n         \"latitude\":46.5682234, \n         \"longitude\":0.2653675, \n         \"vehicleId\":145392, \n         \"driver\":\"driverCard\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nbigint \n \n\n=== Страница 139 ===\n \n139 \n  type \nvarchar(50) \nTypes: GAS_TANK_OPEN, \nTRAILER_DOORS_OPEN, \nALARM_OFF, PANIC_BUTTON, \nFREEZER_TEMPERATURE_LOW, \nFREEZER_TEMPERATURE_HIGH, \nFREEZER_OFF, FUEL_LEVEL_LOW, \nTRAILER_DISCONNECTED, \nDVR_POWER, REFUELING, \nDEFUELING, "
  },
  {
    "id": "GET__api_latest-doors-info",
    "method": "GET",
    "path": "/api/latest-doors-info",
    "category": "general",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "vinCode": null,
      "plateNumber": "FLH555",
      "deviceKey": "000000000000000",
      "doorsOpen": false
    },
    "response": {
      "status": 200,
      "payload": [
        {
          "vinCode": null,
          "plateNumber": "FLH555",
          "deviceKey": "000000000000000",
          "doorsOpen": false
        },
        {
          "vinCode": null,
          "plateNumber": "FLH556",
          "deviceKey": "000000000000000",
          "doorsOpen": true
        }
      ]
    },
    "auth_required": true,
    "full_context": "Allée du Lac, 86580 Vouneuil-sous-Biard\", \n         \"latitude\":46.5682234, \n         \"longitude\":0.2653675, \n         \"vehicleId\":145392, \n         \"driver\":\"driverCard\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nbigint \n \n\n=== Страница 139 ===\n \n139 \n  type \nvarchar(50) \nTypes: GAS_TANK_OPEN, \nTRAILER_DOORS_OPEN, \nALARM_OFF, PANIC_BUTTON, \nFREEZER_TEMPERATURE_LOW, \nFREEZER_TEMPERATURE_HIGH, \nFREEZER_OFF, FUEL_LEVEL_LOW, \nTRAILER_DISCONNECTED, \nDVR_POWER, REFUELING, \nDEFUELING, OFF_ROUTE, \nVOLTAGE_LOW, OFFLINE, \nRIGHT_LM_SENSOR, \nLEFT_LM_SENSOR, \nBACK_LM_SENSOR, LOOP_CABLE. \n  time \ntimestamp \n \n  plateNumber \nvarchar(255) \n \n  openedBy \nvarchar(255) \n \n  address \ntext \n \n  latitude \nnumeric(9,6) \n \n  longitude \nnumeric(9,6) \n \n  vehicleId \nbigint \n \n  driver \nvarchar(255) \n \n \n \n \n \n\n=== Страница 140 ===\n \n140 \nGet the latest doors info \nThis method returns the doors states of the vehicles which are assigned to the API key. \n \nRequest \nMethod \nURL             \nGET \n/api/latest-doors-info \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"vinCode\":null, \n         \"plateNumber\":\"FLH555\", \n         \"deviceKey\":\"000000000000000\", \n         \"doorsOpen\":false \n      }, \n      { \n         \"vinCode\":null, \n         \"plateNumber\":\"FLH556\", \n         \"deviceKey\":\"000000000000000\", \n         \"doorsOpen\":true \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  plateNumber \nvarchar(255) \n \n  deviceKey \nvarchar(30) \n \n\n=== Страница 141 ===\n \n141 \n  doorsOpen \nboolean \n \n \n \n \n\n=== Страница 142 ===\n \n142 \nGet the latest info \nThis method returns the latest information (gps position, time, speed, distance, etc.) of tracking objects which are \nassigned to API key accounts. \n \nRequest \nMethod \nURL             \n"
  },
  {
    "id": "GET__api_latest-info",
    "method": "GET",
    "path": "/api/latest-info",
    "category": "general",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n         \"time\":\"2020-01-21T09:12:54\", \n         \"deviceKey\":\"000000000000000\", \n         \"vehicleId\":9999, \n         \"latitude\":45.4147833, \n         \"longitude\":10.9198083, \n         \"speed\":0, \n         \"course\":0, \n         \"driver\":\"EXAMPLE00000000\", \n         \"secondDriver\":\"EXAMPLE20000000\", \n         \"fuelLevel\":37.2, \n         \"float1Liters\":14, \n         \"float2Liters\":23, \n         \"adblueLevelPercent\":80, \n         \"engineRPM\":0, \n         \"axleWeight\":0, \n         \"axleWeight2\":null, \n         \"grossCombinationVehicleWeight\":null, \n         \"address\":null, \n         \"distance\":null, \n         \"engineHours\":null, \n         \"externalPowerV\":14809, \n         \"internalBatteryV\":9775, \n\n=== Страница 143 ===\n \n143 \n         \"batteryLevel\":null, \n         \"plateNumber\":\"EXAMPLE_FREEZER\", \n         \"deviceNumber\":\"+3700000000\", \n         \"vinCode\":null, \n         \"licensePlateNumber\":\"EXAMPLE_FREEZER\", \n         \"vehicleType\":\"TRAILER_FRIGGO_DOPP\", \n         \"setFreezerTemperature\":5.0, \n         \"actualFreezerTemperature\":6.0, \n         \"supplyFreezerTemperature\":4.0, \n         \"freezerEngineOn\":true, \n         \"secondCompartmentSetPoint\":5.0, \n         \"secondCompartmentTemperature\":4.5, \n         \"secondCompartmentSupplyTemperature\":5.0, \n         \"secondCompartmentIsOn\":true, \n         \"firstSensorTemperature\":2.0, \n         \"secondSensorTemperature\":5.0, \n         \"thirdSensorTemperature\":5.0, \n         \"fourthSensorTemperature\":5.0, \n         \"freezerDieselHours\":2548, \n         \"freezerElectricHours\":2948, \n         \"freezerStandbyHours\":2000, \n         \"drivingLeft\":33120, \n         \"nextDayRest\":\"2020-09-28T19:40:00\", \n         \"nextWeekRest\":\"2020-10-04T04:40:00\", \n         \"fullFirstDriver\":\"EXAMPLE00000001\", \n         \"fullSecondDriver\":\"EXAMPLE20000010\", \n         \"longerDrivingCount\":0, \n         \"shorterRestCount\":1, \n         \"thisWeekDrivingLeft\":3200, \n         \"twoWeeksDrivingLeft\":6800, \n         \"nextWeekRestTime\":null, \n         \"drivingLeftTillBreak\":640, \n         \"workDayStarted\":\"2020-09-28T12:40:00\", \n         \"connectionId\":null, \n         \"connectedTrailerExternalId\":null, \n         \"ignitionOn\":true, \n         \"connectedTrailer\":null, \n         \"doorOpen\":null, \n         \"alarmOff\":null, \n         \"freezerMode\":null, \n         \"freezerRunMode\":null, \n         \"satellites\":12, \n         \"gsmSignalLevel\":5, \n         \"hdop\":0.7 \n      }",
    "response": {
      "status": 200,
      "payload": [
        {
          "vinCode": null,
          "plateNumber": "FLH555",
          "deviceKey": "000000000000000",
          "doorsOpen": false
        },
        {
          "vinCode": null,
          "plateNumber": "FLH556",
          "deviceKey": "000000000000000",
          "doorsOpen": true
        }
      ]
    },
    "auth_required": true,
    "full_context": "the API key. \n \nRequest \nMethod \nURL             \nGET \n/api/latest-doors-info \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"vinCode\":null, \n         \"plateNumber\":\"FLH555\", \n         \"deviceKey\":\"000000000000000\", \n         \"doorsOpen\":false \n      }, \n      { \n         \"vinCode\":null, \n         \"plateNumber\":\"FLH556\", \n         \"deviceKey\":\"000000000000000\", \n         \"doorsOpen\":true \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  plateNumber \nvarchar(255) \n \n  deviceKey \nvarchar(30) \n \n\n=== Страница 141 ===\n \n141 \n  doorsOpen \nboolean \n \n \n \n \n\n=== Страница 142 ===\n \n142 \nGet the latest info \nThis method returns the latest information (gps position, time, speed, distance, etc.) of tracking objects which are \nassigned to API key accounts. \n \nRequest \nMethod \nURL             \nGET \n/api/latest-info \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"time\":\"2020-01-21T09:12:54\", \n         \"deviceKey\":\"000000000000000\", \n         \"vehicleId\":9999, \n         \"latitude\":45.4147833, \n         \"longitude\":10.9198083, \n         \"speed\":0, \n         \"course\":0, \n         \"driver\":\"EXAMPLE00000000\", \n         \"secondDriver\":\"EXAMPLE20000000\", \n         \"fuelLevel\":37.2, \n         \"float1Liters\":14, \n         \"float2Liters\":23, \n         \"adblueLevelPercent\":80, \n         \"engineRPM\":0, \n         \"axleWeight\":0, \n         \"axleWeight2\":null, \n         \"grossCombinationVehicleWeight\":null, \n         \"address\":null, \n         \"distance\":null, \n         \"engineHours\":null, \n         \"externalPowerV\":14809, \n         \"internalBatteryV\":9775, \n\n=== Страница 143"
  },
  {
    "id": "GET__api_latest-position",
    "method": "GET",
    "path": "/api/latest-position",
    "category": "locations",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n         \"time\":\"2020-01-21T09:12:54\", \n         \"deviceKey\":\"000000000000000\", \n         \"driver1CardPresent\":true, \n         \"driver2CardPresent\":true, \n         \"distance\":null, \n         \"fullFirstDriver\":\"GUD0000000000000\", \n         \"fullSecondDriver\":\"GUD0000000000000\", \n         \"latestActivityType\":\"REST\", \n         \"latestActivityDuration\":\"2020-09-28T19:40:00\", \n         \"lastRestTime\":\"2020-10-04T04:40:00\", \n         \"tillNextBrakeOrRest\":0, \n         \"tillNextDayRest\":1, \n         \"tillThisRestEnd\":1, \n         \"tillNextWeekRest\":1, \n         \"todayDriving\":1, \n         \"thisWeekDriving\":1, \n         \"longerDrivingCount\":1, \n         \"shorterRestsCount\":1, \n         \"beforeBreakDrivingLeft\":1, \n         \"todayDrivingLeft\":1, \n         \"thisWeekDrivingLeft\":1, \n         \"twoWeeksDrivingLeft\":1, \n         \"tillNextDriving\":1, \n\n=== Страница 151 ===\n \n151 \n         \"twoWeeksDriving\":1 \n      }",
    "response": null,
    "auth_required": true,
    "full_context": "imestamp \n \n  nextWeekRest \ntimestamp \n \n  fullFirstDriver \nvarchar(50) \n \n  fullSecondDriver \nvarchar(50) \n \n  longerDrivingCount \ninteger \n \n\n=== Страница 147 ===\n \n147 \n  shorterRestCount \ninteger \n \n  thisWeekDrivingLeft \nLong \n \n  twoWeeksDrivingLeft \nLong \n \n  nextWeekRestTime \nLong \n \n  drivingLeftTillBreak \nLong \n \n  workDayStarted \ntimestamp \n \n  connectionId \nbigint \n \n  connectedTrailerExternalId \nbigint \n \n  ignitionOn \nboolean \n \n  connectedTrailer \nvarchar(100) \n \n  doorOpen \nboolean \n \n  alarmOff \nboolean \n \n  freezerMode \nFreezerMode \nOFF, HEATING, COOLING, IDLE, \nDEFROST, PRETRIP, NULL \n  freezerRunMode \nFreezerRunMode \nSTART_STOP, CONTINOUS, \nCYCLE_SENTRY \n  satellites \nInteger \n \n  gsmSignalLevel \nInteger \nFrom 0 to 5. \n  hdop \nDouble \n \n \n \n\n=== Страница 148 ===\n \n148 \nGet the latest position \nThis method returns the latest position (latitude, longitude, country, address, postcode, odometer) of tracking \nobjects which are assigned to an API key account. \n \nRequest \nMethod \nURL             \nGET \n/api/latest-position \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"deviceKey\":\"000000000000000\", \n         \"plateNumber\":\"EXAMPLE 000\", \n         \"latitude\":54.651907, \n         \"longitude\":25.306837, \n         \"country\":\"lt\", \n         \"address\":\"Gatvių g., Vilnius, Lithuania, 01234\", \n         \"postCode\":\"01234\", \n         \"odometer\":123456.789 \n         \"time\":\"2000-01-01T12:12:08.339\" \n      }, \n      { \n         \"deviceKey\":\"111111111111111\", \n         \"plateNumber\":\"EXAMPLE 001\", \n         \"latitude\":54.651907, \n         \"longitude\":25.306837, \n         \"country\":\"lt\", \n         \"address\":\"Gatvių g., Vilnius, Lithuania, 01234\", \n         \"postCode\":\"01234\", \n         \"odometer\":234567.8 \n         \"time\":\"2000-01-01T15:15:01.400\" \n      } \n   ] \n\n=== Страниц"
  },
  {
    "id": "GET__api_latest-tacho",
    "method": "GET",
    "path": "/api/latest-tacho",
    "category": "general",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n         \"time\":\"2020-01-21T09:12:54\", \n         \"deviceKey\":\"000000000000000\", \n         \"driver1CardPresent\":true, \n         \"driver2CardPresent\":true, \n         \"distance\":null, \n         \"fullFirstDriver\":\"GUD0000000000000\", \n         \"fullSecondDriver\":\"GUD0000000000000\", \n         \"latestActivityType\":\"REST\", \n         \"latestActivityDuration\":\"2020-09-28T19:40:00\", \n         \"lastRestTime\":\"2020-10-04T04:40:00\", \n         \"tillNextBrakeOrRest\":0, \n         \"tillNextDayRest\":1, \n         \"tillThisRestEnd\":1, \n         \"tillNextWeekRest\":1, \n         \"todayDriving\":1, \n         \"thisWeekDriving\":1, \n         \"longerDrivingCount\":1, \n         \"shorterRestsCount\":1, \n         \"beforeBreakDrivingLeft\":1, \n         \"todayDrivingLeft\":1, \n         \"thisWeekDrivingLeft\":1, \n         \"twoWeeksDrivingLeft\":1, \n         \"tillNextDriving\":1, \n\n=== Страница 151 ===\n \n151 \n         \"twoWeeksDriving\":1 \n      }",
    "response": null,
    "auth_required": true,
    "full_context": "   \"time\":\"2000-01-01T12:12:08.339\" \n      }, \n      { \n         \"deviceKey\":\"111111111111111\", \n         \"plateNumber\":\"EXAMPLE 001\", \n         \"latitude\":54.651907, \n         \"longitude\":25.306837, \n         \"country\":\"lt\", \n         \"address\":\"Gatvių g., Vilnius, Lithuania, 01234\", \n         \"postCode\":\"01234\", \n         \"odometer\":234567.8 \n         \"time\":\"2000-01-01T15:15:01.400\" \n      } \n   ] \n\n=== Страница 149 ===\n \n149 \n} \n \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  deviceKey \nvarchar(255) \n \n  plateNumber \nvarchar(255) \n \n  latitude \ndouble precision \n \n  longitude \ndouble precision \n \n  country \nvarchar(255) \n \n  address \nvarchar(255) \n \n  postCode \nvarchar(255) \n \n  odometer \ndouble precision \n \n  time \nLocalDateTime \nBy client time zone. \ne.g., 2020-01-09T11:17:20Z \n \n \n \n\n=== Страница 150 ===\n \n150 \nGet the latest tacho info \nThis method returns the latest tacho information of tracking objects which are assigned to API key account. \n \nRequest \nMethod \nURL             \nGET \n/api/latest-tacho \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"time\":\"2020-01-21T09:12:54\", \n         \"deviceKey\":\"000000000000000\", \n         \"driver1CardPresent\":true, \n         \"driver2CardPresent\":true, \n         \"distance\":null, \n         \"fullFirstDriver\":\"GUD0000000000000\", \n         \"fullSecondDriver\":\"GUD0000000000000\", \n         \"latestActivityType\":\"REST\", \n         \"latestActivityDuration\":\"2020-09-28T19:40:00\", \n         \"lastRestTime\":\"2020-10-04T04:40:00\", \n         \"tillNextBrakeOrRest\":0, \n         \"tillNextDayRest\":1, \n         \"tillThisRestEnd\":1, \n         \"tillNextWeekRest\":1, \n         \"todayDriving\":1, \n         \"thisWeekDriving\":1, \n         \"longerDrivingCount\":1, \n         \"shorterRestsCount\":1, \n         \"beforeBreakDrivingLeft\":1, \n  "
  },
  {
    "id": "POST__api_orders",
    "method": "POST",
    "path": "/api/orders",
    "category": "general",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n            \"type\":\"UNLOADING\", \n            \"date\":\"2023-06-11 16:30\", \n            \"participant\":\"AB Partner\", \n            \"coordinates\":\"54.7101600, 25.2634556\", \n            \"point\":\"Vilnius, Vilnius City Municipality\", \n\n=== Страница 155 ===\n \n155 \n            \"address\":\"Ozo g. 25, 08217 Vilnius\", \n            \"postalCode\":\"08217\", \n            \"country\":\"Lithuania\", \n            \"city\":\"Vilnius\", \n            \"stopId\":\"UNLOAD-012345\", \n            \"eta\":\"2023-06-11 16:15\", \n            \"comment\":\"Unloading comment\", \n            \"workHours\":\"8:00-18:00\" \n         }",
    "response": null,
    "auth_required": true,
    "full_context": "  latestActivityType \nvarchar(100) \nTypes: DRIVE, WORK, \nDRIVER_AVAILABLE, REST. \n  latestActivityDuration \ntimestamp \n \n  lastRestTime \nvarchar(50) \n \n  tillNextBrakeOrRest \nLong \n(seconds) \n  tillNextDayRest \nLong \n(seconds) \n  tillThisRestEnd \nLong \n(seconds) \n  tillNextWeekRest \nLong \n(seconds) \n  todayDriving \nvarchar(50) \n(seconds) \n  thisWeekDriving \nvarchar(50) \n(seconds) \n  longerDrivingCount \ninteger \n(seconds) \n  shorterRestsCount \ninteger \n(seconds) \n  beforeBreakDrivingLeft \nLong \n(seconds) \n  todayDrivingLeft \nLong \n(seconds) \n  thisWeekDrivingLeft \nLong \n(seconds) \n  twoWeeksDrivingLeft \nLong \n(seconds) \n\n=== Страница 152 ===\n \n152 \n  tillNextDriving \nLong \n(seconds) \n  twoWeeksDriving \nvarchar(50) \n(seconds) \n \n \n \n \n\n=== Страница 153 ===\n \n153 \nOrders \n \nCreate/Update order \nThis method will create order if orderId is not provided or orderId as null. When orderId is provided, order with \nprovided ID will be updated.  \nThis method returns TripId and OrderId.  \nRequest \nMethod \nURL             \nPOST \n/api/orders \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"orderInfo\":{ \n      \"orderId\": null, \n      \"orderNumber\":\"ABC123\", \n      \"clientId\":123, \n      \"clientOrderNumber\":\"abc123\", \n      \"manager\":\"manager@email.com\", \n      \"status\":\"PENDING\", \n      \"freight\":800.99, \n      \"currency\":\"EUR\", \n      \"vat\":\"VAT_NULL\", \n      \"distance\":513.5, \n      \"customerFullName\":\"Full customer name\", \n      \"customerEmail\":\"client@customer.com\", \n      \"customerPhone\":\"+37060000000\", \n      \"hazardousType\":\"B\", \n      \"paidKm\":1503.0, \n      \"emptyKm\":31.5, \n      \"loadedKm\":1225.8, \n      \"tripRoute\":\"g{~tHgejmA|L|YdG~KlDhFvEzFxAxA`F|EXVbRd\", \n      \"docsReceivedByEmail\":false, \n\n=== Страница 154 ===\n \n154 \n      \"plannerFullName\":\"Full planner name\", \n      \"plannerEmail\":\"planner@customer.com\", \n      \"plannerPhone \":\"+37060"
  },
  {
    "id": "GET__api_orders_actions",
    "method": "GET",
    "path": "/api/orders/actions",
    "category": "general",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "taskId": 1,
      "vehicleId": 100,
      "freight": 1000,
      "clientId": "VHT559685",
      "clientOrderNumber": "VHT559685",
      "clientKm": "1362",
      "action": "ADD"
    },
    "response": {
      "status": 200,
      "payload": {
        "orderId": 1111,
        "tripId": 111
      }
    },
    "auth_required": true,
    "full_context": "  postalCode \nvarchar(255) \nfalse \n \n    country \nvarchar(255) \nfalse \n \n    city \nvarchar(255) \nfalse \n \n    stopId \nvarchar(255) \nfalse \n \n    eta \nvarchar(255) \nfalse \nAvailable patterns:  \n“yyyy-MM-dd”,  \n\n=== Страница 159 ===\n \n159 \n“yyyy-MM-dd hh:mm” \n    comment \nString \nfalse \n \n    workHours \nString \nfalse \n \n  customs: \n \n \n \n    date \nvarchar(255) \ntrue \nAvailable patterns:  \n“yyyy-MM-dd”, \n“yyyy-MM-dd hh:mm” \n    coordinates \nvarchar(255) \ntrue \n \n    point \nvarchar(255) \ntrue \n \n    address \nvarchar(255) \nfalse \n \n    postalCode \nvarchar(255) \nfalse \n \n    country \nvarchar(255) \nfalse \n \n    city \nvarchar(255) \nfalse \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\": { \n        \"orderId\": 1111, \n        \"tripId\": 111 \n    } \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  orderId \nbigint \n \n  tripId \nbigint \n \n \n \n \n \n\n=== Страница 160 ===\n \n160 \nGet order actions \nThis method returns 20 newest order actions. \n \nRequest \nMethod \nURL             \nGET \n/api/orders/actions \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest parameters \nParameter \nData type \nRequired \nDescription \nlastId \nLong \nyes \nLast biggest received action id. If it is \ncalled the first time, a null value \nshould be used. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"id\":1,        \n         \"taskId\":-1, \n         \"vehicleId\":-1 \n         \"action\":\"ADDED\" \n         \"orderNumber\":\"ORD#123\", \n         \"createdAt\":\"2020-09-03T11:15:10.101\" \n      }, \n      { \n         \"id\":2, \n         \"taskId\":-1, \n         \"vehicleId\":-1 \n         \"action\":\"REMOVED\" \n         \"orderNumber\":\"ORD#123\", \n         \"createdAt\":\"2020-09-03T11:17:10.101\" \n      }, \n\n=== Страница 161 ===\n \n161 \n      { \n         \"id\":3, \n         \"taskId\":-1, \n         \"vehicleId\":-1 \n         \"action\":\"ADDED\" \n         \"order"
  },
  {
    "id": "GET__api_orders_status",
    "method": "GET",
    "path": "/api/orders/status",
    "category": "general",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "taskId": 1,
      "vehicleId": 100,
      "freight": 1000,
      "clientId": "VHT559685",
      "clientOrderNumber": "VHT559685",
      "clientKm": "1362",
      "action": "ADD"
    },
    "response": {
      "status": 200,
      "payload": "PENDING"
    },
    "auth_required": true,
    "full_context": "  \"status\":200, \n   \"payload\":[ \n      { \n         \"id\":1,        \n         \"taskId\":-1, \n         \"vehicleId\":-1 \n         \"action\":\"ADDED\" \n         \"orderNumber\":\"ORD#123\", \n         \"createdAt\":\"2020-09-03T11:15:10.101\" \n      }, \n      { \n         \"id\":2, \n         \"taskId\":-1, \n         \"vehicleId\":-1 \n         \"action\":\"REMOVED\" \n         \"orderNumber\":\"ORD#123\", \n         \"createdAt\":\"2020-09-03T11:17:10.101\" \n      }, \n\n=== Страница 161 ===\n \n161 \n      { \n         \"id\":3, \n         \"taskId\":-1, \n         \"vehicleId\":-1 \n         \"action\":\"ADDED\" \n         \"orderNumber\":\"ORD#1234\", \n         \"createdAt\":\"2020-09-03T11:17:10.101\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nbigint \n \n  taskId \nbigint \n \n  vehicleId \nbigint \n \n  action \nString \nPossible values: ADDED, \nREMOVED \n  orderNumber \nvarchar(255) \n \n  createdAt \ntimestamp \n \n \n \n \n\n=== Страница 162 ===\n \n162 \nGet orders status \nThis method returns order status. \n \nRequest \nMethod \nURL             \nGET \n/api/orders/status \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest parameters \nParameter \nData type \nRequired \nDescription \norderId \nLong \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\": \"PENDING\" \n} \n \nResponse model \nAttribute \nData type \nDescription \ndata: \n \n \n  payload \nString \nPossible values: \nUNCONFIRMED, PENDING, \nEXECUTING, FINISHED, \nREJECTED, DELETED. \n \n \n \n \n \n \n \n\n=== Страница 163 ===\n \n163 \nGet orders tasks \nThis method returns tasks assigned to orders. Max interval 92 days. \n \nRequest \nMethod \nURL             \nGET \n/api/orders \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime \nyes \nTime from which period information is take"
  },
  {
    "id": "GET__api_orders",
    "method": "GET",
    "path": "/api/orders",
    "category": "general",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n   \"title\":\"Fleethand\", \n   \"companyCode\":\"F12345\", \n   \"vatCode\":\"V123456\", \n   \"countryIso\":\"lt\", \n   \"address\":\"Naugarduko g. 102, LT-02121 Vilnius\", \n   \"correspondenceAddress\":\"Naugarduko g. 102, LT-02121 Vilnius\", \n   \"fullName\":\"UAB Fleethand\", \n   \"phoneNumber\":\"+37060058558\", \n   \"email\":\"sales@fleethand.com\", \n   \"zoneId\":\"Europe/Vilnius\", \n   \"locale\":\"lt\", \n   \"usageLimit\":5, \n   \"heavyTrackModule\":false, \n   \"videoModule\":false, \n   \"managementModule\":false, \n   \"viewTasksModule\":true, \n   \"viewReportModule\":false, \n   \"docsConfirmed\":true, \n   \"postponement\":30, \n   \"credit\":null, \n   \"billingEmail\":\"sales@fleethand.com\", \n\n=== Страница 167 ===\n \n167 \n   \"currency\":\"EUR\", \n   \"vat\":\"VAT_19\", \n   \"skontoTerm\":1, \n   \"skontoDiscount\":0.5 \n}",
    "response": {
      "status": 200,
      "payload": "PENDING"
    },
    "auth_required": true,
    "full_context": "el \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nbigint \n \n  taskId \nbigint \n \n  vehicleId \nbigint \n \n  action \nString \nPossible values: ADDED, \nREMOVED \n  orderNumber \nvarchar(255) \n \n  createdAt \ntimestamp \n \n \n \n \n\n=== Страница 162 ===\n \n162 \nGet orders status \nThis method returns order status. \n \nRequest \nMethod \nURL             \nGET \n/api/orders/status \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest parameters \nParameter \nData type \nRequired \nDescription \norderId \nLong \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\": \"PENDING\" \n} \n \nResponse model \nAttribute \nData type \nDescription \ndata: \n \n \n  payload \nString \nPossible values: \nUNCONFIRMED, PENDING, \nEXECUTING, FINISHED, \nREJECTED, DELETED. \n \n \n \n \n \n \n \n\n=== Страница 163 ===\n \n163 \nGet orders tasks \nThis method returns tasks assigned to orders. Max interval 92 days. \n \nRequest \nMethod \nURL             \nGET \n/api/orders \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime \nyes \nTime from which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nyes \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"data\":[ \n      { \n         \"taskId\":1, \n         \"vehicleId\":100, \n         \"freight\":1000, \n         \"clientId\":\"VHT559685\", \n         \"clientOrderNumber\":\"VHT559685\", \n         \"clientKm\":\"1362\", \n         \"action\":\"ADD\" \n      } \n   ] \n} \n \n\n=== Страница 164 ===\n \n164 \nResponse model \nAttribute \nData type \nDescription \ndata: \n \n \n  taskId \nLong \n \n  vehicleId \nLong \n \n  freight \nLong \n \n  clientId \nSt"
  },
  {
    "id": "DELETE__api_orders",
    "method": "DELETE",
    "path": "/api/orders",
    "category": "general",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n   \"title\":\"Fleethand\", \n   \"companyCode\":\"F12345\", \n   \"vatCode\":\"V123456\", \n   \"countryIso\":\"lt\", \n   \"address\":\"Naugarduko g. 102, LT-02121 Vilnius\", \n   \"correspondenceAddress\":\"Naugarduko g. 102, LT-02121 Vilnius\", \n   \"fullName\":\"UAB Fleethand\", \n   \"phoneNumber\":\"+37060058558\", \n   \"email\":\"sales@fleethand.com\", \n   \"zoneId\":\"Europe/Vilnius\", \n   \"locale\":\"lt\", \n   \"usageLimit\":5, \n   \"heavyTrackModule\":false, \n   \"videoModule\":false, \n   \"managementModule\":false, \n   \"viewTasksModule\":true, \n   \"viewReportModule\":false, \n   \"docsConfirmed\":true, \n   \"postponement\":30, \n   \"credit\":null, \n   \"billingEmail\":\"sales@fleethand.com\", \n\n=== Страница 167 ===\n \n167 \n   \"currency\":\"EUR\", \n   \"vat\":\"VAT_19\", \n   \"skontoTerm\":1, \n   \"skontoDiscount\":0.5 \n}",
    "response": {
      "status": 200,
      "data": [
        {
          "taskId": 1,
          "vehicleId": 100,
          "freight": 1000,
          "clientId": "VHT559685",
          "clientOrderNumber": "VHT559685",
          "clientKm": "1362",
          "action": "ADD"
        }
      ]
    },
    "auth_required": true,
    "full_context": "ription \nfrom \nLocalDateTime \nyes \nTime from which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nyes \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"data\":[ \n      { \n         \"taskId\":1, \n         \"vehicleId\":100, \n         \"freight\":1000, \n         \"clientId\":\"VHT559685\", \n         \"clientOrderNumber\":\"VHT559685\", \n         \"clientKm\":\"1362\", \n         \"action\":\"ADD\" \n      } \n   ] \n} \n \n\n=== Страница 164 ===\n \n164 \nResponse model \nAttribute \nData type \nDescription \ndata: \n \n \n  taskId \nLong \n \n  vehicleId \nLong \n \n  freight \nLong \n \n  clientId \nString \nNot fleethandId. \n  clientOrderNumber \nString \n \n  clientEmptyKm \nLong \n \n  clientKm \nLong \n \n  action \nLong \nOptions: ADD, REMOVE. \n \n \n\n=== Страница 165 ===\n \n165 \nDelete order \nThis method returns tasks assigned to orders. \n \nRequest \nMethod \nURL             \nDELETE \n/api/orders \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \norderId \nLong \nyes \nOrder ID to delete. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 166 ===\n \n166 \nPartners \n \nCreate clients partner \nThis method creates clients’ partner. Returns created partner ID. \n \nRequest \nMethod \nURL             \nPOST \n/api/partner \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"title\":\"Fleethand\", \n   \"companyCode\":\"F12345\", \n   \"vatCode\":\"V123456\", \n   \"countryIso\":\"lt\", \n   \"address\":\"Naugarduko g. 102, LT-02121 Vilnius\", \n   \"correspondenceAddress\":\"Naugarduko g. 102, LT-02121 Vilnius\", \n   \"fullName\":\"UAB Fleetha"
  },
  {
    "id": "POST__api_partner",
    "method": "POST",
    "path": "/api/partner",
    "category": "partners",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n   \"title\":\"Fleethand\", \n   \"companyCode\":\"F12345\", \n   \"vatCode\":\"V123456\", \n   \"countryIso\":\"lt\", \n   \"address\":\"Naugarduko g. 102, LT-02121 Vilnius\", \n   \"correspondenceAddress\":\"Naugarduko g. 102, LT-02121 Vilnius\", \n   \"fullName\":\"UAB Fleethand\", \n   \"phoneNumber\":\"+37060058558\", \n   \"email\":\"sales@fleethand.com\", \n   \"zoneId\":\"Europe/Vilnius\", \n   \"locale\":\"lt\", \n   \"usageLimit\":5, \n   \"heavyTrackModule\":false, \n   \"videoModule\":false, \n   \"managementModule\":false, \n   \"viewTasksModule\":true, \n   \"viewReportModule\":false, \n   \"docsConfirmed\":true, \n   \"postponement\":30, \n   \"credit\":null, \n   \"billingEmail\":\"sales@fleethand.com\", \n\n=== Страница 167 ===\n \n167 \n   \"currency\":\"EUR\", \n   \"vat\":\"VAT_19\", \n   \"skontoTerm\":1, \n   \"skontoDiscount\":0.5 \n}",
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "entKm\":\"1362\", \n         \"action\":\"ADD\" \n      } \n   ] \n} \n \n\n=== Страница 164 ===\n \n164 \nResponse model \nAttribute \nData type \nDescription \ndata: \n \n \n  taskId \nLong \n \n  vehicleId \nLong \n \n  freight \nLong \n \n  clientId \nString \nNot fleethandId. \n  clientOrderNumber \nString \n \n  clientEmptyKm \nLong \n \n  clientKm \nLong \n \n  action \nLong \nOptions: ADD, REMOVE. \n \n \n\n=== Страница 165 ===\n \n165 \nDelete order \nThis method returns tasks assigned to orders. \n \nRequest \nMethod \nURL             \nDELETE \n/api/orders \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \norderId \nLong \nyes \nOrder ID to delete. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 166 ===\n \n166 \nPartners \n \nCreate clients partner \nThis method creates clients’ partner. Returns created partner ID. \n \nRequest \nMethod \nURL             \nPOST \n/api/partner \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"title\":\"Fleethand\", \n   \"companyCode\":\"F12345\", \n   \"vatCode\":\"V123456\", \n   \"countryIso\":\"lt\", \n   \"address\":\"Naugarduko g. 102, LT-02121 Vilnius\", \n   \"correspondenceAddress\":\"Naugarduko g. 102, LT-02121 Vilnius\", \n   \"fullName\":\"UAB Fleethand\", \n   \"phoneNumber\":\"+37060058558\", \n   \"email\":\"sales@fleethand.com\", \n   \"zoneId\":\"Europe/Vilnius\", \n   \"locale\":\"lt\", \n   \"usageLimit\":5, \n   \"heavyTrackModule\":false, \n   \"videoModule\":false, \n   \"managementModule\":false, \n   \"viewTasksModule\":true, \n   \"viewReportModule\":false, \n   \"docsConfirmed\":true, \n   \"postponement\":30, \n   \"credit\":null, \n   \"billingEmail\":\"sales@fleethand.com\", \n\n=== Страница 167 ===\n \n167 \n   \"currency\":\"EUR\", \n   \"vat\":\"VAT_19\", \n   \"skontoTerm\":1, \n   \"skontoDiscount\":0.5 \n} \n \nRequest model"
  },
  {
    "id": "POST__api_partner_employee",
    "method": "POST",
    "path": "/api/partner/employee",
    "category": "partners",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "partnerId": 1,
      "vehiclesVinCodes": [
        "VEHICLEVINCODE1",
        "VEHICLEVINCODE2"
      ],
      "from": "2020-01-01T11:17:20Z",
      "till": "2020-01-08T11:17:20Z"
    },
    "response": {
      "status": 200,
      "payload": 1
    },
    "auth_required": true,
    "full_context": "honeNumber \nString \nyes \n \nemail \nString \nyes \n \nzoneId \nZoneId \nyes \nExample: Europe/Vilnius \nlocale \nString \nno \n \nusageLimit \nLong \nno \nmegabytes/month \nheavyTrackModule \nboolean \nno \n \nvideoModule \nboolean \nno \n \nmanagementModule \nboolean \nno \n \nviewTasksModule \nboolean \nno \n \nviewReportModule \nboolean \nno \n \ndocsConfirmed \nboolean \nno \n \npostponement \nInteger \nno \nDay’s \ncredit \nInteger \nno \n \nbillingEmail \nString \nno \n \ncurrency \nString \nno \n \nvat \nString \nno \nAvailable options: VAT_0, \n\n=== Страница 168 ===\n \n168 \nVAT_15, VAT_19, VAT_21, VAT_23. \nskontoTerm \nInteger \nno \n \nskontoDiscount \nDouble \nno \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":1 \n} \n \nResponse model \nAttribute \nData type \nDescription \ndata: \n \n \n  payload \nLong \nCreated partner id. This id \nwill be used in feature \nrequests that are related to \npartners. \n \n \n\n=== Страница 169 ===\n \n169 \nCreate clients partner employee \nThis method creates clients’ partner employees. \n \nRequest \nMethod \nURL             \nPOST \n/api/partner/employee \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n[ \n   { \n      \"partnerId\":1, \n      \"fullName\":\"Partner employee\", \n      \"email\":\"partner.employee@fleethand.com\", \n      \"phoneNumber\":\"+3700000000\" \n   }, \n   { \n      \"partnerId\":1, \n      \"fullName\":\"Partner employee\", \n      \"email\":\"partner.partner@fleethand.com\", \n      \"phoneNumber\":\"+3700000000\" \n   } \n] \n \nRequest model \nAttribute \nData type \nRequired \nDescription \npartnerId \nString \nyes \n \nfullName \nString \nyes \n \nemail \nString \nyes \n \nphoneNumber \nString \nyes \n \n \n\n=== Страница 170 ===\n \n170 \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n      \"employees\":[ \n         { \n            \"id\":8218, \n            \"email\":\"partner.employee@fleethand.com\" \n         } \n      ], \n      \"errors\":[ \n         \"Email partner.partner@"
  },
  {
    "id": "POST__api_partner_vehicles",
    "method": "POST",
    "path": "/api/partner/vehicles",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "partnerId": 1,
      "vehiclesVinCodes": [
        "VEHICLEVINCODE1",
        "VEHICLEVINCODE2"
      ],
      "from": "2020-01-01T11:17:20Z",
      "till": "2020-01-08T11:17:20Z"
    },
    "response": {
      "status": 200,
      "payload": {
        "employees": [
          {
            "id": 8218,
            "email": "partner.employee@fleethand.com"
          }
        ],
        "errors": [
          "Email partner.partner@fleethand.com already in use"
        ]
      }
    },
    "auth_required": true,
    "full_context": " } \n] \n \nRequest model \nAttribute \nData type \nRequired \nDescription \npartnerId \nString \nyes \n \nfullName \nString \nyes \n \nemail \nString \nyes \n \nphoneNumber \nString \nyes \n \n \n\n=== Страница 170 ===\n \n170 \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n      \"employees\":[ \n         { \n            \"id\":8218, \n            \"email\":\"partner.employee@fleethand.com\" \n         } \n      ], \n      \"errors\":[ \n         \"Email partner.partner@fleethand.com already in use\" \n      ] \n   } \n} \n \nResponse model \nAttribute \nData type \nDescription \nemployees: \n \n \n  id \nLong \nCreated partners’ employee \nid. This id will be used in \nfeature requests that are \nrelated to partners \nemployees. \n  email \nString \n \nerrors: \nArray<String> \nIf there are emails already \nin use, they will be \nreturned as an error since \nthey cannot be created for \nnew employees. \n \n \n\n=== Страница 171 ===\n \n171 \nCreate clients partner vehicles \nThis method creates clients’ partner vehicles. \n \nRequest \nMethod \nURL             \nPOST \n/api/partner/vehicles \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"partnerId\":1, \n   \"vehiclesVinCodes\":[ \n      \"VEHICLEVINCODE1\", \n      \"VEHICLEVINCODE2\" \n   ], \n   \"from\":\"2020-01-01T11:17:20Z\", \n   \"till\":\"2020-01-08T11:17:20Z\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \npartnerId \nString \nyes \n \nvehiclesVinCodes \nArray<String> \nyes \nNot empty. \nfrom \nString \nyes \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nString \nyes \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \nResponse example \nStatus \nResponse \n\n=== Страница 172 ===\n \n172 \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"id\":1, \n         \"vinCode\":\"VEHICLEVINCODE1\" \n      }, \n      { \n         \"id\":2, \n         \"vinCode\":\"VEHICLEVINCODE2\" \n      } \n   ] \n} \n \nResponse model \nAttribute"
  },
  {
    "id": "DELETE__api_partner",
    "method": "DELETE",
    "path": "/api/partner",
    "category": "partners",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n            \"id\":2750, \n            \"vinCode\":\"VINCODE2\", \n            \"partnerTitle\":\"Partner2\", \n            \"activeFrom\":\"2019-07-29T21:00:00\", \n\n=== Страница 177 ===\n \n177 \n            \"activeTill\":\"2019-07-31T20:59:00\" \n         }",
    "response": {
      "status": 200,
      "payload": [
        {
          "id": 1,
          "vinCode": "VEHICLEVINCODE1"
        },
        {
          "id": 2,
          "vinCode": "VEHICLEVINCODE2"
        }
      ]
    },
    "auth_required": true,
    "full_context": ", \n      \"VEHICLEVINCODE2\" \n   ], \n   \"from\":\"2020-01-01T11:17:20Z\", \n   \"till\":\"2020-01-08T11:17:20Z\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \npartnerId \nString \nyes \n \nvehiclesVinCodes \nArray<String> \nyes \nNot empty. \nfrom \nString \nyes \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nString \nyes \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \nResponse example \nStatus \nResponse \n\n=== Страница 172 ===\n \n172 \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"id\":1, \n         \"vinCode\":\"VEHICLEVINCODE1\" \n      }, \n      { \n         \"id\":2, \n         \"vinCode\":\"VEHICLEVINCODE2\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \nemployees: \n \n \n  id \nLong \nCreated partners’ vehicle \nid. This id will be used in \nfeature requests that are \nrelated to partners' \nemployees. \n  email \nString \n \n \n \n\n=== Страница 173 ===\n \n173 \nDelete clients partner \nThis method deletes clients’ partner. \n \nRequest \nMethod \nURL             \nDELETE \n/api/partner \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \npartnerId \nLong \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 174 ===\n \n174 \nDelete clients partner employee \nThis method deletes clients’ partner employee. \n \nRequest \nMethod \nURL             \nDELETE \n/api/partner/employee \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nemployeeId \nLong \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 175 ===\n \n175 \nDelete clients partner vehicle \nThis method deletes clients’ partner vehicle. \n \nRequest \n"
  },
  {
    "id": "DELETE__api_partner_employee",
    "method": "DELETE",
    "path": "/api/partner/employee",
    "category": "partners",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n            \"id\":2750, \n            \"vinCode\":\"VINCODE2\", \n            \"partnerTitle\":\"Partner2\", \n            \"activeFrom\":\"2019-07-29T21:00:00\", \n\n=== Страница 177 ===\n \n177 \n            \"activeTill\":\"2019-07-31T20:59:00\" \n         }",
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "200, \n   \"payload\":[ \n      { \n         \"id\":1, \n         \"vinCode\":\"VEHICLEVINCODE1\" \n      }, \n      { \n         \"id\":2, \n         \"vinCode\":\"VEHICLEVINCODE2\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \nemployees: \n \n \n  id \nLong \nCreated partners’ vehicle \nid. This id will be used in \nfeature requests that are \nrelated to partners' \nemployees. \n  email \nString \n \n \n \n\n=== Страница 173 ===\n \n173 \nDelete clients partner \nThis method deletes clients’ partner. \n \nRequest \nMethod \nURL             \nDELETE \n/api/partner \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \npartnerId \nLong \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 174 ===\n \n174 \nDelete clients partner employee \nThis method deletes clients’ partner employee. \n \nRequest \nMethod \nURL             \nDELETE \n/api/partner/employee \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nemployeeId \nLong \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 175 ===\n \n175 \nDelete clients partner vehicle \nThis method deletes clients’ partner vehicle. \n \nRequest \nMethod \nURL             \nDELETE \n/api/partner/vehicles \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nids \nList<Long> \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 176 ===\n \n176 \nGet clients partners vehicles \nThis method returns clients’ all partners vehicles. \n "
  },
  {
    "id": "DELETE__api_partner_vehicles",
    "method": "DELETE",
    "path": "/api/partner/vehicles",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n            \"id\":2750, \n            \"vinCode\":\"VINCODE2\", \n            \"partnerTitle\":\"Partner2\", \n            \"activeFrom\":\"2019-07-29T21:00:00\", \n\n=== Страница 177 ===\n \n177 \n            \"activeTill\":\"2019-07-31T20:59:00\" \n         }",
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "Method \nURL             \nDELETE \n/api/partner \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \npartnerId \nLong \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 174 ===\n \n174 \nDelete clients partner employee \nThis method deletes clients’ partner employee. \n \nRequest \nMethod \nURL             \nDELETE \n/api/partner/employee \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nemployeeId \nLong \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 175 ===\n \n175 \nDelete clients partner vehicle \nThis method deletes clients’ partner vehicle. \n \nRequest \nMethod \nURL             \nDELETE \n/api/partner/vehicles \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nids \nList<Long> \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 176 ===\n \n176 \nGet clients partners vehicles \nThis method returns clients’ all partners vehicles. \n \nRequest \nMethod \nURL             \nGET \n/api/partner/vehicles \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \npartnerId \nLong \nno \nIf provided only specified client vehicles will \nbe returned. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n      \"1\":[ \n         { \n            \"id\":1351, \n            \"vinCo"
  },
  {
    "id": "GET__api_partner_vehicles",
    "method": "GET",
    "path": "/api/partner/vehicles",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n            \"id\":2750, \n            \"vinCode\":\"VINCODE2\", \n            \"partnerTitle\":\"Partner2\", \n            \"activeFrom\":\"2019-07-29T21:00:00\", \n\n=== Страница 177 ===\n \n177 \n            \"activeTill\":\"2019-07-31T20:59:00\" \n         }",
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "L             \nDELETE \n/api/partner/employee \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nemployeeId \nLong \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 175 ===\n \n175 \nDelete clients partner vehicle \nThis method deletes clients’ partner vehicle. \n \nRequest \nMethod \nURL             \nDELETE \n/api/partner/vehicles \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nids \nList<Long> \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 176 ===\n \n176 \nGet clients partners vehicles \nThis method returns clients’ all partners vehicles. \n \nRequest \nMethod \nURL             \nGET \n/api/partner/vehicles \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \npartnerId \nLong \nno \nIf provided only specified client vehicles will \nbe returned. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n      \"1\":[ \n         { \n            \"id\":1351, \n            \"vinCode\":\"VINCODE1\", \n            \"partnerTitle\":\"Partner1\", \n            \"activeFrom\":\"2019-02-04T22:00:00\", \n            \"activeTill\":\"2019-02-05T21:59:00\" \n         } \n      ], \n      \"2\":[ \n         { \n            \"id\":2750, \n            \"vinCode\":\"VINCODE2\", \n            \"partnerTitle\":\"Partner2\", \n            \"activeFrom\":\"2019-07-29T21:00:00\", \n\n=== Страница 177 ===\n \n177 \n            \"activeTill\":\"2019-07-31T20:59:00\" \n         } \n      ] \n   } \n} \n \n \nResponse model \nAttribute \nData type \nDescript"
  },
  {
    "id": "GET__api_payment-card_vehicle",
    "method": "GET",
    "path": "/api/payment-card/vehicle",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n            \"id\":2750, \n            \"vinCode\":\"VINCODE2\", \n            \"partnerTitle\":\"Partner2\", \n            \"activeFrom\":\"2019-07-29T21:00:00\", \n\n=== Страница 177 ===\n \n177 \n            \"activeTill\":\"2019-07-31T20:59:00\" \n         }",
    "response": "{ \n   \"status\":200, \n   \"payload\":{ \n      \"1\":[ \n         { \n            \"id\":1351, \n            \"vinCode\":\"VINCODE1\", \n            \"partnerTitle\":\"Partner1\", \n            \"activeFrom\":\"2019-02-04T22:00:00\", \n            \"activeTill\":\"2019-02-05T21:59:00\" \n         }",
    "auth_required": true,
    "full_context": "s will \nbe returned. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n      \"1\":[ \n         { \n            \"id\":1351, \n            \"vinCode\":\"VINCODE1\", \n            \"partnerTitle\":\"Partner1\", \n            \"activeFrom\":\"2019-02-04T22:00:00\", \n            \"activeTill\":\"2019-02-05T21:59:00\" \n         } \n      ], \n      \"2\":[ \n         { \n            \"id\":2750, \n            \"vinCode\":\"VINCODE2\", \n            \"partnerTitle\":\"Partner2\", \n            \"activeFrom\":\"2019-07-29T21:00:00\", \n\n=== Страница 177 ===\n \n177 \n            \"activeTill\":\"2019-07-31T20:59:00\" \n         } \n      ] \n   } \n} \n \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  partnersId: \nLong \nClient partners’ id. \n    id \nLong \nPartners’ vehicle id \n    vinCode \nString \n \n    partnerTitle \nString \n \n    activeFrom \nLocalDateTime \n \n    activeTill \nLocalDateTime \n \n\n=== Страница 178 ===\n \n178 \nPayment cards \nGet payment cards \nThis method returns payment cards. \n \nRequest \nMethod \nURL             \nGET \n/api/payment-card/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"id\":111, \n         \"vehicleId\":12345, \n         \"title\":\"payment card\", \n         \"cardNumber\":\"ABCDEFG\", \n         \"expiryDate\":\"20250828\", \n         \"type\":\"SHELL\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nLong \n \n  vehicleId \nLong \n \n\n=== Страница 179 ===\n \n179 \n \n  title \nString \n \n  cardNumber \nString \n \n  expiryDate \nString \n \n  type \nString \nAvailable types: \nSHELL; CIRCLE_K; \n \n \n\n=== Страница 180 ===\n \n180 \nCreate payment card \nThis method creates payment card. \nRequest \nMethod \nURL             \nPOST \n/api/payment-card/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId "
  },
  {
    "id": "POST__api_payment-card_vehicle",
    "method": "POST",
    "path": "/api/payment-card/vehicle",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "id": 111,
      "vehicleId": 12345,
      "title": "payment card",
      "cardNumber": "ABCDEFG",
      "expiryDate": "20250828",
      "type": "SHELL"
    },
    "response": {
      "status": 200,
      "payload": [
        {
          "id": 111,
          "vehicleId": 12345,
          "title": "payment card",
          "cardNumber": "ABCDEFG",
          "expiryDate": "20250828",
          "type": "SHELL"
        }
      ]
    },
    "auth_required": true,
    "full_context": "From \nLocalDateTime \n \n    activeTill \nLocalDateTime \n \n\n=== Страница 178 ===\n \n178 \nPayment cards \nGet payment cards \nThis method returns payment cards. \n \nRequest \nMethod \nURL             \nGET \n/api/payment-card/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"id\":111, \n         \"vehicleId\":12345, \n         \"title\":\"payment card\", \n         \"cardNumber\":\"ABCDEFG\", \n         \"expiryDate\":\"20250828\", \n         \"type\":\"SHELL\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nLong \n \n  vehicleId \nLong \n \n\n=== Страница 179 ===\n \n179 \n \n  title \nString \n \n  cardNumber \nString \n \n  expiryDate \nString \n \n  type \nString \nAvailable types: \nSHELL; CIRCLE_K; \n \n \n\n=== Страница 180 ===\n \n180 \nCreate payment card \nThis method creates payment card. \nRequest \nMethod \nURL             \nPOST \n/api/payment-card/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest body \nRequest body \n{ \n    \"vehicleId\":12345, \n    \"title\":\"payment card\", \n    \"cardNumber\":\"ABCDEFG\", \n    \"expiryDate\":\"20250828\", \n    \"type\":\"SHELL\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nvehicleId \nLong \nYes \n \ntitle \nString \nNo \nMax length 255. \ncardNumber \nString \nYes \nMax length 50. \nexpiryDate \nString \nYes, if type is \nSHELL \nFor SHELL type format should \nbe yyyyMMdd. \nMax length 20. \ntype \nString \nYes \nAvailable types: \nSHELL; CIRCLE_K; \n \nResponse example \nStatus \nResponse \n\n=== Страница 181 ===\n \n181 \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 182 ===\n \n182 \nUpdate payment card \nThis method updates payment card. \nRequest \nMethod \nURL             \nPUT \n/api/payment-card/vehicle \n \nRequest headers \nKey \nData type \nRequ"
  },
  {
    "id": "PUT__api_payment-card_vehicle",
    "method": "PUT",
    "path": "/api/payment-card/vehicle",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "id": null,
      "poiGroupId": 100,
      "name": "Name",
      "quantity": 1,
      "address": "Minsko pl. 3, Vilnius, LT-02121, Vilniaus m. sav.",
      "postCode": "02121",
      "city": "Vilnius",
      "country": "lt",
      "coordinates": "54.6519300, 25.3058750",
      "comment": "Comment",
      "emails": "email@email.com",
      "favorite": false,
      "stationPrice": 1.5,
      "fuelDiscount": 10,
      "stationGroup": "LOW"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": " \n\n=== Страница 180 ===\n \n180 \nCreate payment card \nThis method creates payment card. \nRequest \nMethod \nURL             \nPOST \n/api/payment-card/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest body \nRequest body \n{ \n    \"vehicleId\":12345, \n    \"title\":\"payment card\", \n    \"cardNumber\":\"ABCDEFG\", \n    \"expiryDate\":\"20250828\", \n    \"type\":\"SHELL\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nvehicleId \nLong \nYes \n \ntitle \nString \nNo \nMax length 255. \ncardNumber \nString \nYes \nMax length 50. \nexpiryDate \nString \nYes, if type is \nSHELL \nFor SHELL type format should \nbe yyyyMMdd. \nMax length 20. \ntype \nString \nYes \nAvailable types: \nSHELL; CIRCLE_K; \n \nResponse example \nStatus \nResponse \n\n=== Страница 181 ===\n \n181 \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 182 ===\n \n182 \nUpdate payment card \nThis method updates payment card. \nRequest \nMethod \nURL             \nPUT \n/api/payment-card/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest body \nRequest body \n{ \n    \"id\":111, \n    \"vehicleId\":12345, \n    \"title\":\"payment card\", \n    \"cardNumber\":\"ABCDEFG\", \n    \"expiryDate\":\"20250828\", \n    \"type\":\"SHELL\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nid \nLong \nYes \nPayment card ID. \nvehicleId \nLong \nYes \n \ntitle \nString \nNo \nMax length 255. \ncardNumber \nString \nYes \nMax length 50. \nexpiryDate \nString \nYes, if type is \nSHELL \nFor SHELL type format should \nbe yyyyMMdd. \nMax length 20. \ntype \nString \nYes \nAvailable types: \nSHELL; CIRCLE_K; \n \n\n=== Страница 183 ===\n \n183 \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 184 ===\n \n184 \nDelete payment card \nThis method deletes payment card. \nRequest \nMethod \nURL             \nDELETE \n/api/payment-car"
  },
  {
    "id": "DELETE__api_payment-card_vehicle",
    "method": "DELETE",
    "path": "/api/payment-card/vehicle",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "id": null,
      "poiGroupId": 100,
      "name": "Name",
      "quantity": 1,
      "address": "Minsko pl. 3, Vilnius, LT-02121, Vilniaus m. sav.",
      "postCode": "02121",
      "city": "Vilnius",
      "country": "lt",
      "coordinates": "54.6519300, 25.3058750",
      "comment": "Comment",
      "emails": "email@email.com",
      "favorite": false,
      "stationPrice": 1.5,
      "fuelDiscount": 10,
      "stationGroup": "LOW"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "ard \nThis method updates payment card. \nRequest \nMethod \nURL             \nPUT \n/api/payment-card/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest body \nRequest body \n{ \n    \"id\":111, \n    \"vehicleId\":12345, \n    \"title\":\"payment card\", \n    \"cardNumber\":\"ABCDEFG\", \n    \"expiryDate\":\"20250828\", \n    \"type\":\"SHELL\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nid \nLong \nYes \nPayment card ID. \nvehicleId \nLong \nYes \n \ntitle \nString \nNo \nMax length 255. \ncardNumber \nString \nYes \nMax length 50. \nexpiryDate \nString \nYes, if type is \nSHELL \nFor SHELL type format should \nbe yyyyMMdd. \nMax length 20. \ntype \nString \nYes \nAvailable types: \nSHELL; CIRCLE_K; \n \n\n=== Страница 183 ===\n \n183 \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 184 ===\n \n184 \nDelete payment card \nThis method deletes payment card. \nRequest \nMethod \nURL             \nDELETE \n/api/payment-card/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ncardId \nLong \nyes \nPayment card ID. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 185 ===\n \n185 \nPOI \n \nDelete POI \nThis method deletes POI by id. \n \nRequest \nMethod \nURL             \nDELETE \n/api/poi/poiId \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 186 ===\n \n186 \nDelete POI group \nThis method deletes POI group by id. \n \nRequest \nMethod \nURL             \nDELETE \n/api/poi-group/poiGroupId \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nStri"
  },
  {
    "id": "DELETE__api_poi_poiId",
    "method": "DELETE",
    "path": "/api/poi/poiId",
    "category": "general",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "id": null,
      "poiGroupId": 100,
      "name": "Name",
      "quantity": 1,
      "address": "Minsko pl. 3, Vilnius, LT-02121, Vilniaus m. sav.",
      "postCode": "02121",
      "city": "Vilnius",
      "country": "lt",
      "coordinates": "54.6519300, 25.3058750",
      "comment": "Comment",
      "emails": "email@email.com",
      "favorite": false,
      "stationPrice": 1.5,
      "fuelDiscount": 10,
      "stationGroup": "LOW"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "id \nLong \nYes \nPayment card ID. \nvehicleId \nLong \nYes \n \ntitle \nString \nNo \nMax length 255. \ncardNumber \nString \nYes \nMax length 50. \nexpiryDate \nString \nYes, if type is \nSHELL \nFor SHELL type format should \nbe yyyyMMdd. \nMax length 20. \ntype \nString \nYes \nAvailable types: \nSHELL; CIRCLE_K; \n \n\n=== Страница 183 ===\n \n183 \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 184 ===\n \n184 \nDelete payment card \nThis method deletes payment card. \nRequest \nMethod \nURL             \nDELETE \n/api/payment-card/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ncardId \nLong \nyes \nPayment card ID. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 185 ===\n \n185 \nPOI \n \nDelete POI \nThis method deletes POI by id. \n \nRequest \nMethod \nURL             \nDELETE \n/api/poi/poiId \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 186 ===\n \n186 \nDelete POI group \nThis method deletes POI group by id. \n \nRequest \nMethod \nURL             \nDELETE \n/api/poi-group/poiGroupId \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 187 ===\n \n187 \nUpsert POI \nThis method inserts or updates instance of POI. \n \nRequest \nMethod \nURL             \nPOST \n/api/pois \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"id\":nu"
  },
  {
    "id": "DELETE__api_poi-group_poiGroupId",
    "method": "DELETE",
    "path": "/api/poi-group/poiGroupId",
    "category": "general",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "id": null,
      "poiGroupId": 100,
      "name": "Name",
      "quantity": 1,
      "address": "Minsko pl. 3, Vilnius, LT-02121, Vilniaus m. sav.",
      "postCode": "02121",
      "city": "Vilnius",
      "country": "lt",
      "coordinates": "54.6519300, 25.3058750",
      "comment": "Comment",
      "emails": "email@email.com",
      "favorite": false,
      "stationPrice": 1.5,
      "fuelDiscount": 10,
      "stationGroup": "LOW"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 184 ===\n \n184 \nDelete payment card \nThis method deletes payment card. \nRequest \nMethod \nURL             \nDELETE \n/api/payment-card/vehicle \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ncardId \nLong \nyes \nPayment card ID. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 185 ===\n \n185 \nPOI \n \nDelete POI \nThis method deletes POI by id. \n \nRequest \nMethod \nURL             \nDELETE \n/api/poi/poiId \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 186 ===\n \n186 \nDelete POI group \nThis method deletes POI group by id. \n \nRequest \nMethod \nURL             \nDELETE \n/api/poi-group/poiGroupId \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 187 ===\n \n187 \nUpsert POI \nThis method inserts or updates instance of POI. \n \nRequest \nMethod \nURL             \nPOST \n/api/pois \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"id\":null, \n   \"poiGroupId\":100, \n   \"name\":\"Name\", \n   \"quantity\":1, \n   \"address\":\"Minsko pl. 3, Vilnius, LT-02121, Vilniaus m. sav.\", \n   \"postCode\":\"02121\", \n   \"city\":\"Vilnius\", \n   \"country\":\"lt\", \n   \"coordinates\":\"54.6519300, 25.3058750\", \n   \"comment\":\"Comment\", \n   \"emails\":\"email@email.com\", \n   \"favorite\":false, \n   \"stationPrice\":1.5, \n   \"fuelDiscount\":10, \n   \"station"
  },
  {
    "id": "POST__api_pois",
    "method": "POST",
    "path": "/api/pois",
    "category": "general",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "id": null,
      "poiGroupId": 100,
      "name": "Name",
      "quantity": 1,
      "address": "Minsko pl. 3, Vilnius, LT-02121, Vilniaus m. sav.",
      "postCode": "02121",
      "city": "Vilnius",
      "country": "lt",
      "coordinates": "54.6519300, 25.3058750",
      "comment": "Comment",
      "emails": "email@email.com",
      "favorite": false,
      "stationPrice": 1.5,
      "fuelDiscount": 10,
      "stationGroup": "LOW"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "tion \ncardId \nLong \nyes \nPayment card ID. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 185 ===\n \n185 \nPOI \n \nDelete POI \nThis method deletes POI by id. \n \nRequest \nMethod \nURL             \nDELETE \n/api/poi/poiId \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 186 ===\n \n186 \nDelete POI group \nThis method deletes POI group by id. \n \nRequest \nMethod \nURL             \nDELETE \n/api/poi-group/poiGroupId \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 187 ===\n \n187 \nUpsert POI \nThis method inserts or updates instance of POI. \n \nRequest \nMethod \nURL             \nPOST \n/api/pois \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"id\":null, \n   \"poiGroupId\":100, \n   \"name\":\"Name\", \n   \"quantity\":1, \n   \"address\":\"Minsko pl. 3, Vilnius, LT-02121, Vilniaus m. sav.\", \n   \"postCode\":\"02121\", \n   \"city\":\"Vilnius\", \n   \"country\":\"lt\", \n   \"coordinates\":\"54.6519300, 25.3058750\", \n   \"comment\":\"Comment\", \n   \"emails\":\"email@email.com\", \n   \"favorite\":false, \n   \"stationPrice\":1.5, \n   \"fuelDiscount\":10, \n   \"stationGroup\":\"LOW\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nid \nLong \nno (if creating \nnew POI) \nIf not provided, a new POI \nwill be created. \npoiGroupId \nlong \n \n \n\n=== Страница 188 ===\n \n188 \nname \nString \n \n \nquantity \nLong \n \n \naddress \nString \n \n \npostCode \nString \n \n \ncity \nString \n \n \ncountry \nString \n \nISO country code (According to \nAlpha-2 code) \ncoordinates \nStr"
  },
  {
    "id": "POST__api_poi-group",
    "method": "POST",
    "path": "/api/poi-group",
    "category": "general",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n         \"vehicleId\":12345, \n         \"date\":\"2022-06-01\", \n         \"country\":\"fr\", \n\n=== Страница 192 ===\n \n192 \n         \"gpsDistance\":428.58, \n         \"odometerDistance\":438.14, \n         \"consumedFuel\":150.0 \n      }",
    "response": {
      "status": 200,
      "payload": [
        {
          "poiId": "1"
        }
      ]
    },
    "auth_required": true,
    "full_context": "ail.com\", \n   \"favorite\":false, \n   \"stationPrice\":1.5, \n   \"fuelDiscount\":10, \n   \"stationGroup\":\"LOW\" \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nid \nLong \nno (if creating \nnew POI) \nIf not provided, a new POI \nwill be created. \npoiGroupId \nlong \n \n \n\n=== Страница 188 ===\n \n188 \nname \nString \n \n \nquantity \nLong \n \n \naddress \nString \n \n \npostCode \nString \n \n \ncity \nString \n \n \ncountry \nString \n \nISO country code (According to \nAlpha-2 code) \ncoordinates \nString \n \n \ncomment \nString \n \n \nemails \nString \n \n \nfavorite \nBoolean \n \n \nstationPrice \nDouble \n \n \nfuelDiscount \nDouble \n \n \nstationGroup \nString \n \nAvailable options: LOW, \nMEDIUM, HIGH \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"poiId\":\"1\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nLong \n \n \n \n\n=== Страница 189 ===\n \n189 \nUpsert POI group \nThis method inserts or updates instance of POI group. \n \nRequest \nMethod \nURL             \nPOST \n/api/poi-group \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"id\":null, \n   \"name\":\"Postman\", \n   \"important\":false, \n   \"color\":\"#000000\", \n   \"privateOwner\":true, \n   \"type\":\"FERRYBOAT\", \n   \"department\":100, \n   \"secureOwner\":true \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nid \nLong \nno (if creating \nnew POI group) \nIf not provided, a new POI \ngroup will be created. \nname \nString \n \n \nimportant \nboolean \n \n \ncolor \nString \n \n \nprivateOwner \nboolean \n \n \ntype \nString \n \nTypes: FERRYBOAT, TRAIN, \nSERVICE, WASH, PARKING, \n\n=== Страница 190 ===\n \n190 \nFUEL_STATION, CMR_POST, \nPALLETS_POST, OTHER \ndepartment \nLong \n \n \nsecureOwner \nboolean \n \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"poiGroupId\":\"10\" \n      } \n   ] \n} \n \nResponse model \nAttribute"
  },
  {
    "id": "GET__api_report_day-country",
    "method": "GET",
    "path": "/api/report/day-country",
    "category": "reports",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n            \"group\":\"de\", \n            \"gpsMoved\":41.38, \n            \"gpsStopped\":191.29, \n\n=== Страница 194 ===\n \n194 \n            \"gpsTotal\":232.67, \n            \"gpsDistance\":2619.15, \n            \"gpsFuelUsage\":24.49, \n            \"tachoMoved\":40.43, \n            \"tachoStopped\":192.24, \n            \"tachoTotal\":232.67, \n            \"odometerDistance\":2640.33, \n            \"fuelUsage\":24.3, \n            \"consumedFuel\":641.5, \n            \"counterFuelUsage\":0.0, \n            \"consumedCounterFuel\":0.0, \n            \"odometerAtStart\":426709.89, \n            \"odometerAtEnd\":430330.57, \n            \"fuelLevelAtStart\":960, \n            \"fuelLevelAtEnd\":737, \n            \"fuelFilled\":798.98 \n         }",
    "response": {
      "status": 200,
      "payload": [
        {
          "poiGroupId": "10"
        }
      ]
    },
    "auth_required": true,
    "full_context": " \n   \"color\":\"#000000\", \n   \"privateOwner\":true, \n   \"type\":\"FERRYBOAT\", \n   \"department\":100, \n   \"secureOwner\":true \n} \n \nRequest model \nAttribute \nData type \nRequired \nDescription \nid \nLong \nno (if creating \nnew POI group) \nIf not provided, a new POI \ngroup will be created. \nname \nString \n \n \nimportant \nboolean \n \n \ncolor \nString \n \n \nprivateOwner \nboolean \n \n \ntype \nString \n \nTypes: FERRYBOAT, TRAIN, \nSERVICE, WASH, PARKING, \n\n=== Страница 190 ===\n \n190 \nFUEL_STATION, CMR_POST, \nPALLETS_POST, OTHER \ndepartment \nLong \n \n \nsecureOwner \nboolean \n \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"poiGroupId\":\"10\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  poiGroupId \nLong \n \n\n=== Страница 191 ===\n \n191 \nReports \n \nGet day-country driving summary \nThis method returns a driving summary by day and country for the selected vehicle and period of time (maximum \ninterval is 3 months). \n \nRequest \nMethod \nURL             \nGET \n/api/report/day-country \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime yes \nTime from which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime yes \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \nvehicleId \nLong \nyes \nFleethand vehicle id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"vehicleId\":12345, \n         \"date\":\"2022-06-01\", \n         \"country\":\"fr\", \n\n=== Страница 192 ===\n \n192 \n         \"gpsDistance\":428.58, \n         \"odometerDistance\":438.14, \n         \"consumedFuel\":150.0 \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  vehicleId \nLong \n \n  date \nLo"
  },
  {
    "id": "GET__api_report_period-summary",
    "method": "GET",
    "path": "/api/report/period-summary",
    "category": "reports",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "options",
        "description": "DAY, COUNTRY,",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n            \"group\":\"de\", \n            \"gpsMoved\":41.38, \n            \"gpsStopped\":191.29, \n\n=== Страница 194 ===\n \n194 \n            \"gpsTotal\":232.67, \n            \"gpsDistance\":2619.15, \n            \"gpsFuelUsage\":24.49, \n            \"tachoMoved\":40.43, \n            \"tachoStopped\":192.24, \n            \"tachoTotal\":232.67, \n            \"odometerDistance\":2640.33, \n            \"fuelUsage\":24.3, \n            \"consumedFuel\":641.5, \n            \"counterFuelUsage\":0.0, \n            \"consumedCounterFuel\":0.0, \n            \"odometerAtStart\":426709.89, \n            \"odometerAtEnd\":430330.57, \n            \"fuelLevelAtStart\":960, \n            \"fuelLevelAtEnd\":737, \n            \"fuelFilled\":798.98 \n         }",
    "response": null,
    "auth_required": true,
    "full_context": "vided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime yes \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \nvehicleId \nLong \nyes \nFleethand vehicle id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"vehicleId\":12345, \n         \"date\":\"2022-06-01\", \n         \"country\":\"fr\", \n\n=== Страница 192 ===\n \n192 \n         \"gpsDistance\":428.58, \n         \"odometerDistance\":438.14, \n         \"consumedFuel\":150.0 \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  vehicleId \nLong \n \n  date \nLocalDate \n \n  country \nString \n \n  gpsDistance \ndouble \n \n  odometerDistance \ndouble \n \n  consumedFuel \ndouble \n \n \n \n\n=== Страница 193 ===\n \n193 \nGet driving period summary \nThis method returns a driving period summary by vehicle for selected grouping type and period.  \nNOTE: From API v2, the maximum days period for this call is 90 days. \n \nRequest \nMethod \nURL             \nGET \n/api/report/period-summary \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime yes \nTime from which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime yes \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \ndeviceKey \nString \nyes \nParameter by which information is taken. \ngroupType \nString \nyes \nGrouping type. Available options: DAY, COUNTRY, \nDRIVER. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n      \"deviceKey\":\"123456789\", \n      \"entries\":[ \n         { \n            \"group\":\"de\", \n            \"gpsMoved\":41.38, \n            \"gpsStopped\":191.29, \n\n=== Страница 194 ===\n \n194 \n            \"gpsTotal\":232.67, \n            \"gpsDi"
  },
  {
    "id": "GET__api_report_period-tolls",
    "method": "GET",
    "path": "/api/report/period-tolls",
    "category": "reports",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "country": "ITA",
      "cost": 918.52,
      "distance": 1553.93
    },
    "response": null,
    "auth_required": true,
    "full_context": "   totals: \n \n \n      totalGpsMoved \ndouble \n(h) \n      totalGpsStopped \ndouble \n(h) \n      totalGpsTotal \ndouble \n(h) \n      totalGpsDistance \ndouble \n(km) \n      totalGpsFuelUsage \ndouble \n(l/100km) \n      totalTachoMoved \ndouble \n(h) \n\n=== Страница 196 ===\n \n196 \n      totalTachoStopped \ndouble \n(h) \n      totalTachoTotal \ndouble \n(h) \n      totalOdometerDistance \ndouble \n(km) \n      totalOdometerFuelUsage \ndouble \n(l/100km) \n      totalConsumedFuel \ndouble \n(l) \n      totalOdometerCounterFuelUsage \ndouble \n(l/100km) \n      totalConsumedCounterFuel \ndouble \n(l) \n      firstOdometerAtStart \ndouble \n(km) \n      lastOdometerAtEnd \ndouble \n(km) \n      fuelLevelAtStart \nInteger \n(l) \n      fuelLevelAtEnd \nInteger \n(l) \n      totalfuelFilled \ndouble \n(l) If provided groupType \nCOUNTRY - null \n \n \n \n\n=== Страница 197 ===\n \n197 \nGet period tolls \nThis method returns approximate tolls by vehicle route in specified period.  \nNOTE: The maximum days period for this call is 14 days. \n \nRequest \nMethod \nURL             \nGET \n/api/report/period-tolls \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime yes \nTime from which period information is \ntaken. Date must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime yes \nTime till which period information is \ntaken. Date must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \ndeviceKey \nString \nno (if vinCode \nis present) \nParameter by which information is taken. \nvinCode \nString \nno (if \ndeviceKey is \npresent) \nParameter by which information is taken. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n      \"vehicleId\": 123456, \n      \"vinCode\": \"vinCode\", \n      \"totalDistance\": 2951.29, \n      \"tolls\": { \n\n=== Страница 198 ===\n \n198 \n         \"countryTolls\": [ \n            { \n               \"country"
  },
  {
    "id": "GET__api_tacho_driver-activities",
    "method": "GET",
    "path": "/api/tacho/driver-activities",
    "category": "activities",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "activityType": "REST_45_HOURS",
      "startedAt": "2021-06-21T14:01:00.464",
      "finishedAt": "2021-06-23T11:00:00.464"
    },
    "response": "{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"activityType\":\"DRIVING\", \n         \"startedAt\":\"2023-06-21T11:56:10.464\", \n         \"finishedAt\":\"2021-06-21T13:58:10.464\" \n      }, \n      { \n         \"activityType\":\"STANDSTILL\", \n         \"startedAt\":\"2023-06-21T13:58:10.464\", \n         \"finishedAt\":\"2021-06-21T14:01:00.464\" \n      }, \n      { \n         \"activityType\":\"REST_45_HOURS\", \n         \"startedAt\":\"2021-06-21T14:01:00.464\", \n         \"finishedAt\":\"2021-06-23T11:00:00.464\" \n      }, \n  ] \n}",
    "auth_required": true,
    "full_context": " \n            { \n               \"country\": \"FRA\", \n                             \"cost\": 342.0, \n                             \"distance\": 1397.36 \n            }, \n            { \n               \"country\": \"ITA\", \n                             \"cost\": 918.52, \n                             \"distance\": 1553.93 \n            } \n         ], \n                 \"totalCost\": 1260.52, \n      } \n   } \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  vehicleId \nLong \nFleethand vehicle id. \n  vinCode \nString \n \n  totalDistance \ndouble \nTotal distance in km for provided \nperiod. \n  tolls: \n \n \n    countryTolls: \nArray<CountryToll> \n \n      country \nString \nCountry code in ISO 3166-1 alpha-3 \nformat. \n      cost \ndouble \nCost in EUR. \n      distance \ndouble \nDistance in km. \n    totalCost \ndouble \nTotal cost in EUR. \n \n \n \n \n\n=== Страница 199 ===\n \n199 \nTacho \n \nGet driver activities \nThis method returns information of drivers’ activities for a provided period of time. \n \nRequest \nMethod \nURL             \nGET \n/api/tacho/driver-activities \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndeviceKey \nString \nno (if \nvinCode \nis \npresent) \nParameter by which information is taken. \nvinCode \nString \nno (if \ndeviceKey \nis \npresent) \nParameter by which information is taken. \nfrom \nLocalDateTime \nyes \nTime from which period information is taken.  \nDate must be provided ISO 8601 \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nyes \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \n \n \nResponse example \nStatus \nResponse \n\n=== Страница 200 ===\n \n200 \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"activityType\":\"DRIVING\", \n         \"startedAt\":\"2023-06-21T11:56:10.464\", \n         \"finishedAt\":\"2021-06-21T13:58:10.464\" \n      }, \n      { \n "
  },
  {
    "id": "GET__api_tacho_current",
    "method": "GET",
    "path": "/api/tacho/current",
    "category": "general",
    "description": "activityType",
    "parameters": [],
    "request_body": "{ \n         \"driverCard\":\"V100000075665000\", \n         \"latestActivityType\":\"DRIVE\", \n         \"latestActivityStart\":\"2022-09-13T14:58:00\", \n         \"latestActivityDuration\":\"2460\", \n         \"drivingPeriodStarted\":\"2022-09-13T12:47:00\", \n         \"drivingBeforeBreak\":3060, \n         \"drivingLeftTillBreak\":6576, \n\n=== Страница 202 ===\n \n202 \n         \"lastDrivingExceeded\":false, \n         \"drivingDayStarted\":\"2022-09-12T20:29:00\", \n         \"todayDriving\":26160, \n         \"todayDrivingExceeded\":false, \n         \"todayDrivingLeft\":6576, \n         \"todayDrivingAllowed\":36000, \n         \"yesterdayDriving\":0, \n         \"thisWeekDriving\":26160, \n         \"thisWeekDrivingExceeded\":false, \n         \"thisWeekDrivingLeft\":114300, \n         \"thisWeekDrivingAllowed\":140460, \n         \"longerDrivingCount\":0, \n         \"twoWeeksDriving\":209700, \n         \"twoWeeksDrivingExceeded\":false, \n         \"twoWeeksDrivingLeft\":114300, \n         \"twoDriversDrivingLeft\":6576, \n         \"todayWorking\":600, \n         \"thisWeekWorking\":600, \n         \"todayAtWork\":27960, \n         \"thisWeekAtWork\":27960, \n         \"restedBeforeDriving\":276180, \n         \"lastWeekRest\":276180, \n         \"shorterRestsCount\":0, \n         \"nextDayRest\":\"2022-09-13T17:29:00\", \n         \"nextWeekRest\":\"2022-09-18T20:29:00\", \n         \"nextShortRestStart\":\"2022-09-13T17:29:00\", \n         \"nextLongRestStart\":\"2022-09-13T15:29:00\", \n         \"startOfOperationalWeek\":\"2022-09-12T20:29:00\", \n         \"lastRegularWeeklyRestSettlementWeek\":0, \n         \"fullDriverCard\":\"V100000075665001\", \n         \"weekRestType\":\"THIS_WEEK\", \n         \"nextLongWeekResting\":\"2022-09-25T20:29:00\" \n      }",
    "response": "{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"activityType\":\"DRIVING\", \n         \"startedAt\":\"2023-06-21T11:56:10.464\", \n         \"finishedAt\":\"2021-06-21T13:58:10.464\" \n      }, \n      { \n         \"activityType\":\"STANDSTILL\", \n         \"startedAt\":\"2023-06-21T13:58:10.464\", \n         \"finishedAt\":\"2021-06-21T14:01:00.464\" \n      }, \n      { \n         \"activityType\":\"REST_45_HOURS\", \n         \"startedAt\":\"2021-06-21T14:01:00.464\", \n         \"finishedAt\":\"2021-06-23T11:00:00.464\" \n      }, \n  ] \n}",
    "auth_required": true,
    "full_context": "example \nStatus \nResponse \n\n=== Страница 200 ===\n \n200 \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"activityType\":\"DRIVING\", \n         \"startedAt\":\"2023-06-21T11:56:10.464\", \n         \"finishedAt\":\"2021-06-21T13:58:10.464\" \n      }, \n      { \n         \"activityType\":\"STANDSTILL\", \n         \"startedAt\":\"2023-06-21T13:58:10.464\", \n         \"finishedAt\":\"2021-06-21T14:01:00.464\" \n      }, \n      { \n         \"activityType\":\"REST_45_HOURS\", \n         \"startedAt\":\"2021-06-21T14:01:00.464\", \n         \"finishedAt\":\"2021-06-23T11:00:00.464\" \n      }, \n  ] \n} \n \nRequest model \nAttribute \nData type \nDescription \nactivityType \nString \nPossible values:  \nDRIVING, STANDSTILL, \nREST_15_30_45, \nREST_11_HOURS, \nREST_24_HOURS, \nREST_45_HOURS,  \nREST_9_HOURS \nstartedAt \nTimestamp \n \nfinishedAt \nTimestamp \n \n \n \n\n=== Страница 201 ===\n \n201 \nGet tacho current info \nThis method returns current information of drivers’ activities by providing the device key of a telemetry device. \n \nRequest \nMethod \nURL             \nGET \n/api/tacho/current \n \n \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndeviceKey \nString \nno (if \nvinCode \nis \npresent) \nParameter by which information is taken. \nvinCode \nString \nno (if \ndeviceKey \nis \npresent) \nParameter by which information is taken. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"driverCard\":\"V100000075665000\", \n         \"latestActivityType\":\"DRIVE\", \n         \"latestActivityStart\":\"2022-09-13T14:58:00\", \n         \"latestActivityDuration\":\"2460\", \n         \"drivingPeriodStarted\":\"2022-09-13T12:47:00\", \n         \"drivingBeforeBreak\":3060, \n         \"drivingLeftTillBreak\":6576, \n\n=== Страница 202 ===\n \n202 \n         \"lastDrivingExceeded\":false, \n         \"drivingDayStarted\":\"2022-09-12T20:29:00\", \n         \"todayDriving\":26160"
  },
  {
    "id": "GET__api_period-tacho",
    "method": "GET",
    "path": "/api/period-tacho",
    "category": "general",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-21).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-21).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "year": "2022",
      "month": "06",
      "day": "01",
      "hours": "05",
      "minutes": "20"
    },
    "response": null,
    "auth_required": true,
    "full_context": "5h or 13h after the last \nday/week rest. \n  nextWeekRest \nLocalDateTime \nTime of a required next \nweekRest. \n  nextWeekResting \nLong \nNext week rest duration \n(seconds). \n  nextShortRestStart \nLocalDateTime \nStart of 9h day rest. \n  nextLongRestStart \nLocalDateTime \nStart of 11h day rest. \n  startOfOperationalWeek \nLocalDateTime \nEnd of the last week rest \nlastRegularWeeklyRestSettlementWeek Integer \nWhen was the last 45h week \nrest: \n0 = this week, -1 = last week, \n-2 = the week before last \n  fullDriverCard \nString \nFull driver card number as it’s \nwritten on a real driver’s card \n  weekRestType \nWeekRestType \nWhen was the last 45h week \nrest: \nTHIS_WEEK, PREVIOUS_WEEK, \nBEFORE_PREVIOUS_WEEK \n  nextLongWeekResting \nLocalDateTime \nTime of next 45h week rest if \nclient uses tacho logic for \nfreezers and next week rest can \nbe 24h, otherwise it is null \n \n \n \n\n=== Страница 206 ===\n \n206 \nGet tacho period info \nThis method returns tachograph information for a period of time. \n \nRequest \nMethod \nURL             \nGET \n/api/period-tacho \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDate \nyes \nTime from which period information is taken.  \nDate must be provided ISO 8601  \n(e.g., 2020-01-21). \ntill \nLocalDate \nyes \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-21). \ndriverCard \nString \nyes \nParameter by which information is taken. \nzoneId \nZoneId \nyes \nThe format to which the date is translated \n(e.g., Europe/Paris). \naddVehicle \nboolean \nno \nAdds vehicle’s plateNumber to tachoChartItem if \ntrue \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"tachoChartItems\":[ \n            { \n               \"type\":\"RESTING\", \n\n=== Страница 207 ===\n \n207 \n               \"startTime\":{ \n                  \"year\":\"2022\", \n"
  },
  {
    "id": "GET__api_tacho_driver-faults",
    "method": "GET",
    "path": "/api/tacho/driver-faults",
    "category": "drivers",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-21).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-21).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "violation": "VERY_SERIOUS",
      "date": "2023-06-19",
      "country": "lt",
      "vehicle": "MDY319"
    },
    "response": null,
    "auth_required": true,
    "full_context": "       ] \n      } \n   ] \n} \n\n=== Страница 208 ===\n \n208 \n \n \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  tachoChartItems: \n \n \n    type \nvarchar(100) \nTypes: SUM, DRIVING, WORKING, \nAT_WORK, RESTING, CARDLESS. \n    startTime: \n \n \n      year \nString \n \n      month \nString \n \n      day \nString \n \n      hours \nString \n \n      minutes \nString \n \n    endTime: \n \n \n      year \nString \n \n      month \nString \n \n      day \nString \n \n      hours \nString \n \n      minutes \nString \n \n    duration \nString \n \n    ddd \nboolean \nIs information received from .ddd \nfile. \n    unknownActivity  \nboolean \nIs activity unknown, because not \nentered manually. To tachograph - \ncan be “true” only when information \nreceived from .ddd file. \n    driver \nString \nDriver’s card number \n    plateNumber \nString \nVehicle’s plate number \n \n \n \n\n=== Страница 209 ===\n \n209 \nGet tacho faults \nThis method returns a list of violated driving/resting rules of a driver for a period of time. \n \nRequest \nMethod \nURL             \nGET \n/api/tacho/driver-faults \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndriver \nString \nno (if fullDriver or \ntableNumber is present) \nParameter by which information is \ntaken. (e.g., 0000000005266000) \nfullDriver \nString \nno (if driver or \ntableNumber is present) \nParameter by which information is \ntaken. (e.g., 0000000005266002) \ntableNumber String \nno (if driver or \nfullDriver is present) \nParameter by which information is \ntaken. \nfrom \nLocalDate \nyes \nTime from which period information is \ntaken.  Date must be provided ISO \n8601  \n(e.g., 2020-01-21). \ntill \nLocalDate \nyes \nTime till which period information is \ntaken. Date must be provided ISO 8601  \n(e.g., 2020-01-21). \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":{ \n      \"driver\":\"V100000112119000\", \n     "
  },
  {
    "id": "POST__api_tasks",
    "method": "POST",
    "path": "/api/tasks",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n\n=== Страница 218 ===\n \n218 \n         \"distance\":133617, \n         \"country\":\"LTU\" \n      }",
    "response": {
      "status": 200,
      "payload": 1
    },
    "auth_required": true,
    "full_context": " entered in tachograph after \ncountry crossing \n    count \ninteger Number of faults of this type \n    violations: \n \n \n      violation \nString \nMOST_SERIOUS, VERY_SERIOUS, SERIOUS, MINOR \n      date \nString \nFault’s date \n      country \nString \nCountry where driving fault was made \n      vehicle \nString \nLicence plate number of a specific vehicle \n  countryBeginEndNotRegistered: \n \nNot entered Begin of work day or End of work \nday in tachograph \n    count \ninteger Number of faults of this type \n    violations: \n \n \n\n=== Страница 216 ===\n \n216 \n      violation \nString \nMOST_SERIOUS, VERY_SERIOUS, SERIOUS, MINOR \n      date \nString \nFault’s date \n      country \nString \nCountry where driving fault was made \n      vehicle \nString \nLicence plate number of a specific vehicle \n \n \n\n=== Страница 217 ===\n \n217 \nTasks \n \nAppend task \nThis method is used to append a task to the vehicle’s task list. Method returns Fleethand system task ID, which \nwill be used further to get task data. \n \nRequest \nMethod \nURL             \nPOST \n/api/tasks \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"vehicleId\":10617, \n   \"lat\":54.651837, \n   \"lng\":25.305864, \n   \"waypoints\":\"51.23759,17.4935223|53.1962775,23.1556143|54.6820828,23.5816274\", \n   \"locationName\":\"Minsko pl. 3\", \n   \"locationAddress\":\"Minsko pl. 3, Vilnius 02121, Lithuania\", \n   \"comment\":\"2\", \n   \"type\":\"LOADING\", \n   \"dateTime\":\"2020-11-03 12:30\", \n   \"sendMessage\":true, \n   \"polyline\":\"g{~tHgejmA|L|YdG~KlDhFvEzFxAxA`F|EXVbRd\", \n   \"duration\":15617, \n   \"distance\":133617, \n   \"externalPoiId\":\"12500\", \n   \"contactlessType\":\"CIRCLE_K\", \n   \"html\":\"<span>some text</span>\", \n   \"timeFrom\":\"2025-11-03T12:30\", \n   \"timeTill\":\"2025-11-04T12:30\", \n   \"countries\":[ \n      { \n\n=== Страница 218 ===\n \n218 \n         \"distance\":133617, \n         \"country\":\"LTU\" \n      } \n   ], \n   \"tollsEntry\":{ \n      \"countryT"
  },
  {
    "id": "POST__api_tasks_file",
    "method": "POST",
    "path": "/api/tasks/file",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n\n=== Страница 222 ===\n \n222 \n         \"distance\":133617, \n         \"country\":\"LTU\" \n      }",
    "response": {
      "status": 200,
      "payload": 1
    },
    "auth_required": true,
    "full_context": "redentials are \nrequired to enable \ncontactless payment) \nhtml \nString \n \ntimeFrom \nLocalDateTime \nDate must be provided ISO \n8601 \ne.g., 2020-01-09T11:17:20Z \ntimeTill \nLocalDateTime \nDate must be provided ISO \n8601 \ne.g., 2020-01-09T11:17:20Z \ncountries: \n \n \n  distance \nint \nSubmit in meters. \n  country \nString \n \ntollsEntry: \n \n \n  countryTolls: \n \n \n    country \nString \n \n    amountInTargetCurrency \ndouble \n \n  totalCost \ndouble \n \n  taskDurationMinutes \nint \nTask duration in minutes (if \nactual LOADING of the cargo \nis expected to take 3 hours \n– it's 180 minutes) \n\n=== Страница 220 ===\n \n220 \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":1 \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload \nLong \nTask id. \n \n \n\n=== Страница 221 ===\n \n221 \nAppend task with file \nThis method is used to append a task to the vehicle’s task list with a file. Method returns Fleethand system task \nID, which will be used further to get task data. \n \nRequest \nMethod \nURL             \nPOST \n/api/tasks/file \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nContent-Type \nmultipart/form-data \nyes \nIndicates the format \nof the file. \n \nRequest body \nKey \nValue \nfile filedata \nform { \n   \"vehicleId\":10617, \n   \"lat\":54.651837, \n   \"lng\":25.305864, \n   \"waypoints\":\"51.23759,17.4935223|53.1962775,23.1556143|54.6820828,23.5816274\", \n   \"locationName\":\"Minsko pl. 3\", \n   \"locationAddress\":\"Minsko pl. 3, Vilnius 02121, Lithuania\", \n   \"comment\":\"2\", \n   \"type\":\"LOADING\", \n   \"dateTime\":\"2020-11-03 12:30\", \n   \"sendMessage\":true, \n   \"polyline\":\"g{~tHgejmA|L|YdG~KlDhFvEzFxAxA`F|EXVbRd\", \n   \"duration\":15617, \n   \"distance\":133617, \n   \"externalPoiId\":\"12500\", \n   \"contactlessType\":\"CIRCLE_K\", \n   \"html\":\"<span>some text</span>\", \n   \"timeFrom\":\"2025-11-03T12:30\", \n   \"timeTill\":\"2025-11-04T12:30\", \n   \"countries\":[ \n      { \n\n=== Страница 222 ===\n \n222 \n      "
  },
  {
    "id": "POST__api_tasks_assign-trips",
    "method": "POST",
    "path": "/api/tasks/assign-trips",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "taskId": 1,
      "tripId": 2023,
      "internalId": 19527
    },
    "response": {
      "status": 200,
      "payload": 1
    },
    "auth_required": true,
    "full_context": "\nfuelling task type) \ncontactlessType \nString \nPossible types: CIRCLE_K, \nCRT, SHELL. (Corresponding \nintegration credentials are \nrequired to enable \ncontactless payment) \nhtml \nString \n \ntimeFrom \nLocalDateTime \nDate must be provided ISO \n8601 \ne.g., 2020-01-09T11:17:20Z \ntimeTill \nLocalDateTime \nDate must be provided ISO \n8601 \ne.g., 2020-01-09T11:17:20Z \ncountries: \n \n \n  distance \nint \nSubmit in meters. \n  country \nString \n \ntollsEntry: \n \n \n  countryTolls: \n \n \n    country \nString \n \n    amountInTargetCurrency \ndouble \n \n  totalCost \ndouble \n \n  taskDurationMinutes \nint \nTask duration in minutes (if \nactual LOADING of the cargo \nis expected to take 3 hours \n– it's 180 minutes) \n\n=== Страница 224 ===\n \n224 \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":1 \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload \nLong \nTask id. \n \n \n\n=== Страница 225 ===\n \n225 \nAssign trips to tasks \nThis method assigns trips to the selected tasks. \n \nRequest \nMethod \nURL             \nPOST \n/api/tasks/assign-trips \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest body \nRequest body \n[ \n  { \n     \"taskId\": 1, \n     \"tripId\": 2023, \n     \"internalId\": 19527 \n  }, \n  { \n     \"taskId\": 2, \n     \"tripId\": 2024, \n     \"internalId\": 19528 \n  }, \n] \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \nRequest model \nAttribute \nData type \nRequired \nDescription \ntaskId \nLong \nyes \n \n\n=== Страница 226 ===\n \n226 \ntripId \nLong \nyes \n \ninternalId \nLong \nno \n \n \nConfirm task \nThis method confirms tasks which are assigned to API key / taskId / vehicleId. \n \nRequest \nMethod \nURL             \nPOST \n/api/tasks/confirm-task \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescriptio"
  },
  {
    "id": "POST__api_tasks_confirm-task",
    "method": "POST",
    "path": "/api/tasks/confirm-task",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "taskId": 1,
      "tripId": 2023,
      "internalId": 19527
    },
    "response": {
      "status": 200,
      "payload": 1
    },
    "auth_required": true,
    "full_context": "ple \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":1 \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload \nLong \nTask id. \n \n \n\n=== Страница 225 ===\n \n225 \nAssign trips to tasks \nThis method assigns trips to the selected tasks. \n \nRequest \nMethod \nURL             \nPOST \n/api/tasks/assign-trips \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest body \nRequest body \n[ \n  { \n     \"taskId\": 1, \n     \"tripId\": 2023, \n     \"internalId\": 19527 \n  }, \n  { \n     \"taskId\": 2, \n     \"tripId\": 2024, \n     \"internalId\": 19528 \n  }, \n] \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \nRequest model \nAttribute \nData type \nRequired \nDescription \ntaskId \nLong \nyes \n \n\n=== Страница 226 ===\n \n226 \ntripId \nLong \nyes \n \ninternalId \nLong \nno \n \n \nConfirm task \nThis method confirms tasks which are assigned to API key / taskId / vehicleId. \n \nRequest \nMethod \nURL             \nPOST \n/api/tasks/confirm-task \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nlong \nyes \nVehicles id which executing task. \ntaskId \nlong \nyes \nThe id of the task you want to approve. \ncopy \nBoolean \nno \nAdd additional task information into the message \nfor the driver. \nemail \nString \nno \nEmail that is registered in fleethand and assigned \nto the API key. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 227 ===\n \n227 \nConfirm vehicle tasks \nThis method confirms all tasks of the vehicle which are assigned to the API key. \n \nRequest \nMethod \nURL             \nPOST \n/api/tasks/confirm-all \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest "
  },
  {
    "id": "POST__api_tasks_confirm-all",
    "method": "POST",
    "path": "/api/tasks/confirm-all",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "status": 200,
      "payload": "OK"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "tion \ntaskId \nLong \nyes \n \n\n=== Страница 226 ===\n \n226 \ntripId \nLong \nyes \n \ninternalId \nLong \nno \n \n \nConfirm task \nThis method confirms tasks which are assigned to API key / taskId / vehicleId. \n \nRequest \nMethod \nURL             \nPOST \n/api/tasks/confirm-task \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nlong \nyes \nVehicles id which executing task. \ntaskId \nlong \nyes \nThe id of the task you want to approve. \ncopy \nBoolean \nno \nAdd additional task information into the message \nfor the driver. \nemail \nString \nno \nEmail that is registered in fleethand and assigned \nto the API key. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 227 ===\n \n227 \nConfirm vehicle tasks \nThis method confirms all tasks of the vehicle which are assigned to the API key. \n \nRequest \nMethod \nURL             \nPOST \n/api/tasks/confirm-all \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \nVehicles id which executing task. \ncopy \nBoolean \nno \nAdd additional task information into the message \nfor the driver. \nemail \nString \nno \nEmail that is registered in fleethand and assigned \nto the API key. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 228 ===\n \n228 \nDelete all vehicle tasks \nThis method deletes all tasks of the vehicle which are assigned to the API key. \n \nRequest \nMethod \nURL             \nPOST \n/api/tasks/delete-all \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription "
  },
  {
    "id": "POST__api_tasks_delete-all",
    "method": "POST",
    "path": "/api/tasks/delete-all",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "Id": -1,
      "option": "TEMPERATURE",
      "type": "LONG",
      "enName": "Freezer temperature",
      "deName": "Gefriertemperatur",
      "plName": "Temperatura zamrażarki",
      "ruName": "Температура морозильной камеры",
      "ltName": "Šaldiklio temperatūra",
      "frName": "Température du congélateur",
      "lvName": "Saldētavas temperatūra",
      "czName": "Teplota v mrazáku",
      "esName": "Temperatura del congelador",
      "itName": "Temperatura del congelatore",
      "roName": "Temperatura congelatorului"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": " assigned \nto the API key. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 227 ===\n \n227 \nConfirm vehicle tasks \nThis method confirms all tasks of the vehicle which are assigned to the API key. \n \nRequest \nMethod \nURL             \nPOST \n/api/tasks/confirm-all \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \nVehicles id which executing task. \ncopy \nBoolean \nno \nAdd additional task information into the message \nfor the driver. \nemail \nString \nno \nEmail that is registered in fleethand and assigned \nto the API key. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 228 ===\n \n228 \nDelete all vehicle tasks \nThis method deletes all tasks of the vehicle which are assigned to the API key. \n \nRequest \nMethod \nURL             \nPOST \n/api/tasks/delete-all \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \nVehicle’s id which executing task. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 229 ===\n \n229 \nDelete task \nThis method is used to delete a task. \n \nRequest \nMethod \nURL             \nDELETE \n/api/tasks \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ntaskId \nlong \nyes \nExternal task id to delete. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 230 ===\n \n230 \nDelete trip tasks \nThis method deletes tasks by trip id. \n \nRequest "
  },
  {
    "id": "DELETE__api_tasks",
    "method": "DELETE",
    "path": "/api/tasks",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "Id": -1,
      "option": "TEMPERATURE",
      "type": "LONG",
      "enName": "Freezer temperature",
      "deName": "Gefriertemperatur",
      "plName": "Temperatura zamrażarki",
      "ruName": "Температура морозильной камеры",
      "ltName": "Šaldiklio temperatūra",
      "frName": "Température du congélateur",
      "lvName": "Saldētavas temperatūra",
      "czName": "Teplota v mrazáku",
      "esName": "Temperatura del congelador",
      "itName": "Temperatura del congelatore",
      "roName": "Temperatura congelatorului"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "uired \nDescription \nvehicleId \nLong \nyes \nVehicles id which executing task. \ncopy \nBoolean \nno \nAdd additional task information into the message \nfor the driver. \nemail \nString \nno \nEmail that is registered in fleethand and assigned \nto the API key. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 228 ===\n \n228 \nDelete all vehicle tasks \nThis method deletes all tasks of the vehicle which are assigned to the API key. \n \nRequest \nMethod \nURL             \nPOST \n/api/tasks/delete-all \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \nVehicle’s id which executing task. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 229 ===\n \n229 \nDelete task \nThis method is used to delete a task. \n \nRequest \nMethod \nURL             \nDELETE \n/api/tasks \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ntaskId \nlong \nyes \nExternal task id to delete. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 230 ===\n \n230 \nDelete trip tasks \nThis method deletes tasks by trip id. \n \nRequest \nMethod \nURL             \nDELETE \n/api/tasks/trip \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ntripId \nLong \nyes \nExternal trip id to delete. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 231 ===\n \n231 \nGet additional info options \nThis method returns a list of available additional "
  },
  {
    "id": "DELETE__api_tasks_trip",
    "method": "DELETE",
    "path": "/api/tasks/trip",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "Id": -1,
      "option": "TEMPERATURE",
      "type": "LONG",
      "enName": "Freezer temperature",
      "deName": "Gefriertemperatur",
      "plName": "Temperatura zamrażarki",
      "ruName": "Температура морозильной камеры",
      "ltName": "Šaldiklio temperatūra",
      "frName": "Température du congélateur",
      "lvName": "Saldētavas temperatūra",
      "czName": "Teplota v mrazáku",
      "esName": "Temperatura del congelador",
      "itName": "Temperatura del congelatore",
      "roName": "Temperatura congelatorului"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "ethod \nURL             \nPOST \n/api/tasks/delete-all \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \nVehicle’s id which executing task. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n \n\n=== Страница 229 ===\n \n229 \nDelete task \nThis method is used to delete a task. \n \nRequest \nMethod \nURL             \nDELETE \n/api/tasks \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ntaskId \nlong \nyes \nExternal task id to delete. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 230 ===\n \n230 \nDelete trip tasks \nThis method deletes tasks by trip id. \n \nRequest \nMethod \nURL             \nDELETE \n/api/tasks/trip \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ntripId \nLong \nyes \nExternal trip id to delete. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 231 ===\n \n231 \nGet additional info options \nThis method returns a list of available additional task options. \n \nRequest \nMethod \nURL             \nGET \n/api/tasks/additional-info \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"Id\":-1, \n         \"option\":\"TEMPERATURE\", \n         \"type\":\"LONG\", \n         \"enName\":\"Freezer temperature\", \n         \"deName\":\"Gefriertemperatur\", \n         \"plName\""
  },
  {
    "id": "GET__api_tasks_additional-info",
    "method": "GET",
    "path": "/api/tasks/additional-info",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "Id": -1,
      "option": "TEMPERATURE",
      "type": "LONG",
      "enName": "Freezer temperature",
      "deName": "Gefriertemperatur",
      "plName": "Temperatura zamrażarki",
      "ruName": "Температура морозильной камеры",
      "ltName": "Šaldiklio temperatūra",
      "frName": "Température du congélateur",
      "lvName": "Saldētavas temperatūra",
      "czName": "Teplota v mrazáku",
      "esName": "Temperatura del congelador",
      "itName": "Temperatura del congelatore",
      "roName": "Temperatura congelatorului"
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "ELETE \n/api/tasks \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ntaskId \nlong \nyes \nExternal task id to delete. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 230 ===\n \n230 \nDelete trip tasks \nThis method deletes tasks by trip id. \n \nRequest \nMethod \nURL             \nDELETE \n/api/tasks/trip \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ntripId \nLong \nyes \nExternal trip id to delete. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 231 ===\n \n231 \nGet additional info options \nThis method returns a list of available additional task options. \n \nRequest \nMethod \nURL             \nGET \n/api/tasks/additional-info \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"Id\":-1, \n         \"option\":\"TEMPERATURE\", \n         \"type\":\"LONG\", \n         \"enName\":\"Freezer temperature\", \n         \"deName\":\"Gefriertemperatur\", \n         \"plName\":\"Temperatura zamrażarki\", \n         \"ruName\":\"Температура морозильной камеры\", \n         \"ltName\":\"Šaldiklio temperatūra\", \n         \"frName\":\"Température du congélateur\", \n         \"lvName\":\"Saldētavas temperatūra\", \n         \"czName\":\"Teplota v mrazáku\", \n         \"esName\":\"Temperatura del congelador\", \n         \"itName\":\"Temperatura del congelatore\", \n         \"roName\":\"Temperatura congelatorului\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \n\n=== Страница 232 ===\n \n232 \npayload: \n \n \n  id \nbigint "
  },
  {
    "id": "GET__api_tasks_done",
    "method": "GET",
    "path": "/api/tasks/done",
    "category": "tasks",
    "description": "=== Страница 232 ===",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "country": "LTU",
      "amountInTargetCurrency": 12.45
    },
    "response": null,
    "auth_required": true,
    "full_context": "\"Šaldiklio temperatūra\", \n         \"frName\":\"Température du congélateur\", \n         \"lvName\":\"Saldētavas temperatūra\", \n         \"czName\":\"Teplota v mrazáku\", \n         \"esName\":\"Temperatura del congelador\", \n         \"itName\":\"Temperatura del congelatore\", \n         \"roName\":\"Temperatura congelatorului\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \n\n=== Страница 232 ===\n \n232 \npayload: \n \n \n  id \nbigint \n \n  option \nvarchar(255) \n \n  type \nvarchar(255) \nExpected type of \ninformation. \n  enName \nvarchar(255) \n \n  deName \nvarchar(255) \n \n  plName \nvarchar(255) \n \n  ruName \nvarchar(255) \n \n  ltName \nvarchar(255) \n \n  frName \nvarchar(255) \n \n  lvName \nvarchar(255) \n \n  czName \nvarchar(255) \n \n  esName \nvarchar(255) \n \n  itName \nvarchar(255) \n \n  roName \nvarchar(255) \n \n \n \n \n\n=== Страница 233 ===\n \n233 \nGet done tasks \nThis method returns completed vehicle’s tasks for a selected period of time. \nNOTE: The maximum days period for this call is 30 days. \n \nRequest \nMethod \nURL             \nGET \n/api/tasks/done \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \nFleethand vehicle id. \nfrom \nLocalDateTime \nyes \nTime from which period information is \ntaken. Date must be provided ISO 8601 \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nyes \nTime till which period information is \ntaken. Date must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \npdfDocuments \nboolean \nno \nReturns task documents as PDF file. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      [ \n         { \n            \"externalId\":2915, \n            \"type\":\"LOADING\", \n            \"address\":\"27 Allée du Lac, 86580 Vouneuil-sous-Biard\", \n            \"latitude\":46.56822349999999, \n            \"longitude\":0.2653675, \n\n=== Страница 234 ===\n \n234 \n            \"plannedDi"
  },
  {
    "id": "GET__api_tasks_eta",
    "method": "GET",
    "path": "/api/tasks/eta",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "taskId": 9072,
      "partnerId": 1650,
      "distance": 1022,
      "plateNumber": "FLH233",
      "orderNumber": "KJT123456",
      "createdAt": "2023-02-09T09:26:11.146623"
    },
    "response": {
      "status": 200,
      "payload": "2022-02-28 12:59"
    },
    "auth_required": true,
    "full_context": "lDuration \nbigint \n \n  date \ntimestamp \n \n  comments \ntext \n \n  vehicleId \nbigint \n \n  docs \nBase 64 string \nEncoded zip file. \n  fuelConsumed \ndouble precision \n \n  startedAt \ntimestamp \n \n  doneAt \ntimestamp \n \n  odometerAtEnd \ndouble precision \n \n  odometerAtStart \ndouble precision \n \n  plannedTolls: \n \n \n    countryTolls: \n \n \n      country \nString \n \n      amountInTargetCurrency double \n \n    totalCost \ndouble \n \n  actualTolls: \n \n \n    countryTolls: \n \n \n      country \nString \n \n      amountInTargetCurrency double \n \n\n=== Страница 236 ===\n \n236 \n    totalCost \ndouble \n \n  firstPlanDistance \ninteger \n \n  firstPlanTolls: \n \n \n    countryTolls: \n \n \n      country \nString \n \n      amountInTargetCurrency double \n \n    totalCost \ndouble \n \n  actualFirstPlanDistance \ninteger \n \n  firstPlanOrigin \nvarchar(100) \nPossible types: EXTERNAL, \nFLEETHAND, USER or null. \n  routeChanges \nint \n \n \n \n\n=== Страница 237 ===\n \n237 \nGet ETA \nThis method returns ETA of the provided vehicle. \n \nRequest \nMethod \nURL             \nGET \n/api/tasks/eta \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \nVehicles id which executing task. \nduration \nLong \nyes \nDuration to the destination (seconds). \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"2022-02-28 12:59\" \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload \nString \nEstimated time of arrival. \n \n \n\n=== Страница 238 ===\n \n238 \nGet external orders \nThis method returns external orders that are generated from tasks and which are assigned to API key.  \nNOTE: The maximum days period for this call is 30 days. \n \nRequest \nMethod \nURL             \nGET \n/api/external-tasks/external-orders \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided externa"
  },
  {
    "id": "GET__api_external-tasks_external-orders",
    "method": "GET",
    "path": "/api/external-tasks/external-orders",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "taskId": 9072,
      "partnerId": 1650,
      "distance": 1022,
      "plateNumber": "FLH233",
      "orderNumber": "KJT123456",
      "createdAt": "2023-02-09T09:26:11.146623"
    },
    "response": {
      "status": 200,
      "payload": "2022-02-28 12:59"
    },
    "auth_required": true,
    "full_context": "anOrigin \nvarchar(100) \nPossible types: EXTERNAL, \nFLEETHAND, USER or null. \n  routeChanges \nint \n \n \n \n\n=== Страница 237 ===\n \n237 \nGet ETA \nThis method returns ETA of the provided vehicle. \n \nRequest \nMethod \nURL             \nGET \n/api/tasks/eta \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \nVehicles id which executing task. \nduration \nLong \nyes \nDuration to the destination (seconds). \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"2022-02-28 12:59\" \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload \nString \nEstimated time of arrival. \n \n \n\n=== Страница 238 ===\n \n238 \nGet external orders \nThis method returns external orders that are generated from tasks and which are assigned to API key.  \nNOTE: The maximum days period for this call is 30 days. \n \nRequest \nMethod \nURL             \nGET \n/api/external-tasks/external-orders \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime \nyes \nTime from which period information is taken.  \nDate must be provided ISO 8601 \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nyes \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"taskId\":9072, \n         \"partnerId\":1650, \n         \"distance\":1022, \n         \"plateNumber\":\"FLH233\", \n         \"orderNumber\":\"KJT123456\", \n         \"createdAt\":\"2023-02-09T09:26:11.146623\" \n      } \n   ] \n} \n \n\n=== Страница 239 ===\n \n239 \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  taskId \nbigint \n \n  partnerId \nbigint \n \n  d"
  },
  {
    "id": "GET__api_tasks_information",
    "method": "GET",
    "path": "/api/tasks/information",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "taskId": 9072,
      "partnerId": 1650,
      "distance": 1022,
      "plateNumber": "FLH233",
      "orderNumber": "KJT123456",
      "createdAt": "2023-02-09T09:26:11.146623"
    },
    "response": {
      "status": 200,
      "payload": [
        {
          "taskId": 9072,
          "partnerId": 1650,
          "distance": 1022,
          "plateNumber": "FLH233",
          "orderNumber": "KJT123456",
          "createdAt": "2023-02-09T09:26:11.146623"
        }
      ]
    },
    "auth_required": true,
    "full_context": ". \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime \nyes \nTime from which period information is taken.  \nDate must be provided ISO 8601 \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nyes \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"taskId\":9072, \n         \"partnerId\":1650, \n         \"distance\":1022, \n         \"plateNumber\":\"FLH233\", \n         \"orderNumber\":\"KJT123456\", \n         \"createdAt\":\"2023-02-09T09:26:11.146623\" \n      } \n   ] \n} \n \n\n=== Страница 239 ===\n \n239 \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  taskId \nbigint \n \n  partnerId \nbigint \n \n  distance \nbigint \n \n  plateNumber \nvarchar(255) \n \n  orderNumber \nvarchar(255) \n \n  createdAt \ntimestamp \n \n \n \n \n\n=== Страница 240 ===\n \n240 \nGet task info \nThis method returns task information. \n \nRequest \nMethod \nURL             \nGET \n/api/tasks/information \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ntasks \nList<Long> \nyes \nList of external task ids. \npdfDocuments \nboolean \nno \nReturns task documents as PDF file. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"externalId\":2915, \n         \"idx\":0, \n         \"vehicleId\": 22569, \n         \"orderNumber\":\"ORDER123\" \n         \"type\":\"LOADING\", \n         \"status\":\"DONE\", \n         \"address\":\"27 Allée du Lac, 86580 Vouneuil-sous-Biard\", \n         \"latitude\":46.56822349999999, \n         \"longitude\":0.2653675, \n         \"poiId\":17699551, \n         \"plannedRoute\":\"c~s`H~wnB`@`E_Iz@eA\", \n         \"plannedDistance\":145392, \n         \"plannedDuration\":12367, \n         \"eta\":\"2020-11-17T12:04:46.414\", \n\n=== Страница 241 ===\n \n241 \n     "
  },
  {
    "id": "GET__api_tasks_queue",
    "method": "GET",
    "path": "/api/tasks/queue",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{ \n               \"id\":-6, \n               \"value\":\"50\",   \n               \"option\":\"ADBLUE_AMOUNT\", \n             }",
    "response": "{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"id\":2810, \n         \"idx\":0, \n         \"orderNumber\":\"ORDER123\", \n         \"date\":null, \n         \"type\":\"UNLOADING\", \n         \"status\":\"UNCONFIRMED\", \n         \"searchText\":\"Berliner Str. 22, 60311 Frankfurt am Main, Germany\", \n         \"address\":\"60311 Frankfurt am Main, Germany\", \n         \"lat\":50.1120958, \n         \"lng\":8.683402899999999, \n         \"poiId\": 17699551, \n         \"comments\":null, \n         \"polyline\":\"klb~Ge{kn@|DvF@t@n@PJp@ZlBh@f@VrAjAdBrBh@j@CR@j\", \n         \"distance\":411246, \n         \"tripId\":46,  \n         \"internalId\":64,  \n         \"additionalInfo\": [ \n            { \n               \"id\":-6, \n               \"value\":\"50\",   \n               \"option\":\"ADBLUE_AMOUNT\", \n             } \n          ], \n         \"eta\":\"2024-09-17 20:39\" \n      } \n   ] \n}",
    "auth_required": true,
    "full_context": " fuelConsumed \ndouble precision \n \n  odometerAtEnd \ndouble precision \n \n  odometerAtStart \ndouble precision \n \n  plannedTolls: \n \n \n\n=== Страница 243 ===\n \n243 \n    countryTolls: \n \n \n      country \nString \n \n      amountInTargetCurrency double \n \n    totalCost \ndouble \n \n  actualTolls: \n \n \n    countryTolls: \n \n \n      country \nString \n \n      amountInTargetCurrency double \n \n    totalCost \ndouble \n \n  remainingDistance \nbigint \n \n  firstPlanDistance \ninteger \n \n  firstPlanTolls: \n \n \n    countryTolls: \n \n \n      country \nString \n \n      amountInTargetCurrency double \n \n    totalCost \ndouble \n \n  actualFirstPlanDistance \ninteger \n \n  firstPlanOrigin \nvarchar(100) \nPossible types: EXTERNAL, \nFLEETHAND, USER or null. \n  routeChanges \nint \n \n    additionalInfo: \nArray<AdditionalInfo> \n \n      id \nbigint \n \n      value \nvarchar(255) \n \n      option \nvarchar(255) \n \n \n \n \n\n=== Страница 244 ===\n \n244 \nGet task queue \nThis method returns a vehicle task queue. All not DONE tasks. \n \nRequest \nMethod \nURL             \nGET \n/api/tasks/queue \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nlong \nyes \nFleethand vehicle id. \n \n \n \n \n\n=== Страница 245 ===\n \n245 \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"id\":2810, \n         \"idx\":0, \n         \"orderNumber\":\"ORDER123\", \n         \"date\":null, \n         \"type\":\"UNLOADING\", \n         \"status\":\"UNCONFIRMED\", \n         \"searchText\":\"Berliner Str. 22, 60311 Frankfurt am Main, Germany\", \n         \"address\":\"60311 Frankfurt am Main, Germany\", \n         \"lat\":50.1120958, \n         \"lng\":8.683402899999999, \n         \"poiId\": 17699551, \n         \"comments\":null, \n         \"polyline\":\"klb~Ge{kn@|DvF@t@n@PJp@ZlBh@f@VrAjAdBrBh@j@CR@j\", \n         \"distance\":411246, \n         \"tripId\":46,  \n         \"internalId\":64,  \n   "
  },
  {
    "id": "GET__api_tasks_status-intervals",
    "method": "GET",
    "path": "/api/tasks/status-intervals",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "status": "EXECUTING",
      "Latitude": "54.89522055",
      "longitude": "23.98839632",
      "driverId": 8614,
      "taskId": 168968,
      "odometer": 1050205,
      "from": "2023-06-23T11:15:10.101",
      "till": "2023-06-23T11:17:10.101",
      "stopId": "LOAD-12345"
    },
    "response": {
      "status": 200,
      "payload": [
        {
          "taskId": 168968,
          "statuses": [
            {
              "status": "EXECUTING",
              "Latitude": "54.89522055",
              "longitude": "23.98839632",
              "driverId": 8614,
              "taskId": 168968,
              "odometer": 1050205,
              "from": "2023-06-23T11:15:10.101",
              "till": "2023-06-23T11:17:10.101",
              "stopId": "LOAD-12345"
            }
          ]
        }
      ]
    },
    "auth_required": true,
    "full_context": "\":-6, \n               \"value\":\"50\",   \n               \"option\":\"ADBLUE_AMOUNT\", \n             } \n          ], \n         \"eta\":\"2024-09-17 20:39\" \n      } \n   ] \n} \n \n \n \n \n\n=== Страница 246 ===\n \n246 \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nbigint \nFleethand task id. \n  idx \nbigint \n \n  orderNumber \nvarchar(255) \n \n  date \ntimestamp \n \n  type \nvarchar(255) \n \n  status \nvarchar(255) \n \n  searchText \nvarchar(255) \n \n  address \nvarchar(255) \n \n  lat \ndouble precision \n \n  lng \ndouble precision \n \n  poiId \nbigint \nFleethand poi id. \n  comments \ntext \n \n  polyline \ntext \n \n  distance \ninteger \nDistance in meters. \n    additionalInfo: \nArray<AdditionalInfo> \n \n      id \nbigint \n \n      value \nvarchar(255) \n \n      option \nvarchar(255) \n \n  eta \nString \nEstimated time of arrival \n \n \n \n \n \n \n \n \n \n \n \n \n \n\n=== Страница 247 ===\n \n247 \n \n \n \n \n \n \n \n \n \n \n \n \n \nGet task status intervals \nThis method returns task statuses for a selected period of time. \nRequest \nMethod \nURL             \nGET \n/api/tasks/status-intervals \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndeviceKey \nString \nno (if \nvinCode \nis \npresent) \nParameter by which information is taken. \nvinCode \nString \nno (if \ndeviceKey \nis \npresent) \nParameter by which information is taken. \nfrom \nLocalDateTime \nyes \nTime from which period information is taken.  \nDate must be provided ISO 8601 \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nyes \nTime till which period information is taken. \n\n=== Страница 248 ===\n \n248 \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n    { \n      \"taskId\":168968, \n      \"statuses\": [ \n       { \n         \"status\":\"EXECUTING\", \n         \"Latitude\":\"54.89522055\",   \n         \"longitude\":\"23.98839632\""
  },
  {
    "id": "GET__api_tasks_status",
    "method": "GET",
    "path": "/api/tasks/status",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "status": "EXECUTING",
      "Latitude": "54.89522055",
      "longitude": "23.98839632",
      "driverId": 8614,
      "taskId": 168968,
      "odometer": 1050205,
      "from": "2023-06-23T11:15:10.101",
      "till": "2023-06-23T11:17:10.101",
      "stopId": "LOAD-12345"
    },
    "response": {
      "status": 200,
      "payload": [
        {
          "id": 1275924,
          "status": "EXECUTING",
          "time": "2020-09-03T11:15:10.101",
          "latitude": 54.89522055,
          "longitude": 23.98839632,
          "driverId": 8614,
          "vehicleId": 6302,
          "vinCode": null,
          "taskId": 168968,
          "odometer": 1050205
        }
      ]
    },
    "auth_required": true,
    "full_context": "  { \n      \"taskId\":168968, \n      \"statuses\": [ \n       { \n         \"status\":\"EXECUTING\", \n         \"Latitude\":\"54.89522055\",   \n         \"longitude\":\"23.98839632\", \n         \"driverId\":8614, \n         \"taskId\":168968, \n         \"odometer\":1050205, \n         \"from\":\"2023-06-23T11:15:10.101\", \n         \"till\":\"2023-06-23T11:17:10.101\", \n         \"stopId\":\"LOAD-12345\" \n       } \n      ] \n    } \n  ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  status \nvarchar(255) \n \n  latitude \ndouble precision \n \n  longitude \ndouble precision \n \n  driverId \nbigint \nDefault: 0. \n  taskId \nbigint \n \n  odometer \nbigint \n \n  from \ntimestamp \n \n  till \ntimestamp \n \n  stopId \nvarchar(255) \n \n\n=== Страница 249 ===\n \n249 \n \n \n\n=== Страница 250 ===\n \n250 \nGet task statuses \nThis method returns new or updated task statuses. That means if you received some task status with the \nprevious request these task statuses won't be in the next request unless they have been updated. \n \nRequest \nMethod \nURL             \nGET \n/api/tasks/status \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"id\":1275924, \n         \"status\":\"EXECUTING\", \n         \"time\":\"2020-09-03T11:15:10.101\", \n         \"latitude\":54.89522055, \n         \"longitude\":23.98839632, \n         \"driverId\":8614, \n         \"vehicleId\":6302, \n         \"vinCode\":null, \n         \"taskId\":168968, \n         \"odometer\":1050205 \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nbigint \n \n\n=== Страница 251 ===\n \n251 \n  status \nvarchar(255) \n \n  uuid \n \n \n  time \ntimestamp \n \n  latitude \ndouble precision \n \n  longitude \ndouble precision \n \n  driverId \nbigint \nDefault: 0. \n  vehicleId \nbigint \n \n  vinCode \nvarchar(255) \n \n  taskId \nbigint \n \n  odometer \nbigint \n \n \n \n\n=== Страница 252 ===\n \n252 \nG"
  },
  {
    "id": "GET__api_tasks_trip",
    "method": "GET",
    "path": "/api/tasks/trip",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "id": 1275924,
      "status": "EXECUTING",
      "time": "2020-09-03T11:15:10.101",
      "latitude": 54.89522055,
      "longitude": 23.98839632,
      "driverId": 8614,
      "vehicleId": 6302,
      "vinCode": null,
      "taskId": 168968,
      "odometer": 1050205
    },
    "response": {
      "status": 200,
      "payload": [
        {
          "id": 1275924,
          "status": "EXECUTING",
          "time": "2020-09-03T11:15:10.101",
          "latitude": 54.89522055,
          "longitude": 23.98839632,
          "driverId": 8614,
          "vehicleId": 6302,
          "vinCode": null,
          "taskId": 168968,
          "odometer": 1050205
        }
      ]
    },
    "auth_required": true,
    "full_context": " \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"id\":1275924, \n         \"status\":\"EXECUTING\", \n         \"time\":\"2020-09-03T11:15:10.101\", \n         \"latitude\":54.89522055, \n         \"longitude\":23.98839632, \n         \"driverId\":8614, \n         \"vehicleId\":6302, \n         \"vinCode\":null, \n         \"taskId\":168968, \n         \"odometer\":1050205 \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  id \nbigint \n \n\n=== Страница 251 ===\n \n251 \n  status \nvarchar(255) \n \n  uuid \n \n \n  time \ntimestamp \n \n  latitude \ndouble precision \n \n  longitude \ndouble precision \n \n  driverId \nbigint \nDefault: 0. \n  vehicleId \nbigint \n \n  vinCode \nvarchar(255) \n \n  taskId \nbigint \n \n  odometer \nbigint \n \n \n \n\n=== Страница 252 ===\n \n252 \nGet trip info \nThis method returns order tasks information. \n \nRequest \nMethod \nURL             \nGET \n/api/tasks/trip \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ntripId \nLong \nyes \nTrip id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"externalId\":2915, \n         \"idx\": 0, \n         \"vehicleId\": 22569, \n         \"type\":\"LOADING\", \n         \"status\":\"DONE\", \n         \"address\":\"27 Allée du Lac, 86580 Vouneuil-sous-Biard\", \n         \"latitude\":46.56822349999999, \n         \"longitude\":0.2653675, \n         \"poiId\": 1755991, \n         \"stopId\": \"LOAD-12345\", \n         \"plannedRoute\":\"c~s`H~wnB`@`E_Iz@eA\", \n         \"plannedDistance\":145392, \n         \"plannedDuration\":12367, \n         \"eta\":\"2020-11-17T12:04:46.414\", \n         \"actualRoute\":\"a~s`HbxnBtPuWpAxAn@xD\", \n         \"actualDistance\":590, \n\n=== Страница 253 ===\n \n253 \n         \"actualDu"
  },
  {
    "id": "GET__api_trips_statistics",
    "method": "GET",
    "path": "/api/trips/statistics",
    "category": "general",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "driver": "FleetHand_driver",
      "country": "fr",
      "from": "2023-08-18",
      "till": "2023-08-21",
      "workingHours": 454,
      "workingHoursAtNight": 173,
      "restHours": 75
    },
    "response": null,
    "auth_required": true,
    "full_context": "igint \n \n  actualDuration \nbigint \n \n  date \ntimestamp \n \n  comments \ntext \n \n  docs \nBase 64 string \nEncoded zip file. \n  fuelConsumed \ndouble precision \n \n  odometerAtEnd \ndouble precision \n \n  odometerAtStart \ndouble precision \n \n  plannedTolls: \n \n \n    countryTolls: \n \n \n      country \nString \n \n      amountInTargetCurrency double \n \n\n=== Страница 256 ===\n \n256 \n    totalCost \ndouble \n \n  actualTolls: \n \n \n    countryTolls: \n \n \n      country \nString \n \n      amountInTargetCurrency double \n \n    totalCost \ndouble \n \n  remainingDistance \nbigint \n \n  firstPlanDistance \ninteger \n \n  firstPlanTolls: \n \n \n    countryTolls: \n \n \n      country \nString \n \n      amountInTargetCurrency double \n \n    totalCost \ndouble \n \n  actualFirstPlanDistance \ninteger \n \n  firstPlanOrigin \nvarchar(100) \nPossible types: EXTERNAL, \nFLEETHAND, USER or null. \n  routeChanges \nint \n \n \n \n \n\n=== Страница 257 ===\n \n257 \nThis method returns order trips statistics. Request period max duration 30 days. \n \nRequest \nMethod \nURL             \nGET \n/api/trips/statistics \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime \nyes \nTime from which period \ninformation is taken.  Date must \nbe provided ISO 8601 \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nyes \nTime till which period \ninformation is taken. Date must \nbe provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\": 200, \n    \"payload\": [ \n        { \n            \"tripNumber\": 007, \n            \"vehicle\": \"FleetHand-Vehicle\", \n            \"startedAt\": \"2023-08-07T18:22:00\", \n            \"doneAt\": \"2023-08-21T08:07:33.476\", \n            \"fuelLevelAtEnd\": 580.561, \n            \"fuelConsumed\": 980.670, \n            \"fuelFilled\": 1562.639, \n            \"odometerAtStart\": 269382.295, \n            \"odometerAtEnd\": 27341"
  },
  {
    "id": "PUT__api_tasks_mark-as-done",
    "method": "PUT",
    "path": "/api/tasks/mark-as-done",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "country": "LTU",
      "amountInTargetCurrency": 12.45
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "ion \npayload: \n \n \n  tripNumber \nbigint \n \n  vehicle \nString \n \n  startedAt \ntimestamp \n \n  doneAt \ntimestamp \n \n  fuelLevelAtEnd \ndouble   \n \n  fuelConsumed \ndouble   \n \n  fuelFilled \ndouble   \n \n  odometerAtStart \ndouble  \n \n  odometerAtEnd \ndouble  \n \n  plannedDistance \ninteger \n \n  actualDistance \ninteger \n \n  plannedDuration \ninteger \n \n  actualDuration \ninteger \n \n driverHours: \n \n \n  driver \nString \n \n  country \nString \n \n  from \nString \n \n  till \nString \n \n  workingHours \nbigint \n \n  workingHoursAtNight \nbigint \n \n  restHours \nbigint \n \n  OrderInfo: \n \n \n  orderNumber \nString \n \n  clientId \nbigint \n \n  origin \nString \n \n  destination \nString \n \n  freight \ndouble \n \n\n=== Страница 260 ===\n \n260 \n  actualAmount \ndouble \n \n  employee \nString \n \n expenses: \n \n \n   orderNumber \nString \n \n   expenseType \nString \n \n   amount \ndouble \n \n \n \n \n\n=== Страница 261 ===\n \n261 \n \nMark task as done \nThis method marks tasks as done which are assigned to API key / taskId / vehicleId. \n \nRequest \nMethod \nURL             \nPUT \n/api/tasks/mark-as-done \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nlong \nyes \nVehicles id which executing task. \ntaskId \nlong \nyes \nThe id of the task you want to approve. \nemail \nString \nno \nEmail that is registered in fleethand and assigned \nto the API key. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 262 ===\n \n262 \nMark task as executing \nThis method marks tasks as executing which are assigned to API key / taskId / vehicleId. \n \nRequest \nMethod \nURL             \nPUT \n/api/tasks/mark-as-executing \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nlong "
  },
  {
    "id": "PUT__api_tasks_mark-as-executing",
    "method": "PUT",
    "path": "/api/tasks/mark-as-executing",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "country": "LTU",
      "amountInTargetCurrency": 12.45
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "ctualAmount \ndouble \n \n  employee \nString \n \n expenses: \n \n \n   orderNumber \nString \n \n   expenseType \nString \n \n   amount \ndouble \n \n \n \n \n\n=== Страница 261 ===\n \n261 \n \nMark task as done \nThis method marks tasks as done which are assigned to API key / taskId / vehicleId. \n \nRequest \nMethod \nURL             \nPUT \n/api/tasks/mark-as-done \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nlong \nyes \nVehicles id which executing task. \ntaskId \nlong \nyes \nThe id of the task you want to approve. \nemail \nString \nno \nEmail that is registered in fleethand and assigned \nto the API key. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 262 ===\n \n262 \nMark task as executing \nThis method marks tasks as executing which are assigned to API key / taskId / vehicleId. \n \nRequest \nMethod \nURL             \nPUT \n/api/tasks/mark-as-executing \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nlong \nyes \nVehicles id which executing task. \ntaskId \nlong \nyes \nThe id of the task you want to approve. \nemail \nString \nno \nEmail that is registered in fleethand and assigned \nto the API key. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 263 ===\n \n263 \nUpdate task \nThis method is used to update a task. Method returns Fleethand system task ID, which will be used further to get \ntask data. \n \nRequest \nMethod \nURL             \nPUT \n/api/tasks \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"taskId\":2859, \n   \"vehicleId\":10"
  },
  {
    "id": "PUT__api_tasks",
    "method": "PUT",
    "path": "/api/tasks",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "country": "LTU",
      "amountInTargetCurrency": 12.45
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "API key. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n\n=== Страница 262 ===\n \n262 \nMark task as executing \nThis method marks tasks as executing which are assigned to API key / taskId / vehicleId. \n \nRequest \nMethod \nURL             \nPUT \n/api/tasks/mark-as-executing \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nlong \nyes \nVehicles id which executing task. \ntaskId \nlong \nyes \nThe id of the task you want to approve. \nemail \nString \nno \nEmail that is registered in fleethand and assigned \nto the API key. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \n \n \n\n=== Страница 263 ===\n \n263 \nUpdate task \nThis method is used to update a task. Method returns Fleethand system task ID, which will be used further to get \ntask data. \n \nRequest \nMethod \nURL             \nPUT \n/api/tasks \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"taskId\":2859, \n   \"vehicleId\":10617, \n   \"lat\":54.651837, \n   \"lng\":25.305864, \n   \"waypoints\":\"51.23759,17.4935223|53.1962775,23.1556143|54.6820828,23.5816274\", \n   \"locationName\":\"Minsko pl. 3\", \n   \"locationAddress\":\"Minsko pl. 3, Vilnius 02121, Lithuania\", \n   \"comment\":\"2\", \n   \"type\":\"LOADING\", \n   \"dateTime\":\"2020-11-03 12:30\", \n   \"sendMessage\":true, \n   \"polyline\":\"g{~tHgejmA|L|YdG~KlDhFvEzFxAxA`F|EXVbRd\", \n   \"duration\":15617, \n   \"distance\":133617, \n   \"externalPoiId\":\"12500\", \n   \"contactlessType\":\"CIRCLE_K\", \n   \"html\":\"<span>some text</span>\", \n   \"timeFrom\":\"2025-11-03T12:30\", \n   \"timeTill\":\"2025-11-04T12:30\", \n   \"countries\":[ \n      { \n         \"distance\":133617, \n         \"country\":\"LTU\" \n      } \n   ], \n\n=== Страница 264 ===\n \n264 \n   \"tollsEntry\":"
  },
  {
    "id": "POST__api_tasks_update_file",
    "method": "POST",
    "path": "/api/tasks/update/file",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "country": "LTU",
      "amountInTargetCurrency": 12.45
    },
    "response": {
      "status": 200,
      "payload": 1
    },
    "auth_required": true,
    "full_context": "T, SHELL. (Corresponding \nintegration credentials are \nrequired to enable \ncontactless payment) \nhtml \nString \n \ntimeFrom \nLocalDateTime \nDate must be provided ISO \n8601 \ne.g., 2020-01-09T11:17:20Z \ntimeTill \nLocalDateTime \nDate must be provided ISO \n8601 \ne.g., 2020-01-09T11:17:20Z \ncountries: \n \n \n  distance \nint \nSubmit in meters. \n  country \nString \n \ntollsEntry: \n \n \n  countryTolls: \n \n \n    country \nString \n \n    amountInTargetCurrency \ndouble \n \n  totalCost \ndouble \n \n  taskDurationMinutes \nint \nTask duration in minutes (if \nactual LOADING of the cargo \nis expected to take 3 hours \n– it's 180 minutes) \n \n\n=== Страница 266 ===\n \n266 \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":1 \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload \nLong \nTask id. \n \n \n\n=== Страница 267 ===\n \n267 \nUpdate task with file \nThis method is used to update a task. Method returns Fleethand system task id, which will be used further to get \ntask data. \n \nRequest \nMethod \nURL             \nPOST \n/api/tasks/update/file \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nContent-Type \nmultipart/form-data \nyes \nIndicates the format \nof the file. \n \nRequest body \nKey \nValue \nFile filedata \nText { \n   \"taskId\":2859, \n   \"vehicleId\":10617, \n   \"lat\":54.651837, \n   \"lng\":25.305864, \n   \"waypoints\":\"51.23759,17.4935223|53.1962775,23.1556143|54.6820828,23.5816274\", \n   \"locationName\":\"Minsko pl. 3\", \n   \"locationAddress\":\"Minsko pl. 3, Vilnius 02121, Lithuania\", \n   \"comment\":\"2\", \n   \"type\":\"LOADING\", \n   \"dateTime\":\"2020-11-03 12:30\", \n   \"sendMessage\":true, \n   \"polyline\":\"g{~tHgejmA|L|YdG~KlDhFvEzFxAxA`F|EXVbRd\", \n   \"duration\":15617, \n   \"distance\":133617, \n   \"externalPoiId\":\"12500\", \n   \"contactlessType\":\"CIRCLE_K\", \n      \"html\":\"<span>some text</span>\", \n   \"timeFrom\":\"2025-11-03T12:30\", \n   \"timeTill\":\"2025-11-04T12:30\", \n   \"countries\":[ \n\n=== Страница 2"
  },
  {
    "id": "POST__api_tasks_trip",
    "method": "POST",
    "path": "/api/tasks/trip",
    "category": "tasks",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "address": "Train station ABC, Vilnius",
      "lat": 54.670298,
      "lng": 25.284262
    },
    "response": {
      "status": 200,
      "payload": 1
    },
    "auth_required": true,
    "full_context": " minutes (if \nactual LOADING of the cargo \n\n=== Страница 270 ===\n \n270 \nis expected to take 3 hours \n– it's 180 minutes) \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":1 \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload \nLong \nTask id. \n \n \n\n=== Страница 271 ===\n \n271 \nUpsert trip tasks \nThis method creates or updates the task queue for a trip.  \n(Updated) Optionally, add temporary task forms for each task by status (max 6 unique per task). \n \nIf smartUpsert is set to false then all the tasks with provided tripId will be deleted and new tasks will be created. \n(deprecated) \n \nIf smartUpsert is set to true then taskId shows if a task needs to be created or updated. If you send the taskId \nvalue null - then the task will be created. If taskId value will have some id and there is existing id in Fleethand \nsystem then task will be updated. If taskId is not sent at all but it was created earlier for this trip then it will be \ndeleted. \nRequest \nMethod \nURL             \nPOST \n/api/tasks/trip \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nRequest body \n{ \n   \"tripId\":0, \n   \"vehicleId\":0, \n   \"email\":\"fleethand@fleethand.com\", \n   \"tripNumber\":\"string\", \n   \"orderNumber\":\"string\", \n   \"tripHeader\":\"string\", \n   \"smartUpsert\":false, \n   \"executionDateTime\":2023-05-01T11:17:20Z, \n   \"tasks\":[ \n      { \n         \"idx\":0, \n         \"internalId\":0, \n         \"type\":\"LOADING\", \n         \"lat\":25.236566, \n         \"lng\":53.165161, \n         \"waypoints\":\"25.236566,53.165161|25.758698,53.156458\", \n         \"locationName\":\"Location name\", \n         \"locationAddress\":\"Location address\", \n\n=== Страница 272 ===\n \n272 \n         \"referenceNo\":\"Reference number\", \n         \"dateTime\":\"2020-10-22 00:00\", \n         \"sendMessage\":true, \n         \"comment\":\"Comment\", \n         \"polyline\":\"g{~tHgejmA|L|YdG~KlDhFvEzFxAxA`F|EXVbRdQd@b@zAvA"
  },
  {
    "id": "GET__api_driver_driver-hours",
    "method": "GET",
    "path": "/api/driver/driver-hours",
    "category": "drivers",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "01",
        "description": "30:00.000).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": {
      "2021-01-01": "FLH123",
      "2021-01-02": "FLH123",
      "2021-01-03": "FLH123",
      "2021-01-04": "FLH123"
    },
    "response": {
      "status": 200,
      "payload": [
        {
          "driverName": "Driver name",
          "driverCard": "V100000111111000",
          "tableNumber": "Table number",
          "dayHoursGross": {
            "2021-01-01": 0,
            "2021-01-02": 600,
            "2021-01-03": 900,
            "2021-01-04": 250
          },
          "dayHoursAtNight": {
            "2021-01-01": 3600,
            "2021-01-02": 3600,
            "2021-01-03": 3600,
            "2021-01-04": 3600
          },
          "days": 4,
          "grossHours": 3600,
          "hoursAtNight": 3600,
          "vehiclesByDay": {
            "2021-01-01": "FLH123",
            "2021-01-02": "FLH123",
            "2021-01-03": "FLH123",
            "2021-01-04": "FLH123"
          }
        }
      ]
    },
    "auth_required": true,
    "full_context": "alId\":0, \n         \"externalId\":0, \n         \"message\":\"Task already marked as DONE and cannot be updated\" \n      }, \n      { \n\n=== Страница 282 ===\n \n282 \n         \"internalId\":1, \n         \"externalId\":1, \n         \"message\":\"Task created internally.\" \n      }, \n      { \n         \"internalId\":1, \n         \"externalId\":1, \n         \"message\": null \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \ntasks: \n \n \n  internalId \nLong \n \n  externalId \nLong \n \n  message \nString \n“Task already marked as DONE \nand cannot be updated” - \nmeans that this task is \nalready done and cannot be \nupdated. \n \n“Task created internally.” - \nmeans that this task is \ncreated internally in \nfleethand (not via \nintegration) \n \nNull -> Task is updated or \ncreated succesfully. \n \n \n \n\n=== Страница 283 ===\n \n283 \nTimetables \n \nGet driver hours \nThis method returns driver activities for a selected period of time. \nNOTE: From API v2, the maximum days period for this call is 1 year. \n \nRequest \nMethod \nURL             \nGET \n/api/driver/driver-hours \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n87 \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \ndriverCard \nString \nyes if table \nnumber does \nnot exist \nParameter by which information is taken. \ntableNumber \nString \nyes if driver \ncard does not \nexist \nParameter by which information is taken. \nfrom \nLocalDateTime yes \nTime from which period information is \ntaken. Date must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime yes \nTime from which period information is \ntaken. Date must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \nzoneId \nZoneId \nyes \nThe format to which the date is translated \n(e.g., Europe/Paris). \nnightStarts \nLocalTime \nyes \nTime when night starts. Date must be \nprovided ISO Time (e.g., 01:30:00.000). \n\n=== Страница 284 ===\n \n284 \nnightEnds \nLocalTime \nyes \nTime whe"
  },
  {
    "id": "GET__api_country-change_presence",
    "method": "GET",
    "path": "/api/country-change/presence",
    "category": "general",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n         \"deviceKey\":\"352600000000000\", \n         \"driver\":\"UAD000000AABB000\", \n\n=== Страница 287 ===\n \n287 \n         \"country\":\"de\", \n         \"from\":\"2021-01-251T11:56:10.464\", \n         \"till\":\"2021-01-271T13:58:10.464\" \n      }",
    "response": null,
    "auth_required": true,
    "full_context": "       \"2021-01-04\":3600 \n         }, \n         \"days\":4, \n         \"grossHours\":3600, \n         \"hoursAtNight\":3600, \n         \"vehiclesByDay\":{ \n            \"2021-01-01\":\"FLH123\", \n            \"2021-01-02\":\"FLH123\", \n            \"2021-01-03\":\"FLH123\", \n            \"2021-01-04\":\"FLH123\" \n         } \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  driverName \nString \n \n  driverCard \nString \n \n  tableNumber \nString \n \n\n=== Страница 285 ===\n \n285 \n  dayHoursGross \nMap<LocalDate, Duration>  \nDuration in seconds. \n  dayHoursAtNight \nMap<LocalDate, Duration>  \nDuration in seconds. \n  days \nint \n \n  grossHours \nDuration \nDuration in seconds. \n  hoursAtNight \nDuration \nDuration in seconds \n  vehiclesByDay \nMap<LocalDate, String> \n \n \n \n \n\n=== Страница 286 ===\n \n286 \nGet presence in country \nThis method returns time spent in countries for the requested period by the driver. \nNOTE: From API v2, the maximum days period for this call is 90 days. \n \nRequest \nMethod \nURL             \nGET \n/api/country-change/presence \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime \nyes \nTime from which period information is \ntaken. Date must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nyes \nTime till which period information is \ntaken. Date must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \ndriver \nString \nyes if \ntableNumber \nnot provided \nParameter by which information is taken. \ntableNumber \nString \nyes if \ndriver not \nprovided \nParameter by which information is taken. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"deviceKey\":\"352600000000000\", \n         \"driver\":\"UAD000000AABB000\", \n\n=== Страница 287 ===\n \n287 \n         \"country\":\"de\", \n         \"from\":\"2021-01-251T11:56:10.464\", \n   "
  },
  {
    "id": "GET__api_period-info",
    "method": "GET",
    "path": "/api/period-info",
    "category": "general",
    "description": "API endpoint",
    "parameters": [
      {
        "name": "2020",
        "description": "01-08T11:17:20Z).",
        "type": "string",
        "required": false
      },
      {
        "name": "2020",
        "description": "01-09T11:17:20Z).",
        "type": "string",
        "required": false
      }
    ],
    "request_body": "{ \n         \"deviceKey\":\"12233344445555\", \n         \"vinCode\":\"VIN15XYZ8KMZ12345\", \n         \"issuedOn\":\"2020-01-08T11:20:42.636\",         \n         \"serverDateTime\":\"2020-01-08T11:20:42.636\", \n         \"latitude\":36.7653783, \n         \"longitude\":-2.7711333, \n         \"altitude\":116, \n         \"course\":0, \n         \"address\":\"\", \n         \"country\":\"DE\", \n         \"driver\":null, \n         \"secondDriver\":null, \n         \"speed\":0, \n         \"engineRpm\":0, \n         \"engineHours\":\"0\", \n         \"distance\":0, \n         \"gpsOdometer\":0, \n         \"fuelLevel\":800, \n         \"fuelLevelPercent\":70, \n         \"float1Liters\":0, \n         \"float2Liters\":0, \n         \"adblueLevelPercent\":75, \n         \"axleWeight\":0, \n         \"axleWeight2\":0, \n         \"grossCombinationVehicleWeight\":0, \n         \"ignitionOn\":false, \n         \"externalPowerV\":12461, \n         \"internalBatteryV\":9806, \n         \"fuelUsage\":0, \n         \"connectedTrailer\":null, \n         \"satellites\":16, \n         \"gsmSignalLevel\":4, \n         \"setTemperature\":0.0, \n         \"actualTemperature\":0.0, \n         \"supplyTemperature\":0.0, \n         \"secondCompartmentTemperature\":0.0, \n         \"secondCompartmentSupplyTemperature\":0.0, \n         \"secondCompartmentSetTemperature\":0.0, \n         \"secondCompartmentFreezerEngine\":false, \n         \"secondCompartmentFreezerMode\":null, \n         \"firstSensorTemperature\":0.0, \n         \"secondSensorTemperature\":0.0, \n         \"thirdSensorTemperature\":0.0, \n         \"fourthSensorTemperature\":0.0, \n         \"freezerMode\":null, \n         \"freezerRunMode\":null, \n         \"freezerEngine\":false, \n\n=== Страница 290 ===\n \n290 \n         \"engineTemperature\":0, \n         \"gpsDistance\":360.54, \n         \"connectionId\":null, \n         \"connectedVin\":null, \n         \"connected\":false, \n         \"alarmOff\":null, \n         \"doorOpen\":null \n      }",
    "response": null,
    "auth_required": true,
    "full_context": "r by which information is taken. \ntableNumber \nString \nyes if \ndriver not \nprovided \nParameter by which information is taken. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"deviceKey\":\"352600000000000\", \n         \"driver\":\"UAD000000AABB000\", \n\n=== Страница 287 ===\n \n287 \n         \"country\":\"de\", \n         \"from\":\"2021-01-251T11:56:10.464\", \n         \"till\":\"2021-01-271T13:58:10.464\" \n      }, \n      { \n         \"deviceKey\":\"352600000000000\", \n         \"driver\":\"UAD000000AABB000\", \n         \"country\":\"fr\", \n         \"from\":\"2021-01-271T13:58:10.464\", \n         \"till\":\"2021-01-291T18:34:10.4644\" \n      } \n   ] \n} \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  deviceKey \ntext \n \n  driver \ntext \n \n  country \ntext \n \n  from \nLocalDateTime \n \n  till \nLocalDateTime \n \n \n \n \n \n\n=== Страница 288 ===\n \n288 \nTracking history \n \nGet track period info \nThis method returns track information for a period of time. \n \nRequest \nMethod \nURL             \nGET \n/api/period-info \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime \nyes \nTime from which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nyes \nTime till which period information is taken. \nDate must be provided ISO 8601  \n(e.g., 2020-01-09T11:17:20Z). \ndeviceKey \nString \nno (if \nvinCode is \npresent) \nParameter by which information is taken. \nvinCode \nString \nno (if \ndeviceKey \nis \npresent) \nParameter by which information is taken. \n \nResponse example \nStatus \nResponse \n200 \n{ \n\n=== Страница 289 ===\n \n289 \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"deviceKey\":\"12233344445555\", \n         \"vinCode\":\"VIN15XYZ8KMZ12345\", \n         \"issuedOn\":\"2020-01-08T11:20:42.636\",         \n         \"serverDateTime\":\"2020-"
  },
  {
    "id": "PUT__api_vehicle_deactivate",
    "method": "PUT",
    "path": "/api/vehicle/deactivate",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{          \n         \"licensePlateNumber\": \"LICENSEPLATE 345\",          \n         \"plateNumber\": \"PLATE 123\",          \n         \"imei\": \"00000000000001\", \n         \"model\": \"FMB640\", \n         \"simNumber\": \"37000000000\", \n         \"vinCode\": \"XXXXXXXXXXXXXXXXX\", \n         \"type\": \"TRUCK_MEGA, \n         \"ownerName\": \"UAB FLEETHAND\", \n         \"vehicleId\":14652, \n         \"fakeVehicle\":false, \n         \"tabImei\":\"bb34f67c6490cb41\", \n         \"tabSimNo\":\"651651651651\", \n         \"brand\":\"Renault\", \n         \"fuelTankCapacity\": 1500, \n         \"adBlueCapacity\":200, \n         \"payerName\":\"UAB OTHER FLEETHAND\" \n      }",
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "nalPowerV \nint \n \n  internalBatteryV \nint \n \n  fuelUsage \ndouble \n \n  connectedTrailer \ntext \n \n  satellites \nint \n \n  gsmSignalLevel \nint \n \n  setTemperature \ndouble \n \n  actualTemperature \ndouble \n \n  supplyTemperature \ndouble \n \n  secondCompartmentTemperature \ndouble \n \n  secondCompartmentSupplyTemperatur double \n \n  secondCompartmentSetTemperature \ndouble \n \n  secondCompartmentFreezerEngine \nboolean \n \n  secondCompartmentFreezerMode \ntext \n \n  firstSensorTemperature \ndouble \n \n  secondSensorTemperature \ndouble \n \n\n=== Страница 293 ===\n \n293 \n  thirdSensorTemperature \ndouble \n \n  fourthSensorTemperature \ndouble \n \n  freezerMode \ntext \n \n  freezerRunMode \ntext \n \n  freezerEngine \nboolean \n \n  engineTemperature \nint \n \n  gpsDistance \ntext \n \n  connectionId \nbigint \n \n  connected \nboolean \n \n  alarmOff \nboolean \n \n  doorOpen \nboolean \n \n \n \n \n\n=== Страница 294 ===\n \n294 \nVehicles \nDeactivate vehicle \nThis method deactivates the vehicle and unassigns all its attached devices. \nRequest \nMethod \nURL             \nPUT \n/api/vehicle/deactivate \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvinCode \nString \nyes \nVehicle’s VIN code. \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \nGet vehicles \nThis method returns information about client vehicles. \n \nRequest \nMethod \nURL             \nGET \n/api/vehicle \n \nRequest headers \n\n=== Страница 295 ===\n \n295 \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"licensePlateNumber\":\"LICENSEPLATE 123\", \n         \"plateNumber\":\"PLATE 123\", \n         \"imei\":\"00000000000000\", \n         \"model\":\"FMB640\", \n         \"simNumber\":\"37000000000\", \n         \"vinCode\":\"XXXXXXXXXXXXXX"
  },
  {
    "id": "GET__api_vehicle",
    "method": "GET",
    "path": "/api/vehicle",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{          \n         \"licensePlateNumber\": \"LICENSEPLATE 345\",          \n         \"plateNumber\": \"PLATE 123\",          \n         \"imei\": \"00000000000001\", \n         \"model\": \"FMB640\", \n         \"simNumber\": \"37000000000\", \n         \"vinCode\": \"XXXXXXXXXXXXXXXXX\", \n         \"type\": \"TRUCK_MEGA, \n         \"ownerName\": \"UAB FLEETHAND\", \n         \"vehicleId\":14652, \n         \"fakeVehicle\":false, \n         \"tabImei\":\"bb34f67c6490cb41\", \n         \"tabSimNo\":\"651651651651\", \n         \"brand\":\"Renault\", \n         \"fuelTankCapacity\": 1500, \n         \"adBlueCapacity\":200, \n         \"payerName\":\"UAB OTHER FLEETHAND\" \n      }",
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "e \ndouble \n \n  secondSensorTemperature \ndouble \n \n\n=== Страница 293 ===\n \n293 \n  thirdSensorTemperature \ndouble \n \n  fourthSensorTemperature \ndouble \n \n  freezerMode \ntext \n \n  freezerRunMode \ntext \n \n  freezerEngine \nboolean \n \n  engineTemperature \nint \n \n  gpsDistance \ntext \n \n  connectionId \nbigint \n \n  connected \nboolean \n \n  alarmOff \nboolean \n \n  doorOpen \nboolean \n \n \n \n \n\n=== Страница 294 ===\n \n294 \nVehicles \nDeactivate vehicle \nThis method deactivates the vehicle and unassigns all its attached devices. \nRequest \nMethod \nURL             \nPUT \n/api/vehicle/deactivate \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvinCode \nString \nyes \nVehicle’s VIN code. \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n \nGet vehicles \nThis method returns information about client vehicles. \n \nRequest \nMethod \nURL             \nGET \n/api/vehicle \n \nRequest headers \n\n=== Страница 295 ===\n \n295 \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":[ \n      { \n         \"licensePlateNumber\":\"LICENSEPLATE 123\", \n         \"plateNumber\":\"PLATE 123\", \n         \"imei\":\"00000000000000\", \n         \"model\":\"FMB640\", \n         \"simNumber\":\"37000000000\", \n         \"vinCode\":\"XXXXXXXXXXXXXXXXX\", \n         \"type\":\"TRUCK_MEGA\", \n         \"ownerName\":\"UAB FLEETHAND\", \n         \"vehicleId\":14653, \n         \"fakeVehicle\":true, \n         \"tabImei\":null, \n         \"tabSimNo\":null, \n         \"brand\":null, \n         \"fuelTankCapacity\":null, \n         \"adBlueCapacity\":null, \n         \"payerName\":\"UAB FLEETHAND\"  \n      }, \n      {          \n         \"licensePlateNumber\": \"LICENSEPLATE 345\",          \n         \"plateNumber\": \"PLATE 123\",          \n         \"imei\": "
  },
  {
    "id": "PUT__api_vehicle_update-vehicle-info",
    "method": "PUT",
    "path": "/api/vehicle/update-vehicle-info",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{  \n            \"groupId\": 1,  \n            \"title\": \"Two vehicles group\",  \n            \"vehiclesIds\": [ \n                11, \n                22, \n            ] \n        }",
    "response": null,
    "auth_required": true,
    "full_context": "\"TRUCK_MEGA, \n         \"ownerName\": \"UAB FLEETHAND\", \n         \"vehicleId\":14652, \n         \"fakeVehicle\":false, \n         \"tabImei\":\"bb34f67c6490cb41\", \n         \"tabSimNo\":\"651651651651\", \n         \"brand\":\"Renault\", \n         \"fuelTankCapacity\": 1500, \n         \"adBlueCapacity\":200, \n         \"payerName\":\"UAB OTHER FLEETHAND\" \n      } \n   ] \n\n=== Страница 296 ===\n \n296 \n} \n \n \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  licensePlateNumber \nvarchar(255) \n \n  plateNumber \nvarchar(255) \n \n  imei \nvarchar(255) \n \n  model \nvarchar(255) \n \n  simNumber \nvarchar(255) \n \n  vinCode \nvarchar(255) \n \n  type \nvarchar(255) \n \n  ownerName \nvarchar(255) \n \n  vehicleId \nbigint \n \n  fakeVehicle \nboolean \n \n  tabImei \nvarchar(255) \n \n  tabSimNo \nvarchar(255) \n \n  brand \nString \n \n  fuelTankCapacity \nInteger \n \n  adBlueCapacity \nInteger \n \n  payerName \nString \n \n \n \n\n=== Страница 297 ===\n \n297 \nUpdate vehicle info \nThis method updates information about the vehicle. \n \nRequest \nMethod \nURL             \nPUT \n/api/vehicle/update-vehicle-info \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nParameter \nData type \nRequired \nDescription \nvinCode \nString \nyes \nVehicle’s VIN code. \nplateNumber \nString \nyes \nVehicle’s name. \nlicensePlateNumber \nString \nno \nVehicle’s license plate number. \ntabImei \nString \nno \nVehicle’s tab imei. \nfhTabImei \nString \nno \nVehicle’s fleethand tab imei. \ntabSimNo \nString \nno \nVehicle’s tab phone number. \ntruckBrand \nString \nno \nVehicle’s brand. \nfuelTank \nInteger \nno \nVehicle’s fuel tank capacity. \nadBlueFuelTank \nInteger \nno \nVehicle’s ad blue fuel tank capacity. \ncompanyCode \nString \nyes \nVehicle’s company code. \nemission \nString \nno \nVehicle’s emission class. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n\n=== Страница 298 ===\n \n298 \n   \"payload\":\"OK\" \n} \n \nSimple vehicle info update \nThis method updates vehic"
  },
  {
    "id": "PUT__api_vehicle_simple-update-vehicle-info",
    "method": "PUT",
    "path": "/api/vehicle/simple-update-vehicle-info",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{  \n            \"groupId\": 1,  \n            \"title\": \"Two vehicles group\",  \n            \"vehiclesIds\": [ \n                11, \n                22, \n            ] \n        }",
    "response": null,
    "auth_required": true,
    "full_context": "cle/update-vehicle-info \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest body \nParameter \nData type \nRequired \nDescription \nvinCode \nString \nyes \nVehicle’s VIN code. \nplateNumber \nString \nyes \nVehicle’s name. \nlicensePlateNumber \nString \nno \nVehicle’s license plate number. \ntabImei \nString \nno \nVehicle’s tab imei. \nfhTabImei \nString \nno \nVehicle’s fleethand tab imei. \ntabSimNo \nString \nno \nVehicle’s tab phone number. \ntruckBrand \nString \nno \nVehicle’s brand. \nfuelTank \nInteger \nno \nVehicle’s fuel tank capacity. \nadBlueFuelTank \nInteger \nno \nVehicle’s ad blue fuel tank capacity. \ncompanyCode \nString \nyes \nVehicle’s company code. \nemission \nString \nno \nVehicle’s emission class. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n\n=== Страница 298 ===\n \n298 \n   \"payload\":\"OK\" \n} \n \nSimple vehicle info update \nThis method updates vehicle registration information. \nRequest \nMethod \nURL             \nPUT \n/api/vehicle/simple-update-vehicle-info \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \nFleethand vehicle id. \nvinCode \nString \nno \nVehicle’s VIN code. \nplateNumber \nString \nno \nVehicle’s name. \nlicensePlateNumber \nString \nno \nVehicle’s license plate number. \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n\n=== Страница 299 ===\n \n299 \nVehicles groups \nGet vehicles groups \nThis method returns all vehicles groups. \n \nRequest \nMethod \nURL \nGET \n/api/vehicles-group \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\": [ \n        {  \n            \"groupId\": 1,  \n            \"title\":"
  },
  {
    "id": "GET__api_vehicles-group",
    "method": "GET",
    "path": "/api/vehicles-group",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{  \n            \"groupId\": 1,  \n            \"title\": \"Two vehicles group\",  \n            \"vehiclesIds\": [ \n                11, \n                22, \n            ] \n        }",
    "response": null,
    "auth_required": true,
    "full_context": "nk capacity. \ncompanyCode \nString \nyes \nVehicle’s company code. \nemission \nString \nno \nVehicle’s emission class. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n\n=== Страница 298 ===\n \n298 \n   \"payload\":\"OK\" \n} \n \nSimple vehicle info update \nThis method updates vehicle registration information. \nRequest \nMethod \nURL             \nPUT \n/api/vehicle/simple-update-vehicle-info \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest parameters \nParameter \nData type \nRequired \nDescription \nvehicleId \nLong \nyes \nFleethand vehicle id. \nvinCode \nString \nno \nVehicle’s VIN code. \nplateNumber \nString \nno \nVehicle’s name. \nlicensePlateNumber \nString \nno \nVehicle’s license plate number. \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\":\"OK\" \n} \n\n=== Страница 299 ===\n \n299 \nVehicles groups \nGet vehicles groups \nThis method returns all vehicles groups. \n \nRequest \nMethod \nURL \nGET \n/api/vehicles-group \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\": [ \n        {  \n            \"groupId\": 1,  \n            \"title\": \"Two vehicles group\",  \n            \"vehiclesIds\": [ \n                11, \n                22, \n            ] \n        }, \n        {  \n            \"groupId\": 2,  \n            \"title\": \"Empty group\",  \n            \"vehiclesIds\": [] \n        }, \n        {  \n            \"groupId\": 3,  \n            \"title\": \"One vehicle group\",  \n            \"vehiclesIds\": [ \n                15 \n            ] \n        } \n\n=== Страница 300 ===\n \n300 \n   ] \n} \n \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  groupId \nLong \n \n  title \nString \n \n  vehiclesIds \nList<Long> \n \n \n \n \n \n\n=== Страница 301 ===\n \n301 \nUpsert vehicles group \nThis method creates vehicles group or "
  },
  {
    "id": "POST__api_vehicles-group",
    "method": "POST",
    "path": "/api/vehicles-group",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": "{  \n            \"groupId\": 1,  \n            \"title\": \"Two vehicles group\",  \n            \"vehiclesIds\": [ \n                11, \n                22, \n            ] \n        }",
    "response": "{ \n   \"status\":200, \n   \"payload\": [ \n        {  \n            \"groupId\": 1,  \n            \"title\": \"Two vehicles group\",  \n            \"vehiclesIds\": [ \n                11, \n                22, \n            ] \n        }, \n        {  \n            \"groupId\": 2,  \n            \"title\": \"Empty group\",  \n            \"vehiclesIds\": [] \n        }, \n        {  \n            \"groupId\": 3,  \n            \"title\": \"One vehicle group\",  \n            \"vehiclesIds\": [ \n                15 \n            ] \n        }",
    "auth_required": true,
    "full_context": "\nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\": [ \n        {  \n            \"groupId\": 1,  \n            \"title\": \"Two vehicles group\",  \n            \"vehiclesIds\": [ \n                11, \n                22, \n            ] \n        }, \n        {  \n            \"groupId\": 2,  \n            \"title\": \"Empty group\",  \n            \"vehiclesIds\": [] \n        }, \n        {  \n            \"groupId\": 3,  \n            \"title\": \"One vehicle group\",  \n            \"vehiclesIds\": [ \n                15 \n            ] \n        } \n\n=== Страница 300 ===\n \n300 \n   ] \n} \n \n \nResponse model \nAttribute \nData type \nDescription \npayload: \n \n \n  groupId \nLong \n \n  title \nString \n \n  vehiclesIds \nList<Long> \n \n \n \n \n \n\n=== Страница 301 ===\n \n301 \nUpsert vehicles group \nThis method creates vehicles group or updates vehicles group title. \nRequest \nMethod \nURL             \nPOST \n/api/vehicles-group \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest body \nRequest body \n{ \n   \"groupId\": 1, \n   \"title\": \"Group to update\" \n} \n \nRequest model \nKey \nData type \nRequired \nDescription \ngroupId \nLong \nno \nIf ID is provided, \ngroup will be \nupdated, if ID is \nnull, group will be \ncreated. \ntitle \nString \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\": 200, \n   \"payload\": 1 \n}  \n\n=== Страница 302 ===\n \n302 \nResponse model \nAttribute \nData type \nDescription \npayload: \nLong \nUpdated or created group ID \n \n \n\n=== Страница 303 ===\n \n303 \nAdd vehicles to vehicle group \nThis method adds vehicles to a vehicles group. \nRequest \nMethod \nURL             \nPUT \n/api/vehicles-group/add-vehicles \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nR"
  },
  {
    "id": "PUT__api_vehicles-group_add-vehicles",
    "method": "PUT",
    "path": "/api/vehicles-group/add-vehicles",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "email": "fleethand@fleethand.com",
      "ipAddress": "00.111.111.111",
      "occurredAt": "2023-08-30T23:25:45.124",
      "type": "CHANGE_PASSWORD",
      "successful": true
    },
    "response": {
      "status": 200,
      "payload": 1
    },
    "auth_required": true,
    "full_context": "\n \n  groupId \nLong \n \n  title \nString \n \n  vehiclesIds \nList<Long> \n \n \n \n \n \n\n=== Страница 301 ===\n \n301 \nUpsert vehicles group \nThis method creates vehicles group or updates vehicles group title. \nRequest \nMethod \nURL             \nPOST \n/api/vehicles-group \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest body \nRequest body \n{ \n   \"groupId\": 1, \n   \"title\": \"Group to update\" \n} \n \nRequest model \nKey \nData type \nRequired \nDescription \ngroupId \nLong \nno \nIf ID is provided, \ngroup will be \nupdated, if ID is \nnull, group will be \ncreated. \ntitle \nString \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\": 200, \n   \"payload\": 1 \n}  \n\n=== Страница 302 ===\n \n302 \nResponse model \nAttribute \nData type \nDescription \npayload: \nLong \nUpdated or created group ID \n \n \n\n=== Страница 303 ===\n \n303 \nAdd vehicles to vehicle group \nThis method adds vehicles to a vehicles group. \nRequest \nMethod \nURL             \nPUT \n/api/vehicles-group/add-vehicles \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest body \nRequest body \n{ \n   \"groupId\": 1, \n   \"vehicleIds\": [100, 1200] \n} \n \nRequest model \nKey \nData type \nRequired \nDescription \ngroupId \nLong \nyes \n \nvehicleIds \nList<Long> \nyes \nVehicles to add. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\": 200, \n   \"payload\": \"OK\" \n}  \n\n=== Страница 304 ===\n \n304 \nRemove vehicles from vehicle group \nThis method removes vehicles from a vehicles group. \nRequest \nMethod \nURL             \nPUT \n/api/vehicles-group/remove-vehicles \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest body \nRequest body \n{ \n   \"groupId\": 1, \n   \"vehicleIds\": [50, 1800] \n} \n \nRequest model \nKey \nData type \nRequired \nDescription \ngroupId \nLong \nyes \n \nv"
  },
  {
    "id": "PUT__api_vehicles-group_remove-vehicles",
    "method": "PUT",
    "path": "/api/vehicles-group/remove-vehicles",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "email": "fleethand@fleethand.com",
      "ipAddress": "00.111.111.111",
      "occurredAt": "2023-08-30T23:25:45.124",
      "type": "CHANGE_PASSWORD",
      "successful": true
    },
    "response": {
      "status": 200,
      "payload": 1
    },
    "auth_required": true,
    "full_context": "l be \ncreated. \ntitle \nString \nyes \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\": 200, \n   \"payload\": 1 \n}  \n\n=== Страница 302 ===\n \n302 \nResponse model \nAttribute \nData type \nDescription \npayload: \nLong \nUpdated or created group ID \n \n \n\n=== Страница 303 ===\n \n303 \nAdd vehicles to vehicle group \nThis method adds vehicles to a vehicles group. \nRequest \nMethod \nURL             \nPUT \n/api/vehicles-group/add-vehicles \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest body \nRequest body \n{ \n   \"groupId\": 1, \n   \"vehicleIds\": [100, 1200] \n} \n \nRequest model \nKey \nData type \nRequired \nDescription \ngroupId \nLong \nyes \n \nvehicleIds \nList<Long> \nyes \nVehicles to add. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\": 200, \n   \"payload\": \"OK\" \n}  \n\n=== Страница 304 ===\n \n304 \nRemove vehicles from vehicle group \nThis method removes vehicles from a vehicles group. \nRequest \nMethod \nURL             \nPUT \n/api/vehicles-group/remove-vehicles \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest body \nRequest body \n{ \n   \"groupId\": 1, \n   \"vehicleIds\": [50, 1800] \n} \n \nRequest model \nKey \nData type \nRequired \nDescription \ngroupId \nLong \nyes \n \nvehicleIds \nList<Long> \nyes \nVehicles to romove. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\": 200, \n   \"payload\": \"OK\" \n}  \n\n=== Страница 305 ===\n \n305 \nDelete vehicle group \nThis method deletes vehicles group. \nRequest \nMethod \nURL             \nDELETE \n/api/vehicles-group \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest parameters \nParameter \nData type \nRequired \nDescription \ngroupId \nLong \nyes \n \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\": 200, \n   \"payload\": \"OK\" \n} \n \n \n\n=== Страница 306"
  },
  {
    "id": "DELETE__api_vehicles-group",
    "method": "DELETE",
    "path": "/api/vehicles-group",
    "category": "vehicles",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "email": "fleethand@fleethand.com",
      "ipAddress": "00.111.111.111",
      "occurredAt": "2023-08-30T23:25:45.124",
      "type": "CHANGE_PASSWORD",
      "successful": true
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "{ \n   \"groupId\": 1, \n   \"vehicleIds\": [100, 1200] \n} \n \nRequest model \nKey \nData type \nRequired \nDescription \ngroupId \nLong \nyes \n \nvehicleIds \nList<Long> \nyes \nVehicles to add. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\": 200, \n   \"payload\": \"OK\" \n}  \n\n=== Страница 304 ===\n \n304 \nRemove vehicles from vehicle group \nThis method removes vehicles from a vehicles group. \nRequest \nMethod \nURL             \nPUT \n/api/vehicles-group/remove-vehicles \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest body \nRequest body \n{ \n   \"groupId\": 1, \n   \"vehicleIds\": [50, 1800] \n} \n \nRequest model \nKey \nData type \nRequired \nDescription \ngroupId \nLong \nyes \n \nvehicleIds \nList<Long> \nyes \nVehicles to romove. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\": 200, \n   \"payload\": \"OK\" \n}  \n\n=== Страница 305 ===\n \n305 \nDelete vehicle group \nThis method deletes vehicles group. \nRequest \nMethod \nURL             \nDELETE \n/api/vehicles-group \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest parameters \nParameter \nData type \nRequired \nDescription \ngroupId \nLong \nyes \n \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\": 200, \n   \"payload\": \"OK\" \n} \n \n \n\n=== Страница 306 ===\n \n306 \nUsers \n \nGet users actions \nThis method assigns a list of activities to the provided client. \n \nRequest \nMethod \nURL \nGET \n/api/user-actions \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime \nyes \nTime from which period \ninformation is taken.  Date must \nbe provided ISO 8601 \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nyes \nTime till which period \ninformation is taken. Date must \nbe provided ISO 8601 "
  },
  {
    "id": "GET__api_user-actions",
    "method": "GET",
    "path": "/api/user-actions",
    "category": "users",
    "description": "API endpoint",
    "parameters": [],
    "request_body": {
      "email": "fleethand@fleethand.com",
      "ipAddress": "00.111.111.111",
      "occurredAt": "2023-08-30T23:25:45.124",
      "type": "CHANGE_PASSWORD",
      "successful": true
    },
    "response": {
      "status": 200,
      "payload": "OK"
    },
    "auth_required": true,
    "full_context": "iption \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest body \nRequest body \n{ \n   \"groupId\": 1, \n   \"vehicleIds\": [50, 1800] \n} \n \nRequest model \nKey \nData type \nRequired \nDescription \ngroupId \nLong \nyes \n \nvehicleIds \nList<Long> \nyes \nVehicles to romove. \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\": 200, \n   \"payload\": \"OK\" \n}  \n\n=== Страница 305 ===\n \n305 \nDelete vehicle group \nThis method deletes vehicles group. \nRequest \nMethod \nURL             \nDELETE \n/api/vehicles-group \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \nRequest parameters \nParameter \nData type \nRequired \nDescription \ngroupId \nLong \nyes \n \n \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\": 200, \n   \"payload\": \"OK\" \n} \n \n \n\n=== Страница 306 ===\n \n306 \nUsers \n \nGet users actions \nThis method assigns a list of activities to the provided client. \n \nRequest \nMethod \nURL \nGET \n/api/user-actions \n \nRequest headers \nKey \nData type \nRequired \nDescription \napiKey \nString \nyes \nEncoded api key. \nexternalId \nLong \nyes \nProvided external id. \n \nRequest parameters \nParameter \nData type \nRequired \nDescription \nfrom \nLocalDateTime \nyes \nTime from which period \ninformation is taken.  Date must \nbe provided ISO 8601 \n(e.g., 2020-01-08T11:17:20Z). \ntill \nLocalDateTime \nyes \nTime till which period \ninformation is taken. Date must \nbe provided ISO 8601  \n(e.g., 2020-01-08T11:17:20Z). \n \n \n\n=== Страница 307 ===\n \n307 \n \nResponse example \nStatus \nResponse \n200 \n{ \n   \"status\":200, \n   \"payload\": [ \n        {  \n            \"email\": \"fleethand@fleethand.com\",  \n            \"ipAddress\": \"00.111.111.111\",  \n            \"occurredAt\": \"2023-08-30T23:20:17.283\",  \n            \"type\": \"LOGIN\",  \n            \"successful\": false \n        }, \n        { \n            \"email\": \"fleethand@fleethand.com\", \n            \"ipAddress\": \"00.111.111.111\", \n            \"occurredAt"
  }
]
[
  {
    "operation_id": "post__api_activities_assign",
    "method": "POST",
    "path": "/api/activities/assign",
    "summary": "This method creates an activity configuration which can be later assigned and shown in the driver's application.",
    "description": "This method creates an activity configuration which can be later assigned and shown in the driver's application.",
    "category": "activities",
    "category_info": {
      "name": "activities",
      "description": "Activity management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "vehicleId",
        "data_type": "integer",
        "required": true,
        "description": "Fleethand vehicle id.",
        "location": "path"
      }
    ],
    "request_body": "[ \n    11,  \n    12,  \n    25 \n] \n \n\n=== Страница 8 ===\n \n8",
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_activities",
    "method": "POST",
    "path": "/api/activities",
    "summary": "This method creates an activity configuration which can be later assigned and shown in the driver's application.",
    "description": "This method creates an activity configuration which can be later assigned and shown in the driver's application.",
    "category": "activities",
    "category_info": {
      "name": "activities",
      "description": "Activity management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "vehicleId",
        "data_type": "integer",
        "required": true,
        "description": "Fleethand vehicle id.",
        "location": "path"
      }
    ],
    "request_body": "[ \n    11,  \n    12,  \n    25 \n] \n \n\n=== Страница 8 ===\n \n8",
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_activities",
    "method": "GET",
    "path": "/api/activities",
    "summary": "This method returns filled activity from the driver by providing the activity id.",
    "description": "This method returns filled activity from the driver by providing the activity id.",
    "category": "activities",
    "category_info": {
      "name": "activities",
      "description": "Activity management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "lastActivityId",
        "data_type": "integer",
        "required": true,
        "description": "Last biggest received activity id. If it",
        "location": "path"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "\"largestActivityId\": 1,\n\"activities\": [\n{\n\"id\": 1,\n\"vehicleId\": 1225,\n\"vinCode\": \"ABC1234567891011\",\n\"code\": \"ACTIVITY_BUY\",\n\"filledAt\": \"2023-06-19T14:41:00\",\n\"questions\": [\n{\n\"code\": \"QUESTION_BUY_WHAT\",\n\"type\": \"SELECTION\",\n\"answer\": {\n\"code\": \"ANSWER_VIGNETE\",\n\"value\": \"buy_vignette\",",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_activities_activity",
    "method": "GET",
    "path": "/api/activities/activity",
    "summary": "This method returns drivers filled activity file in pdf format by provided token.",
    "description": "This method returns drivers filled activity file in pdf format by provided token.",
    "category": "activities",
    "category_info": {
      "name": "activities",
      "description": "Activity management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"id\": 1,\n\"vehicleId\": 1225,\n\"vinCode\": \"ABC1234567891011\",\n\"code\": \"ACTIVITY_BUY\",\n\"filledAt\": \"2023-06-19T14:41:00\",\n\"questions\": [\n{\n\"code\": \"QUESTION_BUY_WHAT\",\n\"type\": \"SELECTION\",\n\"answer\": {\n\"code\": \"ANSWER_VIGNETE\",\n\"value\": \"buy_vignette\",\n\"questions\": [\n{\n\"code\": \"QUESTION_COUNTRY\",\n\"type\": \"SELECTION\",\n\"answer\": {\n\"code\": \"ANSWER_LUX\",",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_activities_file_pdf",
    "method": "GET",
    "path": "/api/activities/file-pdf",
    "summary": "This method returns drivers filled activity files which are assigned to API key account.",
    "description": "This method returns drivers filled activity files which are assigned to API key account.",
    "category": "activities",
    "category_info": {
      "name": "activities",
      "description": "Activity management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_activities_files",
    "method": "POST",
    "path": "/api/activities/files",
    "summary": "This method returns country crossings of a tracking object for a period of time.",
    "description": "This method returns country crossings of a tracking object for a period of time.",
    "category": "activities",
    "category_info": {
      "name": "activities",
      "description": "Activity management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": [
      "812aa122-fe82-43eb-af40-d7350336477c",
      "a60e261d-9711-4ddd-9c71-4d13d6cf6e07"
    ],
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_country_change_crossings",
    "method": "GET",
    "path": "/api/country-change/crossings",
    "summary": "This method returns country crossings of a tracking object for a period of time.",
    "description": "NOTE: From API v2, the maximum days period for this call is 90 days.",
    "category": "general",
    "category_info": {
      "name": "general",
      "description": "General API operations",
      "priority": "medium",
      "confidence": "low",
      "matched_by": "default"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "from",
        "data_type": "string",
        "required": true,
        "description": "Time from which period information is taken.",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "country": "de",
              "distance": 205.0,
              "beginPosition": "48.98015, 8.158865",
              "endPosition": "50.76395, 3.16532",
              "beginMileage": 212793.525,
              "endMileage": 212998.525,
              "beginFuelLevel": 100,
              "beginFuelLevelLiters": 1200.0,
              "endFuelLevel": 66,
              "endFuelLevelLiters": 805.2,
              "startDate": "2021-01-31T11:56:10.464",
              "endDate": "2021-02-02T14:56:10.464",
              "vehiclePlateNumber": "ABC123"
            },
            {
              "country": "fr",
              "distance": 200.0,
              "beginPosition": "48.98015, 8.158865",
              "endPosition": "50.76395, 3.16532",
              "beginMileage": 212998.525,
              "endMileage": 213198.525,
              "beginFuelLevel": 66,
              "beginFuelLevelLiters": 805.2,
              "endFuelLevel": 25,
              "endFuelLevelLiters": 305.0,
              "startDate": "2021-02-02T14:56:10.464",
              "endDate": "2021-02-03T14:56:10.464",
              "vehiclePlateNumber": "ABC123"
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 0.6000000000000001
  },
  {
    "operation_id": "get__api_country_change",
    "method": "GET",
    "path": "/api/country-change",
    "summary": "This method returns country crossings of a tracking object for a period of time.",
    "description": "NOTE: From API v2, the maximum days period for this call is 90 days.",
    "category": "general",
    "category_info": {
      "name": "general",
      "description": "General API operations",
      "priority": "medium",
      "confidence": "low",
      "matched_by": "default"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "from",
        "data_type": "string",
        "required": true,
        "description": "Time from which period information is taken.",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "country": "de",
              "distance": 205.0,
              "beginPosition": "48.98015, 8.158865",
              "endPosition": "50.76395, 3.16532",
              "beginMileage": 212793.525,
              "endMileage": 212998.525,
              "beginFuelLevel": 100,
              "beginFuelLevelLiters": 1200.0,
              "endFuelLevel": 66,
              "endFuelLevelLiters": 805.2,
              "startDate": "2021-01-31T11:56:10.464",
              "endDate": "2021-02-02T14:56:10.464",
              "vehiclePlateNumber": "ABC123"
            },
            {
              "country": "fr",
              "distance": 200.0,
              "beginPosition": "48.98015, 8.158865",
              "endPosition": "50.76395, 3.16532",
              "beginMileage": 212998.525,
              "endMileage": 213198.525,
              "beginFuelLevel": 66,
              "beginFuelLevelLiters": 805.2,
              "endFuelLevel": 25,
              "endFuelLevelLiters": 305.0,
              "startDate": "2021-02-02T14:56:10.464",
              "endDate": "2021-02-03T14:56:10.464",
              "vehiclePlateNumber": "ABC123"
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 0.6000000000000001
  },
  {
    "operation_id": "put__api_ddd_cancel_driver",
    "method": "PUT",
    "path": "/api/ddd/cancel-driver",
    "summary": "This method allows to cancel initiated vehicle .ddd file downloads.",
    "description": "This method allows to cancel initiated vehicle .ddd file downloads.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "Successfully canceled 2 driver .ddd initiations"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "put__api_ddd_cancel_vehicle",
    "method": "PUT",
    "path": "/api/ddd/cancel-vehicle",
    "summary": "This method allows to download single driver .ddd file by file ID.",
    "description": "This method allows to download single driver .ddd file by file ID.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "deviceKey",
        "data_type": "string",
        "required": true,
        "description": "Parameter by which information is taken.",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "Successfully canceled 2 vehicle .ddd initiations"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_ddd_driver_file_download",
    "method": "GET",
    "path": "/api/ddd/driver-file/download",
    "summary": "This method allows to download single vehicle .ddd file by file ID.",
    "description": "This method allows to download single vehicle .ddd file by file ID.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "200 {\n\"status\":200,\n\"payload\":\" VwHREFcQ0READQADmXyPgAQQAAAQAAADgBOZfOPgBBBArNAAHDS0NTI28EMyRfB\nGckcwR7RYMFtyXPRfsmIwYnJyIIe8h8CH0IgWixDAHMBwwPLH8OU85UDlkOXW51ENFQ1RDoATgAOZfThABB\nCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcWGzYfFiM2bAD\ngATmX3hAAQRAIyyADQCcgbwCXIJ8ApyCzALshG8KcAqECpUKpYq0DsWO5A8VkUQRVZGE\nhABBCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcW\"\n}\nResponse model\nAttribute\nData type\nDescription\npayload\nbyte array",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_ddd_vehicle_file_download",
    "method": "GET",
    "path": "/api/ddd/vehicle-file/download",
    "summary": "This method returns all company card statuses which are assigned to the API key.",
    "description": "This method returns all company card statuses which are assigned to the API key.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "200 {\n\"status\":200,\n\"payload\":\" VwHREFcQ0READQADmXyPgAQQAAAQAAADgBOZfOPgBBBArNAAHDS0NTI28EMyRfB\nGckcwR7RYMFtyXPRfsmIwYnJyIIe8h8CH0IgWixDAHMBwwPLH8OU85UDlkOXW51ENFQ1RDoATgAOZfThABB\nCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcWGzYfFiM2bAD\ngATmX3hAAQRAIyyADQCcgbwCXIJ8ApyCzALshG8KcAqECpUKpYq0DsWO5A8VkUQRVZGE\nhABBCAABAAAAOADhl9jKAEEMCP0AAc5nTm8ufw6DLocRd9F4EX0RgXGVFQHVB1UPFSc1MxX7NhcW\"\n}\nResponse model\nAttribute\nData type\nDescription\npayload\nbyte array",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_ddd_cards",
    "method": "GET",
    "path": "/api/ddd/cards",
    "summary": "This method returns all companies that are assigned to the API key.",
    "description": "This method returns all companies that are assigned to the API key.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "cardNumber": "1234567891234000",
              "connected": null,
              "status": "NO_CONNECTION_DATA",
              "client": {
                "id": 1,
                "value": "UAB \"Company 1\""
              },
              "physicalNumber": "0000000001"
            },
            {
              "cardNumber": "1234567891235000",
              "connected": true,
              "status": "CONNECTED",
              "client": {
                "id": 2,
                "value": "UAB \"Company 2\""
              },
              "physicalNumber": null
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_ddd_companies",
    "method": "GET",
    "path": "/api/ddd/companies",
    "summary": "This method returns .ddd files information which are assigned to the API key.",
    "description": "This method returns .ddd files information which are assigned to the API key.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "title": "UAB FLEETHAND",
              "clientId": -1,
              "country": "LTU"
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_ddd_info",
    "method": "GET",
    "path": "/api/ddd/info",
    "summary": "This method returns .ddd files latest information for all the drivers that are assigned to the API key.",
    "description": "This method returns .ddd files latest information for all the drivers that are assigned to the API key.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "month",
        "data_type": "string",
        "required": true,
        "description": "Requested month: JANUARY, FEBRUARY, MARCH, APRIL,",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\": 200,\n\"payload\": {\n\"driverFiles\": [\n{\n\"id\": 1,\n\"imei\": null,\n\"driverCardNumber\": \"1234567891234000\",\n\"downloadDate\": \"2023-07-04T08:24:51.472\",\n\"dateFrom\": \"2022-08-14T00:00:00\",\n\"dateTill\": \"2023-05-31T20:30:00\"\n}\n],\n\"vehicleFiles\": [\n{\n\"id\": 2,\n\"imei\": \"00000000000001\",\n\"driverCardNumber\": null,\n\"downloadDate\": \"2023-07-03T11:41:15.825\",\n\"dateFrom\": \"2023-03-30T23:59:59\",",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_ddd_drivers_status",
    "method": "GET",
    "path": "/api/ddd/drivers-status",
    "summary": "This method returns .ddd files latest information for all the vehicles that are assigned to the API key.",
    "description": "This method returns .ddd files latest information for all the vehicles that are assigned to the API key.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "downloadTime": "2022-05-18T12:47:00",
              "activitiesFrom": "2021-05-07T00:00:00",
              "activitiesTill": "2022-05-18T01:38:00",
              "driverCard": "0000000116754000"
            },
            {
              "downloadTime": null,
              "activitiesFrom": null,
              "activitiesTill": null,
              "driverCard": "UAD0000004RWO000"
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_ddd_vehicles_status",
    "method": "GET",
    "path": "/api/ddd/vehicles-status",
    "summary": "This method returns all drivers’ .ddd files (that are downloaded in a requested year and month) in a .zip file.",
    "description": "This method returns all drivers’ .ddd files (that are downloaded in a requested year and month) in a .zip file.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "vin": "YV2RT40C0MB325540",
              "downloadTime": "2021-08-26T14:35:05",
              "activitiesFrom": "2021-05-25T23:59:59",
              "activitiesTill": "2021-08-25T13:02:15"
            },
            {
              "vin": "YV2RTY0A7MB322799",
              "downloadTime": null,
              "activitiesFrom": null,
              "activitiesTill": null
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_ddd_all_drivers_download",
    "method": "GET",
    "path": "/api/ddd/all-drivers/download",
    "summary": "This method returns all drivers’ .ddd files (that are downloaded in a requested time period) in a .zip file.",
    "description": "This method returns all drivers’ .ddd files (that are downloaded in a requested time period) in a .zip file.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "month",
        "data_type": "string",
        "required": true,
        "description": "Requested month: JANUARY, FEBRUARY, MARCH, APRIL,",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_ddd_all_drivers_download_period",
    "method": "GET",
    "path": "/api/ddd/all-drivers/download-period",
    "summary": "This method returns all trucks’ .ddd files (that are downloaded in a requested year and month) in a .zip file.",
    "description": "This method returns all trucks’ .ddd files (that are downloaded in a requested year and month) in a .zip file.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_ddd_all_vehicles_download",
    "method": "GET",
    "path": "/api/ddd/all-vehicles/download",
    "summary": "This method returns all trucks’ .ddd files (that are downloaded in a requested time period) in a .zip file.",
    "description": "This method returns all trucks’ .ddd files (that are downloaded in a requested time period) in a .zip file.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "month",
        "data_type": "string",
        "required": true,
        "description": "Requested month: JANUARY, FEBRUARY, MARCH, APRIL,",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_ddd_all_vehicles_download_period",
    "method": "GET",
    "path": "/api/ddd/all-vehicles/download-period",
    "summary": "This method allows initiating driver .ddd file downloads.",
    "description": "This method allows initiating driver .ddd file downloads.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "xRQe8LptTfWRK8qsshY8fJkx5st2yYvfieWj1q4YUS364GVpv/KynZ"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "put__api_ddd_init_driver",
    "method": "PUT",
    "path": "/api/ddd/init-driver",
    "summary": "This method allows initiating vehicle .ddd file downloads.",
    "description": "This method allows initiating vehicle .ddd file downloads.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "put__api_ddd_init_vehicle",
    "method": "PUT",
    "path": "/api/ddd/init-vehicle",
    "summary": "This method allows uploading a single driver’s .ddd file or multiple vehicles’ .ddd files in .zip file format.",
    "description": "This method allows uploading a single driver’s .ddd file or multiple vehicles’ .ddd files in .zip file format.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_ddd_upload_drivers",
    "method": "POST",
    "path": "/api/ddd/upload-drivers",
    "summary": "This method allows uploading a single vehicle’s .ddd file or multiple vehicles’ .ddd files in .zip file format.",
    "description": "This method allows uploading a single vehicle’s .ddd file or multiple vehicles’ .ddd files in .zip file format.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": "Key \nValue \nFile \nfiledata",
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_ddd_upload_vehicles",
    "method": "POST",
    "path": "/api/ddd/upload-vehicles",
    "summary": "This method returns drivers filled expense sheets which are assigned to API key account.",
    "description": "This method returns drivers filled expense sheets which are assigned to API key account.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": "Key \nValue \nFile \nfiledata",
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_documents_expenses",
    "method": "GET",
    "path": "/api/documents/expenses",
    "summary": "This method returns drivers filled trip sheets which are assigned to API key account.",
    "description": "This method returns drivers filled trip sheets which are assigned to API key account.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"externalId\":6,\n\"vehicleId\":2701,\n\"driverId\":355,\n\"clientId\":950,\n\"startedFilling\":\"2020-09-30T06:35:29.133\",\n\"finishedFilling\":\"2020-09-30T06:35:29.133\",\n\"signature\":\"iVBORw0AYAAACXJ2VEAAAABHNCSVQICAgIf\",\n\"items\":[\n{\n\"id\":212,\n\"title\":\"title\",\n\"fuelBefore\":99999,\n\"fuelFilled\":0.889,\n\"odometer\":0,\n\"generalFuelUsage\":8755,\n\"country\":\"LT\",\n\"date\":\"2020-09-30T09:36:15\",\n\"price\":855888,",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_documents_trip",
    "method": "GET",
    "path": "/api/documents/trip",
    "summary": "This method inserts or updates driver document.",
    "description": "This method inserts or updates driver document.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"externalId\":14,\n\"vehicleId\":10605,\n\"driverId\":544,\n\"clientId\":950,\n\"startedFilling\":\"2020-11-20T13:19:10.834\",\n\"finishedFilling\":\"2020-11-20T13:19:36.232\",\n\"signature\":\"iVBORw0KGgoAAAANSUhEUgAHNCSVQICAgIf\",\n\"items\":[\n{\n\"id\":55,\n\"dateFrom\":\"2020-11-20\",\n\"countryFrom\":\"Germany\",\n\"cityFrom\":\"Leipzig, 04158\",\n\"odometerFrom\":205257,\n\"dateTo\":\"2020-11-20\",\n\"countryTo\":\"Germany\",\n\"cityTo\":\"Leipzig, 04158\",\n\"odometerTo\":205257,\n\"cmrNumber\":\"cmr#456\",\n\"cmrWeight\":205257,\n\"distance\":0,\n\"comments\":\"Comments\",\n\"createdAt\":\"2020-11-20T13:19:10.834\"",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_document_driver",
    "method": "POST",
    "path": "/api/document/driver",
    "summary": "This method inserts or updates vehicle document.",
    "description": "This method inserts or updates vehicle document.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "driverCard",
        "data_type": "string",
        "required": true,
        "description": "Parameter by which information is taken.",
        "location": "query"
      },
      {
        "name": "driverClientId",
        "data_type": "integer",
        "required": false,
        "description": "Driver client ID, to find specific driver",
        "location": "path"
      }
    ],
    "request_body": "=== Страница 63 ===\n \n63 \nKey \nValue \nfile \nfiledata",
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": 9999
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_document_vehicle",
    "method": "POST",
    "path": "/api/document/vehicle",
    "summary": "This method returns driver documents.",
    "description": "This method returns driver documents.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "email",
        "data_type": "string",
        "required": false,
        "description": "Document created by.",
        "location": "query"
      }
    ],
    "request_body": "Key \nValue \nfile \nfiledata",
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": 858558
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_document_driver",
    "method": "GET",
    "path": "/api/document/driver",
    "summary": "This method deletes driver documents.",
    "description": "This method deletes driver documents.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"id\":1,\n\"name\":\"Scanned passport”,\n\"important\":false,\n\"showToDriver\":false,\n\"type\":\"OTHER\",\n\"country\":\"en\"\n},\n{\n\"id\":2,\n\"name\":\"Driver license”,\n\"important\":true,\n\"showToDriver\":true,\n\"type\":\"OTHER\",\n\"country\":\"en\"\n},",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "delete__api_document_driver",
    "method": "DELETE",
    "path": "/api/document/driver",
    "summary": "This method returns vehicle documents.",
    "description": "This method returns vehicle documents.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "driverCard",
        "data_type": "string",
        "required": true,
        "description": "documentsIds List<Long>",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_document_vehicle",
    "method": "GET",
    "path": "/api/document/vehicle",
    "summary": "This method deletes vehicle documents.",
    "description": "This method deletes vehicle documents.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"id\":1,\n\"name\":\"Insurance”,\n\"important\":false,\n\"showToDriver\":false,\n},\n{\n\"id\":2,\n\"name\":\"Taxed roads ticket”,\n\"important\":true,\n\"showToDriver\":true,\n},\n]\n}",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "delete__api_document_vehicle",
    "method": "DELETE",
    "path": "/api/document/vehicle",
    "summary": "This method returns information about client drivers.",
    "description": "This method returns information about client drivers.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "vehicleId",
        "data_type": "integer",
        "required": true,
        "description": "documentsIds List<Long>",
        "location": "path"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_driver",
    "method": "GET",
    "path": "/api/driver",
    "summary": "This method appends vehicle to eco group. Also possible to set default vehicle eco settings.",
    "description": "This method appends vehicle to eco group. Also possible to set default vehicle eco settings.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"driverId\":\"1\",\n\"driverCard\":\"1234567891234000\",\n\"fullName\":\"name surname\",\n\"address\":\"EXAMPLE ADDRESS\",\n\"email\":\"EXAMPLE@EXAMPLE.COM\",\n\"language\":\"LT\",\n\"phoneNumber\":\"+37060012345\",\n\"department\":\"DEPARTMENT EXAMPLE\",\n\"tableNumber\":\"123\"\n},\n{\n\"driverId\":\"2\",\n\"driverCard\":\"UAD0000011142000\",\n\"fullName\":\"NAME SURNAME\",\n\"address\":null,\n\"email\":null,",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_eco_append_to_group",
    "method": "POST",
    "path": "/api/eco/append-to-group",
    "summary": "This method returns eco driving information by vehicle.",
    "description": "This method returns eco driving information by vehicle.",
    "category": "eco",
    "category_info": {
      "name": "eco",
      "description": "Environmental data",
      "priority": "low",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": {
      "groupId": 1,
      "vinCode": "BBBBBBBB11111111"
    },
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":{\n\"vinCode\":\"BBBBBBBB11111111\"\n\"message\":\"OK\"\n}\n}",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_eco_vehicle",
    "method": "GET",
    "path": "/api/eco/vehicle",
    "summary": "This method returns eco driving information by driver.",
    "description": "This method returns eco driving information by driver.",
    "category": "eco",
    "category_info": {
      "name": "eco",
      "description": "Environmental data",
      "priority": "low",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\": 200,\n\"payload\": {\n\"deviceKey\": \"352094089272196\",",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_eco_driver",
    "method": "GET",
    "path": "/api/eco/driver",
    "summary": "This method returns eco groups.",
    "description": "This method returns eco groups.",
    "category": "eco",
    "category_info": {
      "name": "eco",
      "description": "Environmental data",
      "priority": "low",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\": 200,\n\"payload\": {\n\"driver\": \"0000000005266000\",\n\"totalData\": {\n\"distance\": \"2480.01\",\n\"gpsDistance\": \"2484.9\",\n\"fuelUsed\": 682.5,\n\"fuelUsedIdling\": 16.0,\n\"fuelUsage\": \"27.52\",\n\"fuelUsageDriving\": \"26.87\",\n\"noCargo\": \"10.17\",\n\"lightCargo\": \"22.53\",\n\"mediumCargo\": \"24.26\",\n\"heavyCargo\": \"43.05\",\n\"parkingBrake\": \"0\",\n\"harshBraking\": \"0\",\n\"freeRolling\": \"10.89\",\n\"braking\": \"13.95\",\n\"brakingDistance\": \"14.26\",\n\"stopping\": \"8.35\",\n\"numberOfStops\": 207,\n\"brakingStoppingScore\": 100,\n\"rolling\": \"27.19\",\n\"rollingScore\": 100,\n\"economy\": \"0.03\",\n\"economyScore\": 100,\n\"engineLoad\": \"5.59\",\n\"engineLoadScore\": 48,\n\"overspeeding\": \"26.01\",\n\"overspeedingScore\": 48,\n\"cruiseControlDistance\": \"75.2\",\n\"cruiseControlDistanceScore\": 100,\n\"cruiseControlFuel\": \"31.37\",\n\"cruiseControlInterruption\": \"0.15\",\n\"cruiseControlFuelUsage\": \"-16.71\",\n\"cruiseControlFuelUsageScore\": 0,\n\"idling\": \"11.83\",\n\"idlingTime\": \"6h 34m\",\n\"idlingScore\": 61,\n\"averageScore\": 70,\n\"averageWeight\": \"26455.76\",\n\"speedData\": {\n\"distanceTill80\": \"34.85\",\n\"distance80To81\": \"7.43\",\n\"distance82To83\": \"8.85\",\n\"distance84To85\": \"44.49\",",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_eco_groups",
    "method": "GET",
    "path": "/api/eco/groups",
    "summary": "This method adds form to the task.",
    "description": "This method adds form to the task.",
    "category": "eco",
    "category_info": {
      "name": "eco",
      "description": "Environmental data",
      "priority": "low",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "id": 1,
              "title": "MAN",
              "vehicleCount": 32
            },
            {
              "id": 2,
              "title": "Volvo",
              "vehicleCount": 45
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_documents_task_form",
    "method": "POST",
    "path": "/api/documents/task-form",
    "summary": "This method allows you to change status to “Confirmed” for the provided form.",
    "description": "This method allows you to change status to “Confirmed” for the provided form.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": "{ \n \"taskId\": 0, \n \"defaultForms\": [ \n   { \n     \"status\": \"ARRIVED\", \n     \"id\": 25662, \n     \"code\": \"DOCUMENTS\" \n   } \n ], \n \"forms\": { \n   \"DONE\": { \n     \"formNameEn\": \"Form\", \n     \"formNameLt\": \"Forma\", \n     \"formNameRu\": \"Форма\", \n     \"formNameDe\": \"Formular\", \n     \"formNamePl\": \"Formularz\", \n     \"code\": \"DOCUMENTS\", \n     \"sections\": [ \n       { \n         \"sectionNameEn\": \"Section\", \n         \"sectionNameLt\": \"Sekcija\", \n         \"sectionNameRu\": \"Раздел\", \n\n=== Страница 100 ===\n \n100 \n         \"sectionNameDe\": \"Abschnitt\", \n         \"sectionNamePl\": \"Sekcja\", \n         \"options\": [ \n           { \n             \"type\": \"DOCUMENT\", \n             \"code\": \"CMR\", \n             \"optionNameEn\": \"Amazon request\", \n             \"optionNameLt\": \"Skaičių parinktis\", \n             \"optionNameRu\": \"CMR (VIlnius - Kaunas)\", \n             \"optionNameDe\": \"Zahlenoption\", \n             \"optionNamePl\": \"Opcja numeryczna\", \n             \"mandatory\": true \n           }, \n           { \n             \"type\": \"TEXTFIELD\", \n             \"code\": \"DELIVERY_NOTE\", \n             \"optionNameEn\": \"Text option\", \n             \"optionNameLt\": \"Teksto parinktis\", \n             \"optionNameRu\": \"Вариант текста\", \n             \"optionNameDe\": \"Textoption\", \n             \"optionNamePl\": \"Opcja tekstu\", \n             \"mandatory\": false \n           }, \n             { \n               \"type\": \"SELECTION\", \n               \"code\": \"LOCK_WORKS\", \n               \"optionNameLt\": \"Ar veikia spyna?\", \n               \"mandatory\": true, \n               \"choices\": [ \n                 { \n                   \"code\": \"YES\", \n                   \"choiceNameLt\": \"Taip\", \n                   \"choiceInfoLt\": \"Visuomet rupinkites saugumu!\", \n                   \"options\": [] \n                 }, \n                 { \n                   \"code\": \"NO\", \n                   \"choiceNameLT\": \"Ne\", \n                   \"options\": [ \n                     { \n                       \"type\": \"TEXTFIELD\", \n                       \"code\": \"FREE_TEST_ANSWER\", \n                       \"optionNameLt\": \"Aprašykite kas neveikia\", \n                       \"mandatory\": true, \n                       \"min\": 10, \n                       \"max\": 256 \n                     }, \n                     { \n                       \"type\": \"DATE_PICKER\", \n                       \"code\": \"LOCK_DATE\", \n\n=== Страница 101 ===\n \n101 \n                       \"optionNameLt\": \"Kada sugedo?\", \n                       \"mandatory\": true, \n                       \"timeValidation\": \"PAST_NOW\" \n                     } \n                   ] \n                 } \n               ] \n             } \n           ] \n         } \n       ] \n   }, \n   \"EXECUTING\": { \n     \"formNameLt\": \"Forma 2\", \n     \"formNamePl\": \"Formularz 2\", \n     \"code\": \"STARTUP_FORM\", \n     \"sections\": [ \n       { \n         \"sectionNameLt\": \"Sekcija 2\", \n         \"sectionNamePl\": \"Sekcja 2\", \n         \"options\": [ \n           { \n             \"type\": \"CHECKBOX\", \n             \"code\": \"APPROVAL\", \n             \"optionNameLt\": \"Žymėjimo laukelio parinktis\", \n             \"optionNamePl\": \"Opcja pola wyboru\", \n             \"mandatory\": true \n           } \n         ] \n       } \n     ] \n   } \n } \n}",
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "code": "DELIVERY_NOTE",
              "id": 11256
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_documents_forms_confirm",
    "method": "POST",
    "path": "/api/documents/forms/confirm",
    "summary": "This method allows you to create a fill form sub-task for the driver by provided form id.",
    "description": "This method allows you to create a fill form sub-task for the driver by provided form id.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": {
      "formId": 0
    },
    "responses": [],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_documents_forms_fill_form",
    "method": "POST",
    "path": "/api/documents/forms/fill-form",
    "summary": "This method returns drivers filled forms file in pdf format by provided token.",
    "description": "This method returns drivers filled forms file in pdf format by provided token.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": {
      "formId": 123,
      "vehicleId": 456,
      "comment": "Please fill this form."
    },
    "responses": [],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_documents_forms_file_pdf",
    "method": "GET",
    "path": "/api/documents/forms/file-pdf",
    "summary": "This method returns drivers filled forms which are assigned to API key account.",
    "description": "This method returns drivers filled forms which are assigned to API key account.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_documents_forms",
    "method": "POST",
    "path": "/api/documents/forms",
    "summary": "This method allows you to create a fill form sub-task for the driver by provided form id.",
    "description": "This method allows you to create a fill form sub-task for the driver by provided form id.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": {
      "formId": 0
    },
    "responses": [],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_documents_forms_form",
    "method": "GET",
    "path": "/api/documents/forms/form",
    "summary": "This method returns drivers filled forms which are assigned to API key account.",
    "description": "This method returns drivers filled forms which are assigned to API key account.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "formId",
        "data_type": "integer",
        "required": true,
        "description": "Filled form id.",
        "location": "path"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\": 200,\n\"payload\": {\n\"externalId\": 358,\n\"taskId\": 3555,\n\"code\": \"DOCUMENTS\",\n\"nameEn\": \"Keitimosi forma\",\n\"nameLt\": \"Keitimosi forma\",\n\"nameRu\": \"Акт передачи\",\n\"nameDe\": \"Keitimosi forma\",\n\"namePl\": \"Keitimosi forma\",\n\"filledAt\": \"2020-08-03T17:14:13.195\",\n\"vehicleType\": \"TRUCK_STANDARD\",\n\"driverId\": 355,\n\"vehicleId\": 2701,\n\"plateNumber\": \"JSU270\",\n\"sections\": [\n{\n\"id\": 1437,\n\"idx\": 0,",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_documents_forms",
    "method": "GET",
    "path": "/api/documents/forms",
    "summary": "This method returns drivers filled forms which are assigned to API key account.",
    "description": "This method returns drivers filled forms which are assigned to API key account.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "9wRVzG6TGfn4/vhysOZAQ3v7XxC5P9BL5yE99eaO/3v"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_documents_forms_reject",
    "method": "POST",
    "path": "/api/documents/forms/reject",
    "summary": "these options for the driver to retake.",
    "description": "This method allows you to reject separate form documents by provided option ids. This creates a new form with",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": "{ \n \"formId\": 0, \n \"message\": “Bad image quality” \n}",
    "responses": [],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_documents_forms_reject_documents",
    "method": "POST",
    "path": "/api/documents/forms/reject-documents",
    "summary": "a new form with these options for the driver to retake.",
    "description": "This method allows you to reject separate form documents by provided task and form/option codes. This creates",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": {
      "formId": 123,
      "options": [
        10201
      ],
      "comment": "Blurry picture"
    },
    "responses": [],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_documents_forms_reject_documents_by_codes",
    "method": "POST",
    "path": "/api/documents/forms/reject-documents-by-codes",
    "summary": "This method removes form from task.",
    "description": "This method removes form from task.",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": {
      "taskId": 10001,
      "formCode": "DOCUMENTS",
      "optionCodes": [
        "CMR"
      ],
      "comment": "Wrong document"
    },
    "responses": [],
    "quality_score": 1.0
  },
  {
    "operation_id": "delete__api_documents_task_form",
    "method": "DELETE",
    "path": "/api/documents/task-form",
    "summary": "by driverCard.",
    "description": "This method returns geozones crossings list by time range for all vehicles. Available filter results by vehicleId and",
    "category": "documents",
    "category_info": {
      "name": "documents",
      "description": "Document management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": {
      "taskId": 0,
      "formCodes": [
        "DOCUMENTS"
      ]
    },
    "responses": [],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_geo_zones_crossing",
    "method": "POST",
    "path": "/api/geo-zones/crossing",
    "summary": "This method toggle SENT integration data sending activity for vehicles.",
    "description": "This method toggle SENT integration data sending activity for vehicles.",
    "category": "locations",
    "category_info": {
      "name": "locations",
      "description": "Location and geofencing",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\": [\n{\n\"id\":111,\n\"plateNumber\":\"LTU000\",\n\"zoneTitle\":\"Crossing zone\"",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_integrations_sent_state",
    "method": "POST",
    "path": "/api/integrations/sent-state",
    "summary": "This method returns all activated panic buttons in GPS devices, that are assigned to the API key, within the last",
    "description": "Monitoring    Get panic buttons  This method returns all activated panic buttons in GPS devices, that are assigned to the API key, within the last  hour.",
    "category": "activities",
    "category_info": {
      "name": "activities",
      "description": "Activity management operations",
      "priority": "high",
      "confidence": "medium",
      "matched_by": "keywords"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\": {",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 0.7
  },
  {
    "operation_id": "get__api_latest_panic_button",
    "method": "GET",
    "path": "/api/latest-panic-button",
    "summary": "Get the alarms",
    "description": "This method returns alarms for the chosen period.",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "id": 105,
              "deviceKey": "000000000000000",
              "plateNumber": "FLH555",
              "latitude": 54.8945,
              "longitude": 23.90996,
              "issuedOn": "2022-04-01T12:05:01.636"
            },
            {
              "id": 106,
              "deviceKey": "000000000000001",
              "plateNumber": "FLH556",
              "latitude": 52.8945,
              "longitude": 24.90996,
              "issuedOn": "2022-04-01T12:10:02.523"
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_alarms",
    "method": "GET",
    "path": "/api/alarms",
    "summary": "Get the latest alarms",
    "description": "This method returns new alarms. That means if you received some alarms with the previous request these",
    "category": "general",
    "category_info": {
      "name": "general",
      "description": "General API operations",
      "priority": "medium",
      "confidence": "low",
      "matched_by": "default"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"id\":7976,\n\"type\":\"OFF_ROUTE\",\n\"time\":\"2020-11-17T12:04:46.414\",\n\"plateNumber\":\"DDD111\",\n\"openedBy\":\"Full Name\",\n\"address\":\"27 Allée du Lac, 86580 Vouneuil-sous-Biard\",\n\"latitude\":46.5682234,\n\"longitude\":0.2653675,\n\"vehicleId\":145392,\n\"vinCode\":\"W1T4565125554588\"\n\"driver\":\"driverCard\"\n}\n]\n}",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 0.8
  },
  {
    "operation_id": "get__api_latest_alarms",
    "method": "GET",
    "path": "/api/latest-alarms",
    "summary": "This method returns the doors states of the vehicles which are assigned to the API key.",
    "description": "This method returns the doors states of the vehicles which are assigned to the API key.",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "id": 7976,
              "type": "OFF_ROUTE",
              "time": "2020-11-17T12:04:46.414",
              "plateNumber": "DDD111",
              "openedBy": "Full Name",
              "address": "27 Allée du Lac, 86580 Vouneuil-sous-Biard",
              "latitude": 46.5682234,
              "longitude": 0.2653675,
              "vehicleId": 145392,
              "driver": "driverCard"
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_latest_doors_info",
    "method": "GET",
    "path": "/api/latest-doors-info",
    "summary": "assigned to API key accounts.",
    "description": "This method returns the latest information (gps position, time, speed, distance, etc.) of tracking objects which are",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "vinCode": null,
              "plateNumber": "FLH555",
              "deviceKey": "000000000000000",
              "doorsOpen": false
            },
            {
              "vinCode": null,
              "plateNumber": "FLH556",
              "deviceKey": "000000000000000",
              "doorsOpen": true
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_latest_info",
    "method": "GET",
    "path": "/api/latest-info",
    "summary": "objects which are assigned to an API key account.",
    "description": "This method retrieves latest-info for vehicle and device management.",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"time\":\"2020-01-21T09:12:54\",\n\"deviceKey\":\"000000000000000\",\n\"vehicleId\":9999,\n\"latitude\":45.4147833,\n\"longitude\":10.9198083,\n\"speed\":0,\n\"course\":0,\n\"driver\":\"EXAMPLE00000000\",\n\"secondDriver\":\"EXAMPLE20000000\",\n\"fuelLevel\":37.2,\n\"float1Liters\":14,\n\"float2Liters\":23,\n\"adblueLevelPercent\":80,\n\"engineRPM\":0,\n\"axleWeight\":0,\n\"axleWeight2\":null,\n\"grossCombinationVehicleWeight\":null,\n\"address\":null,\n\"distance\":null,\n\"engineHours\":null,\n\"externalPowerV\":14809,\n\"internalBatteryV\":9775,",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 0.65
  },
  {
    "operation_id": "get__api_latest_position",
    "method": "GET",
    "path": "/api/latest-position",
    "summary": "This method returns the latest tacho information of tracking objects which are assigned to API key account.",
    "description": "This method returns the latest tacho information of tracking objects which are assigned to API key account.",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"deviceKey\":\"000000000000000\",\n\"plateNumber\":\"EXAMPLE 000\",\n\"latitude\":54.651907,\n\"longitude\":25.306837,\n\"country\":\"lt\",\n\"address\":\"Gatvių g., Vilnius, Lithuania, 01234\",\n\"postCode\":\"01234\",\n\"odometer\":123456.789\n\"time\":\"2000-01-01T12:12:08.339\"\n},\n{\n\"deviceKey\":\"111111111111111\",\n\"plateNumber\":\"EXAMPLE 001\",\n\"latitude\":54.651907,\n\"longitude\":25.306837,\n\"country\":\"lt\",\n\"address\":\"Gatvių g., Vilnius, Lithuania, 01234\",\n\"postCode\":\"01234\",\n\"odometer\":234567.8\n\"time\":\"2000-01-01T15:15:01.400\"\n}\n]",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_latest_tacho",
    "method": "GET",
    "path": "/api/latest-tacho",
    "summary": "This method returns TripId and OrderId.",
    "description": "This method will create order if orderId is not provided or orderId as null. When orderId is provided, order with",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"time\":\"2020-01-21T09:12:54\",\n\"deviceKey\":\"000000000000000\",\n\"driver1CardPresent\":true,\n\"driver2CardPresent\":true,\n\"distance\":null,\n\"fullFirstDriver\":\"GUD0000000000000\",\n\"fullSecondDriver\":\"GUD0000000000000\",\n\"latestActivityType\":\"REST\",\n\"latestActivityDuration\":\"2020-09-28T19:40:00\",\n\"lastRestTime\":\"2020-10-04T04:40:00\",\n\"tillNextBrakeOrRest\":0,\n\"tillNextDayRest\":1,\n\"tillThisRestEnd\":1,\n\"tillNextWeekRest\":1,\n\"todayDriving\":1,\n\"thisWeekDriving\":1,\n\"longerDrivingCount\":1,\n\"shorterRestsCount\":1,\n\"beforeBreakDrivingLeft\":1,\n\"todayDrivingLeft\":1,\n\"thisWeekDrivingLeft\":1,\n\"twoWeeksDrivingLeft\":1,\n\"tillNextDriving\":1,",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_orders",
    "method": "POST",
    "path": "/api/orders",
    "summary": "Get order actions",
    "description": "This method returns 20 newest order actions.",
    "category": "orders",
    "category_info": {
      "name": "orders",
      "description": "Order and trip management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": "{ \n   \"orderInfo\":{ \n      \"orderId\": null, \n      \"orderNumber\":\"ABC123\", \n      \"clientId\":123, \n      \"clientOrderNumber\":\"abc123\", \n      \"manager\":\"manager@email.com\", \n      \"status\":\"PENDING\", \n      \"freight\":800.99, \n      \"currency\":\"EUR\", \n      \"vat\":\"VAT_NULL\", \n      \"distance\":513.5, \n      \"customerFullName\":\"Full customer name\", \n      \"customerEmail\":\"client@customer.com\", \n      \"customerPhone\":\"+37060000000\", \n      \"hazardousType\":\"B\", \n      \"paidKm\":1503.0, \n      \"emptyKm\":31.5, \n      \"loadedKm\":1225.8, \n      \"tripRoute\":\"g{~tHgejmA|L|YdG~KlDhFvEzFxAxA`F|EXVbRd\", \n      \"docsReceivedByEmail\":false, \n\n=== Страница 154 ===\n \n154 \n      \"plannerFullName\":\"Full planner name\", \n      \"plannerEmail\":\"planner@customer.com\", \n      \"plannerPhone \":\"+37060000000\", \n      \"comment\":\"Order comment\", \n      \"showCommentToDriver\":false, \n      \"link\":\" https://www.fleethand.com/en/\" \n   }, \n   \"carrierInfo\":{ \n      \"responsibleEmployee\":\"responsible.manager@email.com\", \n      \"carrierId\":null, \n      \"price\":800.99, \n      \"currency\":\"EUR\", \n      \"vehicleId\":12345, \n      \"trailerId\":null, \n      \"trailerRequired\":false \n   }, \n   \"cargo\":[ \n      { \n         \"title\":\"Bicycles\", \n         \"loadingNumber\":\"ABC/65\", \n         \"amount\":800.99, \n         \"ldm\":800.99, \n         \"tons\":8.99, \n         \"kilograms\":8990, \n         \"pallets\":800.99, \n         \"distance\":800.99, \n         \"comment\":\"Cargo comment\", \n         \"container\":\"CONT_111\" \n         \"showCommentToDriver\":false, \n         \"origin\":{ \n            \"type\":\"LOADING\", \n            \"date\":\"2023-06-11 08:10\", \n            \"participant\":\"UAB Client\", \n            \"coordinates\":\"56.9516296, 24.2060855\", \n            \"point\":\"Rīga, Latvia\", \n            \"address\":\"Zvaigznāja gatve 8, LV-1082, Rīga, Latvia\", \n            \"postalCode\":\"ANSWER_VIGNETE\", \n            \"country\":\"LV-1082\", \n            \"city\":\"Rīga\", \n            \"stopId\":\"LOAD-012345\", \n            \"eta\":\"2023-06-11 08:00\", \n            \"comment\":\"Loading comment\", \n            \"workHours\":\"8:00-18:00\" \n         }, \n         \"destination\":{ \n            \"type\":\"UNLOADING\", \n            \"date\":\"2023-06-11 16:30\", \n            \"participant\":\"AB Partner\", \n            \"coordinates\":\"54.7101600, 25.2634556\", \n            \"point\":\"Vilnius, Vilnius City Municipality\", \n\n=== Страница 155 ===\n \n155 \n            \"address\":\"Ozo g. 25, 08217 Vilnius\", \n            \"postalCode\":\"08217\", \n            \"country\":\"Lithuania\", \n            \"city\":\"Vilnius\", \n            \"stopId\":\"UNLOAD-012345\", \n            \"eta\":\"2023-06-11 16:15\", \n            \"comment\":\"Unloading comment\", \n            \"workHours\":\"8:00-18:00\" \n         }, \n         \"customs\":{ \n            \"date\":\"2023-06-11 11:15\", \n            \"coordinates\":\"56.2744961, 24.3655892\", \n            \"point\":\"Bajorėliai, Lithuania\", \n            \"address\":\" Bajorėliai, Pasvalio r. sav. Saločių sen\", \n            \"postalCode\":\"LT-39421\", \n            \"country\":\"Lithuania\", \n            \"city\":\"Bajorėliai\" \n         }, \n      } \n   ] \n} \n \n \n \n \n\n=== Страница 156 ===\n \n156",
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": {
            "orderId": 1111,
            "tripId": 111
          }
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_orders_actions",
    "method": "GET",
    "path": "/api/orders/actions",
    "summary": "Get orders status",
    "description": "This method returns order status.",
    "category": "orders",
    "category_info": {
      "name": "orders",
      "description": "Order and trip management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "lastId",
        "data_type": "integer",
        "required": true,
        "description": "Last biggest received action id. If it is",
        "location": "path"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"id\":1,\n\"taskId\":-1,\n\"vehicleId\":-1\n\"action\":\"ADDED\"\n\"orderNumber\":\"ORD#123\",\n\"createdAt\":\"2020-09-03T11:15:10.101\"\n},\n{\n\"id\":2,\n\"taskId\":-1,\n\"vehicleId\":-1\n\"action\":\"REMOVED\"\n\"orderNumber\":\"ORD#123\",\n\"createdAt\":\"2020-09-03T11:17:10.101\"\n},",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_orders_status",
    "method": "GET",
    "path": "/api/orders/status",
    "summary": "This method returns tasks assigned to orders. Max interval 92 days.",
    "description": "This method returns tasks assigned to orders. Max interval 92 days.",
    "category": "orders",
    "category_info": {
      "name": "orders",
      "description": "Order and trip management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "PENDING"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_orders",
    "method": "GET",
    "path": "/api/orders",
    "summary": "Get orders status",
    "description": "This method returns order status.",
    "category": "orders",
    "category_info": {
      "name": "orders",
      "description": "Order and trip management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "lastId",
        "data_type": "integer",
        "required": true,
        "description": "Last biggest received action id. If it is",
        "location": "path"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"id\":1,\n\"taskId\":-1,\n\"vehicleId\":-1\n\"action\":\"ADDED\"\n\"orderNumber\":\"ORD#123\",\n\"createdAt\":\"2020-09-03T11:15:10.101\"\n},\n{\n\"id\":2,\n\"taskId\":-1,\n\"vehicleId\":-1\n\"action\":\"REMOVED\"\n\"orderNumber\":\"ORD#123\",\n\"createdAt\":\"2020-09-03T11:17:10.101\"\n},",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "delete__api_orders",
    "method": "DELETE",
    "path": "/api/orders",
    "summary": "This method creates clients’ partner. Returns created partner ID.",
    "description": "This method creates clients’ partner. Returns created partner ID.",
    "category": "orders",
    "category_info": {
      "name": "orders",
      "description": "Order and trip management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "orderId",
        "data_type": "integer",
        "required": true,
        "description": "Order ID to delete.",
        "location": "path"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_partner",
    "method": "POST",
    "path": "/api/partner",
    "summary": "This method creates clients’ partner employees.",
    "description": "This method creates clients’ partner employees.",
    "category": "partners",
    "category_info": {
      "name": "partners",
      "description": "Partner management",
      "priority": "low",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": "{ \n   \"title\":\"Fleethand\", \n   \"companyCode\":\"F12345\", \n   \"vatCode\":\"V123456\", \n   \"countryIso\":\"lt\", \n   \"address\":\"Naugarduko g. 102, LT-02121 Vilnius\", \n   \"correspondenceAddress\":\"Naugarduko g. 102, LT-02121 Vilnius\", \n   \"fullName\":\"UAB Fleethand\", \n   \"phoneNumber\":\"+37060058558\", \n   \"email\":\"sales@fleethand.com\", \n   \"zoneId\":\"Europe/Vilnius\", \n   \"locale\":\"lt\", \n   \"usageLimit\":5, \n   \"heavyTrackModule\":false, \n   \"videoModule\":false, \n   \"managementModule\":false, \n   \"viewTasksModule\":true, \n   \"viewReportModule\":false, \n   \"docsConfirmed\":true, \n   \"postponement\":30, \n   \"credit\":null, \n   \"billingEmail\":\"sales@fleethand.com\", \n\n=== Страница 167 ===\n \n167 \n   \"currency\":\"EUR\", \n   \"vat\":\"VAT_19\", \n   \"skontoTerm\":1, \n   \"skontoDiscount\":0.5 \n}",
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": 1
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_partner_employee",
    "method": "POST",
    "path": "/api/partner/employee",
    "summary": "This method creates clients’ partner vehicles.",
    "description": "This method creates clients’ partner vehicles.",
    "category": "partners",
    "category_info": {
      "name": "partners",
      "description": "Partner management",
      "priority": "low",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": [
      {
        "partnerId": 1,
        "fullName": "Partner employee",
        "email": "partner.employee@fleethand.com",
        "phoneNumber": "+3700000000"
      },
      {
        "partnerId": 1,
        "fullName": "Partner employee",
        "email": "partner.partner@fleethand.com",
        "phoneNumber": "+3700000000"
      }
    ],
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": {
            "employees": [
              {
                "id": 8218,
                "email": "partner.employee@fleethand.com"
              }
            ],
            "errors": [
              "Email partner.partner@fleethand.com already in use"
            ]
          }
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_partner_vehicles",
    "method": "POST",
    "path": "/api/partner/vehicles",
    "summary": "This method deletes clients’ partner.",
    "description": "This method deletes clients’ partner.",
    "category": "partners",
    "category_info": {
      "name": "partners",
      "description": "Partner management",
      "priority": "low",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": {
      "partnerId": 1,
      "vehiclesVinCodes": [
        "VEHICLEVINCODE1",
        "VEHICLEVINCODE2"
      ],
      "from": "2020-01-01T11:17:20Z",
      "till": "2020-01-08T11:17:20Z"
    },
    "responses": [],
    "quality_score": 1.0
  },
  {
    "operation_id": "delete__api_partner",
    "method": "DELETE",
    "path": "/api/partner",
    "summary": "This method deletes clients’ partner employee.",
    "description": "This method deletes clients’ partner employee.",
    "category": "partners",
    "category_info": {
      "name": "partners",
      "description": "Partner management",
      "priority": "low",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "delete__api_partner_employee",
    "method": "DELETE",
    "path": "/api/partner/employee",
    "summary": "This method deletes clients’ partner vehicle.",
    "description": "This method deletes clients’ partner vehicle.",
    "category": "partners",
    "category_info": {
      "name": "partners",
      "description": "Partner management",
      "priority": "low",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "delete__api_partner_vehicles",
    "method": "DELETE",
    "path": "/api/partner/vehicles",
    "summary": "This method returns clients’ all partners vehicles.",
    "description": "This method returns clients’ all partners vehicles.",
    "category": "partners",
    "category_info": {
      "name": "partners",
      "description": "Partner management",
      "priority": "low",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_partner_vehicles",
    "method": "GET",
    "path": "/api/partner/vehicles",
    "summary": "This method returns payment cards.",
    "description": "This method returns payment cards.",
    "category": "partners",
    "category_info": {
      "name": "partners",
      "description": "Partner management",
      "priority": "low",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "partnerId",
        "data_type": "integer",
        "required": false,
        "description": "If provided only specified client vehicles will",
        "location": "path"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":{\n\"1\":[\n{\n\"id\":1351,\n\"vinCode\":\"VINCODE1\",\n\"partnerTitle\":\"Partner1\",\n\"activeFrom\":\"2019-02-04T22:00:00\",\n\"activeTill\":\"2019-02-05T21:59:00\"\n}\n],\n\"2\":[\n{\n\"id\":2750,\n\"vinCode\":\"VINCODE2\",\n\"partnerTitle\":\"Partner2\",\n\"activeFrom\":\"2019-07-29T21:00:00\",",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_payment_card_vehicle",
    "method": "GET",
    "path": "/api/payment-card/vehicle",
    "summary": "This method creates payment card.",
    "description": "This method creates payment card.",
    "category": "payments",
    "category_info": {
      "name": "payments",
      "description": "Payment management",
      "priority": "low",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "id": 111,
              "vehicleId": 12345,
              "title": "payment card",
              "cardNumber": "ABCDEFG",
              "expiryDate": "20250828",
              "type": "SHELL"
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_payment_card_vehicle",
    "method": "POST",
    "path": "/api/payment-card/vehicle",
    "summary": "This method updates payment card.",
    "description": "This method updates payment card.",
    "category": "payments",
    "category_info": {
      "name": "payments",
      "description": "Payment management",
      "priority": "low",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": {
      "vehicleId": 12345,
      "title": "payment card",
      "cardNumber": "ABCDEFG",
      "expiryDate": "20250828",
      "type": "SHELL"
    },
    "responses": [],
    "quality_score": 1.0
  },
  {
    "operation_id": "put__api_payment_card_vehicle",
    "method": "PUT",
    "path": "/api/payment-card/vehicle",
    "summary": "This method deletes payment card.",
    "description": "This method deletes payment card.",
    "category": "payments",
    "category_info": {
      "name": "payments",
      "description": "Payment management",
      "priority": "low",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": {
      "id": 111,
      "vehicleId": 12345,
      "title": "payment card",
      "cardNumber": "ABCDEFG",
      "expiryDate": "20250828",
      "type": "SHELL"
    },
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "delete__api_payment_card_vehicle",
    "method": "DELETE",
    "path": "/api/payment-card/vehicle",
    "summary": "This method deletes POI by id.",
    "description": "This method deletes POI by id.",
    "category": "payments",
    "category_info": {
      "name": "payments",
      "description": "Payment management",
      "priority": "low",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "cardId",
        "data_type": "integer",
        "required": true,
        "description": "Payment card ID.",
        "location": "path"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 0.65
  },
  {
    "operation_id": "delete__api_poi_poiId",
    "method": "DELETE",
    "path": "/api/poi/poiId",
    "summary": "This method deletes POI group by id.",
    "description": "This method deletes POI group by id.",
    "category": "locations",
    "category_info": {
      "name": "locations",
      "description": "Location and geofencing",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "delete__api_poi_group_poiGroupId",
    "method": "DELETE",
    "path": "/api/poi-group/poiGroupId",
    "summary": "This method inserts or updates instance of POI.",
    "description": "This method inserts or updates instance of POI.",
    "category": "locations",
    "category_info": {
      "name": "locations",
      "description": "Location and geofencing",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_pois",
    "method": "POST",
    "path": "/api/pois",
    "summary": "This method inserts or updates instance of POI group.",
    "description": "This method inserts or updates instance of POI group.",
    "category": "locations",
    "category_info": {
      "name": "locations",
      "description": "Location and geofencing",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": {
      "id": null,
      "poiGroupId": 100,
      "name": "Name",
      "quantity": 1,
      "address": "Minsko pl. 3, Vilnius, LT-02121, Vilniaus m. sav.",
      "postCode": "02121",
      "city": "Vilnius",
      "country": "lt",
      "coordinates": "54.6519300, 25.3058750",
      "comment": "Comment",
      "emails": "email@email.com",
      "favorite": false,
      "stationPrice": 1.5,
      "fuelDiscount": 10,
      "stationGroup": "LOW"
    },
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "poiId": "1"
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_poi_group",
    "method": "POST",
    "path": "/api/poi-group",
    "summary": "This method returns a driving summary by day and country for the selected vehicle and period of time (maximum",
    "description": "Reports    Get day-country driving summary  This method returns a driving summary by day and country for the selected vehicle and period of time (maximum  interval is 3 months).",
    "category": "locations",
    "category_info": {
      "name": "locations",
      "description": "Location and geofencing",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": {
      "id": null,
      "name": "Postman",
      "important": false,
      "color": "#000000",
      "privateOwner": true,
      "type": "FERRYBOAT",
      "department": 100,
      "secureOwner": true
    },
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "poiGroupId": "10"
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 0.8
  },
  {
    "operation_id": "get__api_report_day_country",
    "method": "GET",
    "path": "/api/report/day-country",
    "summary": "This method returns a driving period summary by vehicle for selected grouping type and period.",
    "description": "NOTE: From API v2, the maximum days period for this call is 90 days.",
    "category": "reports",
    "category_info": {
      "name": "reports",
      "description": "Reporting and analytics",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"vehicleId\":12345,\n\"date\":\"2022-06-01\",\n\"country\":\"fr\",",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 0.8
  },
  {
    "operation_id": "get__api_report_period_summary",
    "method": "GET",
    "path": "/api/report/period-summary",
    "summary": "This method returns approximate tolls by vehicle route in specified period.",
    "description": "NOTE: The maximum days period for this call is 14 days.",
    "category": "reports",
    "category_info": {
      "name": "reports",
      "description": "Reporting and analytics",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":{\n\"deviceKey\":\"123456789\",\n\"entries\":[\n{\n\"group\":\"de\",\n\"gpsMoved\":41.38,\n\"gpsStopped\":191.29,",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 0.8
  },
  {
    "operation_id": "get__api_report_period_tolls",
    "method": "GET",
    "path": "/api/report/period-tolls",
    "summary": "This method returns information of drivers’ activities for a provided period of time.",
    "description": "This method returns information of drivers’ activities for a provided period of time.",
    "category": "reports",
    "category_info": {
      "name": "reports",
      "description": "Reporting and analytics",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":{\n\"vehicleId\": 123456,\n\"vinCode\": \"vinCode\",\n\"totalDistance\": 2951.29,\n\"tolls\": {",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_tacho_driver_activities",
    "method": "GET",
    "path": "/api/tacho/driver-activities",
    "summary": "This method returns current information of drivers’ activities by providing the device key of a telemetry device.",
    "description": "This method returns current information of drivers’ activities by providing the device key of a telemetry device.",
    "category": "tacho",
    "category_info": {
      "name": "tacho",
      "description": "Tachograph operations",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "till",
        "data_type": "string",
        "required": true,
        "description": "Time till which period information is taken.",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_tacho_current",
    "method": "GET",
    "path": "/api/tacho/current",
    "summary": "This method returns tachograph information for a period of time.",
    "description": "This method returns tachograph information for a period of time.",
    "category": "tacho",
    "category_info": {
      "name": "tacho",
      "description": "Tachograph operations",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"driverCard\":\"V100000075665000\",\n\"latestActivityType\":\"DRIVE\",\n\"latestActivityStart\":\"2022-09-13T14:58:00\",\n\"latestActivityDuration\":\"2460\",\n\"drivingPeriodStarted\":\"2022-09-13T12:47:00\",\n\"drivingBeforeBreak\":3060,\n\"drivingLeftTillBreak\":6576,",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_period_tacho",
    "method": "GET",
    "path": "/api/period-tacho",
    "summary": "This method returns a list of violated driving/resting rules of a driver for a period of time.",
    "description": "This method returns a list of violated driving/resting rules of a driver for a period of time.",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "medium",
      "matched_by": "keywords"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "driverCard",
        "data_type": "string",
        "required": true,
        "description": "Parameter by which information is taken.",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"tachoChartItems\":[\n{\n\"type\":\"RESTING\",",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 0.9000000000000001
  },
  {
    "operation_id": "get__api_tacho_driver_faults",
    "method": "GET",
    "path": "/api/tacho/driver-faults",
    "summary": "will be used further to get task data.",
    "description": "This method is used to append a task to the vehicle’s task list. Method returns Fleethand system task ID, which",
    "category": "tacho",
    "category_info": {
      "name": "tacho",
      "description": "Tachograph operations",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":{\n\"driver\":\"V100000112119000\",\n\"dayDrivingExceeded\":{",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_tasks",
    "method": "POST",
    "path": "/api/tasks",
    "summary": "ID, which will be used further to get task data.",
    "description": "This method is used to append a task to the vehicle’s task list with a file. Method returns Fleethand system task",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": "{ \n   \"vehicleId\":10617, \n   \"lat\":54.651837, \n   \"lng\":25.305864, \n   \"waypoints\":\"51.23759,17.4935223|53.1962775,23.1556143|54.6820828,23.5816274\", \n   \"locationName\":\"Minsko pl. 3\", \n   \"locationAddress\":\"Minsko pl. 3, Vilnius 02121, Lithuania\", \n   \"comment\":\"2\", \n   \"type\":\"LOADING\", \n   \"dateTime\":\"2020-11-03 12:30\", \n   \"sendMessage\":true, \n   \"polyline\":\"g{~tHgejmA|L|YdG~KlDhFvEzFxAxA`F|EXVbRd\", \n   \"duration\":15617, \n   \"distance\":133617, \n   \"externalPoiId\":\"12500\", \n   \"contactlessType\":\"CIRCLE_K\", \n   \"html\":\"<span>some text</span>\", \n   \"timeFrom\":\"2025-11-03T12:30\", \n   \"timeTill\":\"2025-11-04T12:30\", \n   \"countries\":[ \n      { \n\n=== Страница 218 ===\n \n218 \n         \"distance\":133617, \n         \"country\":\"LTU\" \n      } \n   ], \n   \"tollsEntry\":{ \n      \"countryTolls\":[ \n         { \n            \"country\":\"LTU\", \n            \"amountInTargetCurrency\":12.45 \n         } \n      ], \n      \"totalCost\":12.45 \n   }, \n   \"taskDurationMinutes\":120 \n}",
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": 1
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_tasks_file",
    "method": "POST",
    "path": "/api/tasks/file",
    "summary": "This method assigns trips to the selected tasks.",
    "description": "This method assigns trips to the selected tasks.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": "Key \nValue \nfile filedata \nform { \n   \"vehicleId\":10617, \n   \"lat\":54.651837, \n   \"lng\":25.305864, \n   \"waypoints\":\"51.23759,17.4935223|53.1962775,23.1556143|54.6820828,23.5816274\", \n   \"locationName\":\"Minsko pl. 3\", \n   \"locationAddress\":\"Minsko pl. 3, Vilnius 02121, Lithuania\", \n   \"comment\":\"2\", \n   \"type\":\"LOADING\", \n   \"dateTime\":\"2020-11-03 12:30\", \n   \"sendMessage\":true, \n   \"polyline\":\"g{~tHgejmA|L|YdG~KlDhFvEzFxAxA`F|EXVbRd\", \n   \"duration\":15617, \n   \"distance\":133617, \n   \"externalPoiId\":\"12500\", \n   \"contactlessType\":\"CIRCLE_K\", \n   \"html\":\"<span>some text</span>\", \n   \"timeFrom\":\"2025-11-03T12:30\", \n   \"timeTill\":\"2025-11-04T12:30\", \n   \"countries\":[ \n      { \n\n=== Страница 222 ===\n \n222 \n         \"distance\":133617, \n         \"country\":\"LTU\" \n      } \n   ], \n   \"tollsEntry\":{ \n      \"countryTolls\":[ \n         { \n            \"country\":\"LTU\", \n            \"amountInTargetCurrency\":12.45 \n         } \n      ], \n      \"totalCost\":12.45 \n   }, \n   \"taskDurationMinutes\":120 \n}",
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": 1
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_tasks_assign_trips",
    "method": "POST",
    "path": "/api/tasks/assign-trips",
    "summary": "This method confirms tasks which are assigned to API key / taskId / vehicleId.",
    "description": "This method confirms tasks which are assigned to API key / taskId / vehicleId.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": [
      {
        "taskId": 1,
        "tripId": 2023,
        "internalId": 19527
      },
      {
        "taskId": 2,
        "tripId": 2024,
        "internalId": 19528
      }
    ],
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_tasks_confirm_task",
    "method": "POST",
    "path": "/api/tasks/confirm-task",
    "summary": "This method confirms all tasks of the vehicle which are assigned to the API key.",
    "description": "This method confirms all tasks of the vehicle which are assigned to the API key.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "copy",
        "data_type": "boolean",
        "required": false,
        "description": "Add additional task information into the message",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_tasks_confirm_all",
    "method": "POST",
    "path": "/api/tasks/confirm-all",
    "summary": "This method deletes all tasks of the vehicle which are assigned to the API key.",
    "description": "This method deletes all tasks of the vehicle which are assigned to the API key.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "vehicleId",
        "data_type": "integer",
        "required": true,
        "description": "Vehicles id which executing task.",
        "location": "path"
      },
      {
        "name": "copy",
        "data_type": "boolean",
        "required": false,
        "description": "Add additional task information into the message",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_tasks_delete_all",
    "method": "POST",
    "path": "/api/tasks/delete-all",
    "summary": "This method is used to delete a task.",
    "description": "This method is used to delete a task.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "vehicleId",
        "data_type": "integer",
        "required": true,
        "description": "Vehicle’s id which executing task.",
        "location": "path"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "delete__api_tasks",
    "method": "DELETE",
    "path": "/api/tasks",
    "summary": "This method deletes tasks by trip id.",
    "description": "This method deletes tasks by trip id.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "delete__api_tasks_trip",
    "method": "DELETE",
    "path": "/api/tasks/trip",
    "summary": "This method returns a list of available additional task options.",
    "description": "This method returns a list of available additional task options.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "tripId",
        "data_type": "integer",
        "required": true,
        "description": "External trip id to delete.",
        "location": "path"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_tasks_additional_info",
    "method": "GET",
    "path": "/api/tasks/additional-info",
    "summary": "This method returns completed vehicle’s tasks for a selected period of time.",
    "description": "NOTE: The maximum days period for this call is 30 days.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "Id": -1,
              "option": "TEMPERATURE",
              "type": "LONG",
              "enName": "Freezer temperature",
              "deName": "Gefriertemperatur",
              "plName": "Temperatura zamrażarki",
              "ruName": "Температура морозильной камеры",
              "ltName": "Šaldiklio temperatūra",
              "frName": "Température du congélateur",
              "lvName": "Saldētavas temperatūra",
              "czName": "Teplota v mrazáku",
              "esName": "Temperatura del congelador",
              "itName": "Temperatura del congelatore",
              "roName": "Temperatura congelatorului"
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 0.8
  },
  {
    "operation_id": "get__api_tasks_done",
    "method": "GET",
    "path": "/api/tasks/done",
    "summary": "This method returns ETA of the provided vehicle.",
    "description": "This method returns ETA of the provided vehicle.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "vehicleId",
        "data_type": "integer",
        "required": true,
        "description": "Fleethand vehicle id.",
        "location": "path"
      },
      {
        "name": "from",
        "data_type": "string",
        "required": true,
        "description": "Time from which period information is",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n[\n{\n\"externalId\":2915,\n\"type\":\"LOADING\",\n\"address\":\"27 Allée du Lac, 86580 Vouneuil-sous-Biard\",\n\"latitude\":46.56822349999999,\n\"longitude\":0.2653675,",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_tasks_eta",
    "method": "GET",
    "path": "/api/tasks/eta",
    "summary": "This method returns external orders that are generated from tasks and which are assigned to API key.",
    "description": "NOTE: The maximum days period for this call is 30 days.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "vehicleId",
        "data_type": "integer",
        "required": true,
        "description": "Vehicles id which executing task.",
        "location": "path"
      },
      {
        "name": "duration",
        "data_type": "integer",
        "required": true,
        "description": "Duration to the destination (seconds).",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "2022-02-28 12:59"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 0.8
  },
  {
    "operation_id": "get__api_external_tasks_external_orders",
    "method": "GET",
    "path": "/api/external-tasks/external-orders",
    "summary": "This method returns task information.",
    "description": "This method returns task information.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "from",
        "data_type": "string",
        "required": true,
        "description": "Time from which period information is taken.",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "taskId": 9072,
              "partnerId": 1650,
              "distance": 1022,
              "plateNumber": "FLH233",
              "orderNumber": "KJT123456",
              "createdAt": "2023-02-09T09:26:11.146623"
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_tasks_information",
    "method": "GET",
    "path": "/api/tasks/information",
    "summary": "This method returns a vehicle task queue. All not DONE tasks.",
    "description": "This method returns a vehicle task queue. All not DONE tasks.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"externalId\":2915,\n\"idx\":0,\n\"vehicleId\": 22569,\n\"orderNumber\":\"ORDER123\"\n\"type\":\"LOADING\",\n\"status\":\"DONE\",\n\"address\":\"27 Allée du Lac, 86580 Vouneuil-sous-Biard\",\n\"latitude\":46.56822349999999,\n\"longitude\":0.2653675,\n\"poiId\":17699551,\n\"plannedRoute\":\"c~s`H~wnB`@`E_Iz@eA\",\n\"plannedDistance\":145392,\n\"plannedDuration\":12367,\n\"eta\":\"2020-11-17T12:04:46.414\",",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_tasks_queue",
    "method": "GET",
    "path": "/api/tasks/queue",
    "summary": "Get task status intervals",
    "description": "This method returns task statuses for a selected period of time.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "id": 2810,
              "idx": 0,
              "orderNumber": "ORDER123",
              "date": null,
              "type": "UNLOADING",
              "status": "UNCONFIRMED",
              "searchText": "Berliner Str. 22, 60311 Frankfurt am Main, Germany",
              "address": "60311 Frankfurt am Main, Germany",
              "lat": 50.1120958,
              "lng": 8.683402899999999,
              "poiId": 17699551,
              "comments": null,
              "polyline": "klb~Ge{kn@|DvF@t@n@PJp@ZlBh@f@VrAjAdBrBh@j@CR@j",
              "distance": 411246,
              "tripId": 46,
              "internalId": 64,
              "additionalInfo": [
                {
                  "id": -6,
                  "value": "50",
                  "option": "ADBLUE_AMOUNT"
                }
              ],
              "eta": "2024-09-17 20:39"
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_tasks_status_intervals",
    "method": "GET",
    "path": "/api/tasks/status-intervals",
    "summary": "previous request these task statuses won't be in the next request unless they have been updated.",
    "description": "This method returns new or updated task statuses. That means if you received some task status with the",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "till",
        "data_type": "string",
        "required": true,
        "description": "Time till which period information is taken.",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "taskId": 168968,
              "statuses": [
                {
                  "status": "EXECUTING",
                  "Latitude": "54.89522055",
                  "longitude": "23.98839632",
                  "driverId": 8614,
                  "taskId": 168968,
                  "odometer": 1050205,
                  "from": "2023-06-23T11:15:10.101",
                  "till": "2023-06-23T11:17:10.101",
                  "stopId": "LOAD-12345"
                }
              ]
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_tasks_status",
    "method": "GET",
    "path": "/api/tasks/status",
    "summary": "previous request these task statuses won't be in the next request unless they have been updated.",
    "description": "This method returns new or updated task statuses. That means if you received some task status with the",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "till",
        "data_type": "string",
        "required": true,
        "description": "Time till which period information is taken.",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "taskId": 168968,
              "statuses": [
                {
                  "status": "EXECUTING",
                  "Latitude": "54.89522055",
                  "longitude": "23.98839632",
                  "driverId": 8614,
                  "taskId": 168968,
                  "odometer": 1050205,
                  "from": "2023-06-23T11:15:10.101",
                  "till": "2023-06-23T11:17:10.101",
                  "stopId": "LOAD-12345"
                }
              ]
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_tasks_trip",
    "method": "GET",
    "path": "/api/tasks/trip",
    "summary": "This method returns order trips statistics. Request period max duration 30 days.",
    "description": "This method returns order trips statistics. Request period max duration 30 days.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "tripId",
        "data_type": "integer",
        "required": true,
        "description": "Trip id.",
        "location": "path"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"externalId\":2915,\n\"idx\": 0,\n\"vehicleId\": 22569,\n\"type\":\"LOADING\",\n\"status\":\"DONE\",\n\"address\":\"27 Allée du Lac, 86580 Vouneuil-sous-Biard\",\n\"latitude\":46.56822349999999,\n\"longitude\":0.2653675,\n\"poiId\": 1755991,\n\"stopId\": \"LOAD-12345\",\n\"plannedRoute\":\"c~s`H~wnB`@`E_Iz@eA\",\n\"plannedDistance\":145392,\n\"plannedDuration\":12367,\n\"eta\":\"2020-11-17T12:04:46.414\",\n\"actualRoute\":\"a~s`HbxnBtPuWpAxAn@xD\",\n\"actualDistance\":590,",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_trips_statistics",
    "method": "GET",
    "path": "/api/trips/statistics",
    "summary": "This method marks tasks as done which are assigned to API key / taskId / vehicleId.",
    "description": "This method marks tasks as done which are assigned to API key / taskId / vehicleId.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "keywords"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "from",
        "data_type": "string",
        "required": true,
        "description": "Time from which period",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\": 200,\n\"payload\": [\n{\n\"tripNumber\": 007,\n\"vehicle\": \"FleetHand-Vehicle\",\n\"startedAt\": \"2023-08-07T18:22:00\",\n\"doneAt\": \"2023-08-21T08:07:33.476\",\n\"fuelLevelAtEnd\": 580.561,\n\"fuelConsumed\": 980.670,\n\"fuelFilled\": 1562.639,\n\"odometerAtStart\": 269382.295,\n\"odometerAtEnd\": 273416.505,\n\"plannedDistance\": 2261593,\n\"actualDistance\": 1112215,",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "put__api_tasks_mark_as_done",
    "method": "PUT",
    "path": "/api/tasks/mark-as-done",
    "summary": "This method marks tasks as executing which are assigned to API key / taskId / vehicleId.",
    "description": "This method marks tasks as executing which are assigned to API key / taskId / vehicleId.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "email",
        "data_type": "string",
        "required": false,
        "description": "Email that is registered in fleethand and assigned",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "put__api_tasks_mark_as_executing",
    "method": "PUT",
    "path": "/api/tasks/mark-as-executing",
    "summary": "This method is used to update a task. Method returns Fleethand system task ID, which will be used further to get",
    "description": "This method is used to update a task. Method returns Fleethand system task ID, which will be used further to get",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "email",
        "data_type": "string",
        "required": false,
        "description": "Email that is registered in fleethand and assigned",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "put__api_tasks",
    "method": "PUT",
    "path": "/api/tasks",
    "summary": "This method marks tasks as executing which are assigned to API key / taskId / vehicleId.",
    "description": "This method marks tasks as executing which are assigned to API key / taskId / vehicleId.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "email",
        "data_type": "string",
        "required": false,
        "description": "Email that is registered in fleethand and assigned",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_tasks_update_file",
    "method": "POST",
    "path": "/api/tasks/update/file",
    "summary": "system then task will be updated. If taskId is not sent at all but it was created earlier for this trip then it will be",
    "description": "If smartUpsert is set to false then all the tasks with provided tripId will be deleted and new tasks will be created.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": "Key \nValue \nFile filedata \nText { \n   \"taskId\":2859, \n   \"vehicleId\":10617, \n   \"lat\":54.651837, \n   \"lng\":25.305864, \n   \"waypoints\":\"51.23759,17.4935223|53.1962775,23.1556143|54.6820828,23.5816274\", \n   \"locationName\":\"Minsko pl. 3\", \n   \"locationAddress\":\"Minsko pl. 3, Vilnius 02121, Lithuania\", \n   \"comment\":\"2\", \n   \"type\":\"LOADING\", \n   \"dateTime\":\"2020-11-03 12:30\", \n   \"sendMessage\":true, \n   \"polyline\":\"g{~tHgejmA|L|YdG~KlDhFvEzFxAxA`F|EXVbRd\", \n   \"duration\":15617, \n   \"distance\":133617, \n   \"externalPoiId\":\"12500\", \n   \"contactlessType\":\"CIRCLE_K\", \n      \"html\":\"<span>some text</span>\", \n   \"timeFrom\":\"2025-11-03T12:30\", \n   \"timeTill\":\"2025-11-04T12:30\", \n   \"countries\":[ \n\n=== Страница 268 ===\n \n268 \n      { \n         \"distance\":133617, \n         \"country\":\"LTU\" \n      } \n   ], \n   \"tollsEntry\":{ \n      \"countryTolls\":[ \n         { \n            \"country\":\"LTU\", \n            \"amountInTargetCurrency\":12.45 \n         } \n      ], \n      \"totalCost\":12.4 \n   } \n}",
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": 1
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 0.8
  },
  {
    "operation_id": "post__api_tasks_trip",
    "method": "POST",
    "path": "/api/tasks/trip",
    "summary": "This method returns driver activities for a selected period of time.",
    "description": "NOTE: From API v2, the maximum days period for this call is 1 year.",
    "category": "tasks",
    "category_info": {
      "name": "tasks",
      "description": "Task management",
      "priority": "medium",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": "{ \n   \"tripId\":0, \n   \"vehicleId\":0, \n   \"email\":\"fleethand@fleethand.com\", \n   \"tripNumber\":\"string\", \n   \"orderNumber\":\"string\", \n   \"tripHeader\":\"string\", \n   \"smartUpsert\":false, \n   \"executionDateTime\":2023-05-01T11:17:20Z, \n   \"tasks\":[ \n      { \n         \"idx\":0, \n         \"internalId\":0, \n         \"type\":\"LOADING\", \n         \"lat\":25.236566, \n         \"lng\":53.165161, \n         \"waypoints\":\"25.236566,53.165161|25.758698,53.156458\", \n         \"locationName\":\"Location name\", \n         \"locationAddress\":\"Location address\", \n\n=== Страница 272 ===\n \n272 \n         \"referenceNo\":\"Reference number\", \n         \"dateTime\":\"2020-10-22 00:00\", \n         \"sendMessage\":true, \n         \"comment\":\"Comment\", \n         \"polyline\":\"g{~tHgejmA|L|YdG~KlDhFvEzFxAxA`F|EXVbRdQd@b@zAvA`@^bk@vh@pGz\", \n         \"duration\":15617, \n         \"distance\":133617, \n         \"externalPoiId\":\"12500\", \n         \"contactlessType\":\"CIRCLE_K\", \n         \"html\":\"<span>some text</span>\", \n         \"timeFrom\":\"2025-11-03T12:30\", \n         \"timeTill\":\"2025-11-04T12:30\", \n         \"additionalInfo\":[ \n            { \n               \"id\":-1, \n               \"value\":\"-15\" \n            }, \n            { \n               \"id\":-9, \n               \"value\":\"START_STOP\" \n            } \n         ], \n         \"countries\":[ \n            { \n               \"distance\":133617, \n               \"country\":\"LTU\" \n            } \n         ], \n         \"tollsEntry\":{ \n            \"countryTolls\":[ \n               { \n                  \"country\":\"LTU\", \n                  \"amountInTargetCurrency\":12.45 \n               } \n            ], \n            \"totalCost\":12.45 \n         }, \n         \"confirmed\": false, \n         \"defaultWaypoints\": true, \n         \"waypointCoefficient\": 3.0, \n         \"excludeCountries\": [\"RUS\",\"CHE\"], \n         \"avoids\": [\"TOLLS\",\"FERRIES\"], \n         \"origin\":{ \n            \"address\": \"Train station ABC, Vilnius\", \n            \"lat\":54.670298, \n            \"lng\":25.284262 \n         }, \n         \"vehicleType\":\"TRUCK\", \n         \"vehicleHeight\":3.9, \n         \"vehicleWidth\":2.0, \n\n=== Страница 273 ===\n \n273 \n         \"vehicleWeight\":40000, \n         \"axleWeight\":11500, \n         \"emissionType\":\"EURO6\", \n         \"strategy\":\"FASTEST\", \n         \"traffic\":true, \n         \"taskDurationMinutes\":120, \n         \"forms\":{ \n           \"DONE\": { \n             \"formNameEn\": \"Form\", \n             \"formNameLt\": \"Forma\", \n             \"formNameRu\": \"Форма\", \n             \"formNameDe\": \"Formular\", \n             \"formNamePl\": \"Formularz\", \n             \"code\": \"DOCUMENTS\", \n             \"sections\": [ \n               { \n                 \"sectionNameEn\": \"Section\", \n                 \"sectionNameLt\": \"Sekcija\", \n                 \"sectionNameRu\": \"Раздел\", \n                 \"sectionNameDe\": \"Abschnitt\", \n                 \"sectionNamePl\": \"Sekcja\", \n                 \"options\": [ \n                   { \n                     \"type\": \"DOCUMENT\", \n                     \"code\": \"CMR\", \n                     \"optionNameEn\": \"Amazon request\", \n                     \"optionNameLt\": \"Skaičių parinktis\", \n                     \"optionNameRu\": \"CMR (VIlnius - Kaunas)\", \n                     \"optionNameDe\": \"Zahlenoption\", \n                    \"optionNamePl\": \"Opcja numeryczna\", \n                     \"mandatory\": true \n                   }, \n                   { \n                     \"type\": \"TEXTFIELD\", \n                     \"code\": \"DELIVERY_NOTE\", \n                     \"optionNameEn\": \"Text option\", \n                     \"optionNameLt\": \"Teksto parinktis\", \n                     \"optionNameRu\": \"Вариант текста\", \n                     \"optionNameDe\": \"Textoption\", \n                     \"optionNamePl\": \"Opcja tekstu\", \n                     \"mandatory\": false \n                   }, \n                     { \n                       \"type\": \"SELECTION\", \n                       \"code\": \"LOCK_WORKS\", \n                       \"optionNameLt\": \"Ar veikia spyna?\", \n                       \"mandatory\": true, \n                       \"choices\": [ \n                         { \n                           \"code\": \"YES\", \n\n=== Страница 274 ===\n \n274 \n                           \"choiceNameLt\": \"Taip\", \n                           \"choiceInfoLt\": \"Visuomet rupinkites saugumu!\", \n                           \"options\": [] \n                         }, \n                         { \n                           \"code\": \"NO\", \n                           \"choiceNameLT\": \"Ne\", \n                           \"options\": [ \n                             { \n                               \"type\": \"TEXTFIELD\", \n                               \"code\": \"FREE_TEST_ANSWER\", \n                               \"optionNameLt\": \"Aprašykite kas neveikia\", \n                               \"mandatory\": true, \n                               \"min\": 10, \n                               \"max\": 256 \n                             }, \n                             { \n                               \"type\": \"DATE_PICKER\", \n                               \"code\": \"LOCK_DATE\", \n                               \"optionNameLt\": \"Kada sugedo?\", \n                               \"mandatory\": true, \n                               \"timeValidation\": \"PAST_NOW\" \n                             } \n                           ] \n                         } \n                       ] \n                     } \n                   ] \n                 } \n               ] \n           }, \n           \"EXECUTING\": { \n             \"formNameLt\": \"Forma 2\", \n             \"formNamePl\": \"Formularz 2\", \n             \"code\": \"STARTUP_FORM\", \n             \"sections\": [ \n               { \n                 \"sectionNameLt\": \"Sekcija 2\", \n                 \"sectionNamePl\": \"Sekcja 2\", \n                 \"options\": [ \n                   { \n                     \"type\": \"CHECKBOX\", \n                     \"code\": \"APPROVAL\", \n                     \"optionNameLt\": \"Žymėjimo laukelio parinktis\", \n                     \"optionNamePl\": \"Opcja pola wyboru\", \n                     \"mandatory\": true \n                   } \n                 ] \n               } \n             ]   \n\n=== Страница 275 ===\n \n275 \n           } \n         } \n      } \n   ] \n}",
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"internalId\":0,\n\"externalId\":0,\n\"message\":\"Task already marked as DONE and cannot be updated\"\n},\n{",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 0.8
  },
  {
    "operation_id": "get__api_driver_driver_hours",
    "method": "GET",
    "path": "/api/driver/driver-hours",
    "summary": "This method returns time spent in countries for the requested period by the driver.",
    "description": "NOTE: From API v2, the maximum days period for this call is 90 days.",
    "category": "drivers",
    "category_info": {
      "name": "drivers",
      "description": "Driver management operations",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "driverName": "Driver name",
              "driverCard": "V100000111111000",
              "tableNumber": "Table number",
              "dayHoursGross": {
                "2021-01-01": 0,
                "2021-01-02": 600,
                "2021-01-03": 900,
                "2021-01-04": 250
              },
              "dayHoursAtNight": {
                "2021-01-01": 3600,
                "2021-01-02": 3600,
                "2021-01-03": 3600,
                "2021-01-04": 3600
              },
              "days": 4,
              "grossHours": 3600,
              "hoursAtNight": 3600,
              "vehiclesByDay": {
                "2021-01-01": "FLH123",
                "2021-01-02": "FLH123",
                "2021-01-03": "FLH123",
                "2021-01-04": "FLH123"
              }
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 0.8
  },
  {
    "operation_id": "get__api_country_change_presence",
    "method": "GET",
    "path": "/api/country-change/presence",
    "summary": "This method returns track information for a period of time.",
    "description": "This method returns track information for a period of time.",
    "category": "forms",
    "category_info": {
      "name": "forms",
      "description": "Forms and questionnaires",
      "priority": "low",
      "confidence": "medium",
      "matched_by": "keywords"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "from",
        "data_type": "string",
        "required": true,
        "description": "Time from which period information is",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"deviceKey\":\"352600000000000\",\n\"driver\":\"UAD000000AABB000\",",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 0.9000000000000001
  },
  {
    "operation_id": "get__api_period_info",
    "method": "GET",
    "path": "/api/period-info",
    "summary": "This method deactivates the vehicle and unassigns all its attached devices.",
    "description": "This method deactivates the vehicle and unassigns all its attached devices.",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "from",
        "data_type": "string",
        "required": true,
        "description": "Time from which period information is taken.",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "put__api_vehicle_deactivate",
    "method": "PUT",
    "path": "/api/vehicle/deactivate",
    "summary": "This method returns information about client vehicles.",
    "description": "This method returns information about client vehicles.",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "vinCode",
        "data_type": "string",
        "required": true,
        "description": "Vehicle’s VIN code.",
        "location": "path"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_vehicle",
    "method": "GET",
    "path": "/api/vehicle",
    "summary": "This method updates information about the vehicle.",
    "description": "This method updates information about the vehicle.",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\":[\n{\n\"licensePlateNumber\":\"LICENSEPLATE 123\",\n\"plateNumber\":\"PLATE 123\",\n\"imei\":\"00000000000000\",\n\"model\":\"FMB640\",\n\"simNumber\":\"37000000000\",\n\"vinCode\":\"XXXXXXXXXXXXXXXXX\",\n\"type\":\"TRUCK_MEGA\",\n\"ownerName\":\"UAB FLEETHAND\",\n\"vehicleId\":14653,\n\"fakeVehicle\":true,\n\"tabImei\":null,\n\"tabSimNo\":null,\n\"brand\":null,\n\"fuelTankCapacity\":null,\n\"adBlueCapacity\":null,\n\"payerName\":\"UAB FLEETHAND\"\n},\n{\n\"licensePlateNumber\": \"LICENSEPLATE 345\",\n\"plateNumber\": \"PLATE 123\",\n\"imei\": \"00000000000001\",\n\"model\": \"FMB640\",\n\"simNumber\": \"37000000000\",\n\"vinCode\": \"XXXXXXXXXXXXXXXXX\",\n\"type\": \"TRUCK_MEGA,\n\"ownerName\": \"UAB FLEETHAND\",\n\"vehicleId\":14652,\n\"fakeVehicle\":false,\n\"tabImei\":\"bb34f67c6490cb41\",\n\"tabSimNo\":\"651651651651\",\n\"brand\":\"Renault\",\n\"fuelTankCapacity\": 1500,\n\"adBlueCapacity\":200,\n\"payerName\":\"UAB OTHER FLEETHAND\"\n}\n]",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "put__api_vehicle_update_vehicle_info",
    "method": "PUT",
    "path": "/api/vehicle/update-vehicle-info",
    "summary": "This method updates vehicle registration information.",
    "description": "This method updates vehicle registration information.",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": "Parameter \nData type \nRequired \nDescription \nvinCode \nString \nyes \nVehicle’s VIN code. \nplateNumber \nString \nyes \nVehicle’s name. \nlicensePlateNumber \nString \nno \nVehicle’s license plate number. \ntabImei \nString \nno \nVehicle’s tab imei. \nfhTabImei \nString \nno \nVehicle’s fleethand tab imei. \ntabSimNo \nString \nno \nVehicle’s tab phone number. \ntruckBrand \nString \nno \nVehicle’s brand. \nfuelTank \nInteger \nno \nVehicle’s fuel tank capacity. \nadBlueFuelTank \nInteger \nno \nVehicle’s ad blue fuel tank capacity. \ncompanyCode \nString \nyes \nVehicle’s company code. \nemission \nString \nno \nVehicle’s emission class.",
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "put__api_vehicle_simple_update_vehicle_info",
    "method": "PUT",
    "path": "/api/vehicle/simple-update-vehicle-info",
    "summary": "This method returns all vehicles groups.",
    "description": "This method returns all vehicles groups.",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "vehicleId",
        "data_type": "integer",
        "required": true,
        "description": "Fleethand vehicle id.",
        "location": "path"
      },
      {
        "name": "vinCode",
        "data_type": "string",
        "required": false,
        "description": "Vehicle’s VIN code.",
        "location": "path"
      },
      {
        "name": "plateNumber",
        "data_type": "string",
        "required": false,
        "description": "Vehicle’s name.",
        "location": "query"
      },
      {
        "name": "licensePlateNumber",
        "data_type": "string",
        "required": false,
        "description": "Vehicle’s license plate number.",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_vehicles_group",
    "method": "GET",
    "path": "/api/vehicles-group",
    "summary": "This method creates vehicles group or updates vehicles group title.",
    "description": "This method creates vehicles group or updates vehicles group title.",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": "{\n\"status\":200,\n\"payload\": [\n{\n\"groupId\": 1,\n\"title\": \"Two vehicles group\",\n\"vehiclesIds\": [\n11,\n22,\n]\n},\n{\n\"groupId\": 2,\n\"title\": \"Empty group\",\n\"vehiclesIds\": []\n},\n{\n\"groupId\": 3,\n\"title\": \"One vehicle group\",\n\"vehiclesIds\": [\n15\n]\n}",
        "validated": {
          "is_valid_json": false,
          "has_status": false,
          "has_payload": false,
          "structure_type": "unknown"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "post__api_vehicles_group",
    "method": "POST",
    "path": "/api/vehicles-group",
    "summary": "This method adds vehicles to a vehicles group.",
    "description": "This method adds vehicles to a vehicles group.",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": {
      "groupId": 1,
      "title": "Group to update"
    },
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": 1
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "put__api_vehicles_group_add_vehicles",
    "method": "PUT",
    "path": "/api/vehicles-group/add-vehicles",
    "summary": "This method removes vehicles from a vehicles group.",
    "description": "This method removes vehicles from a vehicles group.",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": {
      "groupId": 1,
      "vehicleIds": [
        100,
        1200
      ]
    },
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "put__api_vehicles_group_remove_vehicles",
    "method": "PUT",
    "path": "/api/vehicles-group/remove-vehicles",
    "summary": "This method deletes vehicles group.",
    "description": "This method deletes vehicles group.",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": {
      "groupId": 1,
      "vehicleIds": [
        50,
        1800
      ]
    },
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "delete__api_vehicles_group",
    "method": "DELETE",
    "path": "/api/vehicles-group",
    "summary": "This method assigns a list of activities to the provided client.",
    "description": "This method assigns a list of activities to the provided client.",
    "category": "vehicles",
    "category_info": {
      "name": "vehicles",
      "description": "Vehicle and device management",
      "priority": "high",
      "confidence": "high",
      "matched_by": "url_pattern"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": "OK"
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 1.0
  },
  {
    "operation_id": "get__api_user_actions",
    "method": "GET",
    "path": "/api/user-actions",
    "summary": "GET user-actions",
    "description": "This method retrieves user-actions data via the API.",
    "category": "general",
    "category_info": {
      "name": "general",
      "description": "General API operations",
      "priority": "medium",
      "confidence": "low",
      "matched_by": "default"
    },
    "headers": [
      {
        "name": "apiKey",
        "data_type": "string",
        "required": true,
        "description": "Encoded api key."
      },
      {
        "name": "externalId",
        "data_type": "integer",
        "required": true,
        "description": "Provided external id."
      }
    ],
    "parameters": [
      {
        "name": "from",
        "data_type": "string",
        "required": true,
        "description": "Time from which period",
        "location": "query"
      }
    ],
    "request_body": null,
    "responses": [
      {
        "status_code": "200",
        "description": "HTTP 200 response",
        "example": {
          "status": 200,
          "payload": [
            {
              "email": "fleethand@fleethand.com",
              "ipAddress": "00.111.111.111",
              "occurredAt": "2023-08-30T23:20:17.283",
              "type": "LOGIN",
              "successful": false
            },
            {
              "email": "fleethand@fleethand.com",
              "ipAddress": "00.111.111.111",
              "occurredAt": "2023-08-30T23:25:45.124",
              "type": "CHANGE_PASSWORD",
              "successful": true
            },
            {
              "email": "fleethand@fleethand.com",
              "ipAddress": "00.111.111.111",
              "occurredAt": "2023-08-30T23:26:26.751",
              "type": "LOGIN",
              "successful": true
            }
          ]
        },
        "validated": {
          "is_valid_json": true,
          "has_status": true,
          "has_payload": true,
          "structure_type": "object"
        }
      }
    ],
    "quality_score": 0.2
  }
]